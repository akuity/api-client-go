// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: types/k8s/v1/k8s.proto

package k8sv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeprecatedInfoSeverity int32

const (
	DeprecatedInfoSeverity_DEPRECATED_INFO_SEVERITY_UNSPECIFIED DeprecatedInfoSeverity = 0
	DeprecatedInfoSeverity_DEPRECATED_INFO_SEVERITY_LOW         DeprecatedInfoSeverity = 1
	DeprecatedInfoSeverity_DEPRECATED_INFO_SEVERITY_MEDIUM      DeprecatedInfoSeverity = 2
	DeprecatedInfoSeverity_DEPRECATED_INFO_SEVERITY_HIGH        DeprecatedInfoSeverity = 3
	DeprecatedInfoSeverity_DEPRECATED_INFO_SEVERITY_CRITICAL    DeprecatedInfoSeverity = 4
)

// Enum value maps for DeprecatedInfoSeverity.
var (
	DeprecatedInfoSeverity_name = map[int32]string{
		0: "DEPRECATED_INFO_SEVERITY_UNSPECIFIED",
		1: "DEPRECATED_INFO_SEVERITY_LOW",
		2: "DEPRECATED_INFO_SEVERITY_MEDIUM",
		3: "DEPRECATED_INFO_SEVERITY_HIGH",
		4: "DEPRECATED_INFO_SEVERITY_CRITICAL",
	}
	DeprecatedInfoSeverity_value = map[string]int32{
		"DEPRECATED_INFO_SEVERITY_UNSPECIFIED": 0,
		"DEPRECATED_INFO_SEVERITY_LOW":         1,
		"DEPRECATED_INFO_SEVERITY_MEDIUM":      2,
		"DEPRECATED_INFO_SEVERITY_HIGH":        3,
		"DEPRECATED_INFO_SEVERITY_CRITICAL":    4,
	}
)

func (x DeprecatedInfoSeverity) Enum() *DeprecatedInfoSeverity {
	p := new(DeprecatedInfoSeverity)
	*p = x
	return p
}

func (x DeprecatedInfoSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeprecatedInfoSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_types_k8s_v1_k8s_proto_enumTypes[0].Descriptor()
}

func (DeprecatedInfoSeverity) Type() protoreflect.EnumType {
	return &file_types_k8s_v1_k8s_proto_enumTypes[0]
}

func (x DeprecatedInfoSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeprecatedInfoSeverity.Descriptor instead.
func (DeprecatedInfoSeverity) EnumDescriptor() ([]byte, []int) {
	return file_types_k8s_v1_k8s_proto_rawDescGZIP(), []int{0}
}

type ResourceCategory int32

const (
	ResourceCategory_RESOURCE_CATEGORY_UNSPECIFIED        ResourceCategory = 0
	ResourceCategory_RESOURCE_CATEGORY_WORKLOADS          ResourceCategory = 1
	ResourceCategory_RESOURCE_CATEGORY_NETWORKING         ResourceCategory = 2
	ResourceCategory_RESOURCE_CATEGORY_STORAGE            ResourceCategory = 3
	ResourceCategory_RESOURCE_CATEGORY_CONFIGURATION      ResourceCategory = 4
	ResourceCategory_RESOURCE_CATEGORY_RESOURCE_POLICY    ResourceCategory = 5
	ResourceCategory_RESOURCE_CATEGORY_RBAC               ResourceCategory = 6
	ResourceCategory_RESOURCE_CATEGORY_CLUSTER_MANAGEMENT ResourceCategory = 7
	ResourceCategory_RESOURCE_CATEGORY_ADMISSION          ResourceCategory = 8
	ResourceCategory_RESOURCE_CATEGORY_CUSTOM_RESOURCE    ResourceCategory = 9
	ResourceCategory_RESOURCE_CATEGORY_OTHERS             ResourceCategory = 10
)

// Enum value maps for ResourceCategory.
var (
	ResourceCategory_name = map[int32]string{
		0:  "RESOURCE_CATEGORY_UNSPECIFIED",
		1:  "RESOURCE_CATEGORY_WORKLOADS",
		2:  "RESOURCE_CATEGORY_NETWORKING",
		3:  "RESOURCE_CATEGORY_STORAGE",
		4:  "RESOURCE_CATEGORY_CONFIGURATION",
		5:  "RESOURCE_CATEGORY_RESOURCE_POLICY",
		6:  "RESOURCE_CATEGORY_RBAC",
		7:  "RESOURCE_CATEGORY_CLUSTER_MANAGEMENT",
		8:  "RESOURCE_CATEGORY_ADMISSION",
		9:  "RESOURCE_CATEGORY_CUSTOM_RESOURCE",
		10: "RESOURCE_CATEGORY_OTHERS",
	}
	ResourceCategory_value = map[string]int32{
		"RESOURCE_CATEGORY_UNSPECIFIED":        0,
		"RESOURCE_CATEGORY_WORKLOADS":          1,
		"RESOURCE_CATEGORY_NETWORKING":         2,
		"RESOURCE_CATEGORY_STORAGE":            3,
		"RESOURCE_CATEGORY_CONFIGURATION":      4,
		"RESOURCE_CATEGORY_RESOURCE_POLICY":    5,
		"RESOURCE_CATEGORY_RBAC":               6,
		"RESOURCE_CATEGORY_CLUSTER_MANAGEMENT": 7,
		"RESOURCE_CATEGORY_ADMISSION":          8,
		"RESOURCE_CATEGORY_CUSTOM_RESOURCE":    9,
		"RESOURCE_CATEGORY_OTHERS":             10,
	}
)

func (x ResourceCategory) Enum() *ResourceCategory {
	p := new(ResourceCategory)
	*p = x
	return p
}

func (x ResourceCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_types_k8s_v1_k8s_proto_enumTypes[1].Descriptor()
}

func (ResourceCategory) Type() protoreflect.EnumType {
	return &file_types_k8s_v1_k8s_proto_enumTypes[1]
}

func (x ResourceCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceCategory.Descriptor instead.
func (ResourceCategory) EnumDescriptor() ([]byte, []int) {
	return file_types_k8s_v1_k8s_proto_rawDescGZIP(), []int{1}
}

type ResourceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupVersionKind *GroupVersionKind `protobuf:"bytes,1,opt,name=group_version_kind,json=groupVersionKind,proto3" json:"group_version_kind,omitempty"`
	Columns          []*ColumnInfo     `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	Category         *ResourceCategory `protobuf:"varint,3,opt,name=category,proto3,enum=akuity.types.k8s.v1.ResourceCategory,oneof" json:"category,omitempty"`
	DeprecatedInfo   *DeprecatedInfo   `protobuf:"bytes,4,opt,name=deprecated_info,json=deprecatedInfo,proto3,oneof" json:"deprecated_info,omitempty"`
	ClusterScoped    bool              `protobuf:"varint,5,opt,name=cluster_scoped,json=clusterScoped,proto3" json:"cluster_scoped,omitempty"`
}

func (x *ResourceType) Reset() {
	*x = ResourceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_k8s_v1_k8s_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceType) ProtoMessage() {}

func (x *ResourceType) ProtoReflect() protoreflect.Message {
	mi := &file_types_k8s_v1_k8s_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceType.ProtoReflect.Descriptor instead.
func (*ResourceType) Descriptor() ([]byte, []int) {
	return file_types_k8s_v1_k8s_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceType) GetGroupVersionKind() *GroupVersionKind {
	if x != nil {
		return x.GroupVersionKind
	}
	return nil
}

func (x *ResourceType) GetColumns() []*ColumnInfo {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *ResourceType) GetCategory() ResourceCategory {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ResourceCategory_RESOURCE_CATEGORY_UNSPECIFIED
}

func (x *ResourceType) GetDeprecatedInfo() *DeprecatedInfo {
	if x != nil {
		return x.DeprecatedInfo
	}
	return nil
}

func (x *ResourceType) GetClusterScoped() bool {
	if x != nil {
		return x.ClusterScoped
	}
	return false
}

type DeprecatedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deprecated        bool                   `protobuf:"varint,1,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
	Message           string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DeprecatedIn      *string                `protobuf:"bytes,3,opt,name=deprecated_in,json=deprecatedIn,proto3,oneof" json:"deprecated_in,omitempty"`
	UnavailableIn     *string                `protobuf:"bytes,4,opt,name=unavailable_in,json=unavailableIn,proto3,oneof" json:"unavailable_in,omitempty"`
	MigrateTo         *GroupVersionKind      `protobuf:"bytes,5,opt,name=migrate_to,json=migrateTo,proto3,oneof" json:"migrate_to,omitempty"`
	ClusterId         *string                `protobuf:"bytes,6,opt,name=cluster_id,json=clusterId,proto3,oneof" json:"cluster_id,omitempty"`
	GroupVersionKind  *GroupVersionKind      `protobuf:"bytes,7,opt,name=group_version_kind,json=groupVersionKind,proto3,oneof" json:"group_version_kind,omitempty"`
	ResourceCount     *uint32                `protobuf:"varint,8,opt,name=resource_count,json=resourceCount,proto3,oneof" json:"resource_count,omitempty"`
	KubernetesVersion *string                `protobuf:"bytes,9,opt,name=kubernetes_version,json=kubernetesVersion,proto3,oneof" json:"kubernetes_version,omitempty"`
	InstanceId        *string                `protobuf:"bytes,10,opt,name=instance_id,json=instanceId,proto3,oneof" json:"instance_id,omitempty"`
	Severity          DeprecatedInfoSeverity `protobuf:"varint,11,opt,name=severity,proto3,enum=akuity.types.k8s.v1.DeprecatedInfoSeverity" json:"severity,omitempty"`
}

func (x *DeprecatedInfo) Reset() {
	*x = DeprecatedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_k8s_v1_k8s_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeprecatedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeprecatedInfo) ProtoMessage() {}

func (x *DeprecatedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_types_k8s_v1_k8s_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeprecatedInfo.ProtoReflect.Descriptor instead.
func (*DeprecatedInfo) Descriptor() ([]byte, []int) {
	return file_types_k8s_v1_k8s_proto_rawDescGZIP(), []int{1}
}

func (x *DeprecatedInfo) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

func (x *DeprecatedInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeprecatedInfo) GetDeprecatedIn() string {
	if x != nil && x.DeprecatedIn != nil {
		return *x.DeprecatedIn
	}
	return ""
}

func (x *DeprecatedInfo) GetUnavailableIn() string {
	if x != nil && x.UnavailableIn != nil {
		return *x.UnavailableIn
	}
	return ""
}

func (x *DeprecatedInfo) GetMigrateTo() *GroupVersionKind {
	if x != nil {
		return x.MigrateTo
	}
	return nil
}

func (x *DeprecatedInfo) GetClusterId() string {
	if x != nil && x.ClusterId != nil {
		return *x.ClusterId
	}
	return ""
}

func (x *DeprecatedInfo) GetGroupVersionKind() *GroupVersionKind {
	if x != nil {
		return x.GroupVersionKind
	}
	return nil
}

func (x *DeprecatedInfo) GetResourceCount() uint32 {
	if x != nil && x.ResourceCount != nil {
		return *x.ResourceCount
	}
	return 0
}

func (x *DeprecatedInfo) GetKubernetesVersion() string {
	if x != nil && x.KubernetesVersion != nil {
		return *x.KubernetesVersion
	}
	return ""
}

func (x *DeprecatedInfo) GetInstanceId() string {
	if x != nil && x.InstanceId != nil {
		return *x.InstanceId
	}
	return ""
}

func (x *DeprecatedInfo) GetSeverity() DeprecatedInfoSeverity {
	if x != nil {
		return x.Severity
	}
	return DeprecatedInfoSeverity_DEPRECATED_INFO_SEVERITY_UNSPECIFIED
}

type GroupVersionKind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group   string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Kind    string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *GroupVersionKind) Reset() {
	*x = GroupVersionKind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_k8s_v1_k8s_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVersionKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVersionKind) ProtoMessage() {}

func (x *GroupVersionKind) ProtoReflect() protoreflect.Message {
	mi := &file_types_k8s_v1_k8s_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVersionKind.ProtoReflect.Descriptor instead.
func (*GroupVersionKind) Descriptor() ([]byte, []int) {
	return file_types_k8s_v1_k8s_proto_rawDescGZIP(), []int{2}
}

func (x *GroupVersionKind) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GroupVersionKind) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GroupVersionKind) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type ColumnInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ColumnInfo) Reset() {
	*x = ColumnInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_k8s_v1_k8s_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnInfo) ProtoMessage() {}

func (x *ColumnInfo) ProtoReflect() protoreflect.Message {
	mi := &file_types_k8s_v1_k8s_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnInfo.ProtoReflect.Descriptor instead.
func (*ColumnInfo) Descriptor() ([]byte, []int) {
	return file_types_k8s_v1_k8s_proto_rawDescGZIP(), []int{3}
}

func (x *ColumnInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ColumnInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

var File_types_k8s_v1_k8s_proto protoreflect.FileDescriptor

var file_types_k8s_v1_k8s_proto_rawDesc = []byte{
	0x0a, 0x16, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6b, 0x38, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6b,
	0x38, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x81, 0x03,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x53,
	0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6b, 0x75,
	0x69, 0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x46,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x6b, 0x38, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x51, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6b,
	0x38, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x64,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0xcc, 0x05, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28,
	0x0a, 0x0d, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x75, 0x6e, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0d, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x0a, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x48,
	0x02, 0x52, 0x09, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x58, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6b,
	0x38, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x48, 0x04, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x12, 0x6b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x11, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x07, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x72,
	0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x22, 0x56, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x2a, 0xd3, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x24, 0x44,
	0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53,
	0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41,
	0x54, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54,
	0x59, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x45, 0x50, 0x52, 0x45,
	0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d,
	0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f,
	0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03, 0x12,
	0x25, 0x0a, 0x21, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x49, 0x54,
	0x49, 0x43, 0x41, 0x4c, 0x10, 0x04, 0x2a, 0x8f, 0x03, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x1d, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f,
	0x0a, 0x1b, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47,
	0x4f, 0x52, 0x59, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x4c, 0x4f, 0x41, 0x44, 0x53, 0x10, 0x01, 0x12,
	0x20, 0x0a, 0x1c, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45,
	0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41,
	0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x10, 0x03,
	0x12, 0x23, 0x0a, 0x1f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54,
	0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x25, 0x0a, 0x21, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52,
	0x59, 0x5f, 0x52, 0x42, 0x41, 0x43, 0x10, 0x06, 0x12, 0x28, 0x0a, 0x24, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x43, 0x4c,
	0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43,
	0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x10, 0x08, 0x12, 0x25, 0x0a, 0x21, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x09, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f,
	0x4f, 0x54, 0x48, 0x45, 0x52, 0x53, 0x10, 0x0a, 0x42, 0xd6, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6b, 0x38,
	0x73, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x4b, 0x38, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6b, 0x75,
	0x69, 0x74, 0x79, 0x69, 0x6f, 0x2f, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2d, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6b, 0x38, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x6b,
	0x38, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x54, 0x4b, 0xaa, 0x02, 0x13, 0x41, 0x6b, 0x75,
	0x69, 0x74, 0x79, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4b, 0x38, 0x73, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x13, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x5c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x5c,
	0x4b, 0x38, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x5c,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x4b, 0x38, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x41, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x3a, 0x3a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x3a, 0x3a, 0x4b, 0x38, 0x73, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_k8s_v1_k8s_proto_rawDescOnce sync.Once
	file_types_k8s_v1_k8s_proto_rawDescData = file_types_k8s_v1_k8s_proto_rawDesc
)

func file_types_k8s_v1_k8s_proto_rawDescGZIP() []byte {
	file_types_k8s_v1_k8s_proto_rawDescOnce.Do(func() {
		file_types_k8s_v1_k8s_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_k8s_v1_k8s_proto_rawDescData)
	})
	return file_types_k8s_v1_k8s_proto_rawDescData
}

var file_types_k8s_v1_k8s_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_types_k8s_v1_k8s_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_types_k8s_v1_k8s_proto_goTypes = []interface{}{
	(DeprecatedInfoSeverity)(0), // 0: akuity.types.k8s.v1.DeprecatedInfoSeverity
	(ResourceCategory)(0),       // 1: akuity.types.k8s.v1.ResourceCategory
	(*ResourceType)(nil),        // 2: akuity.types.k8s.v1.ResourceType
	(*DeprecatedInfo)(nil),      // 3: akuity.types.k8s.v1.DeprecatedInfo
	(*GroupVersionKind)(nil),    // 4: akuity.types.k8s.v1.GroupVersionKind
	(*ColumnInfo)(nil),          // 5: akuity.types.k8s.v1.ColumnInfo
}
var file_types_k8s_v1_k8s_proto_depIdxs = []int32{
	4, // 0: akuity.types.k8s.v1.ResourceType.group_version_kind:type_name -> akuity.types.k8s.v1.GroupVersionKind
	5, // 1: akuity.types.k8s.v1.ResourceType.columns:type_name -> akuity.types.k8s.v1.ColumnInfo
	1, // 2: akuity.types.k8s.v1.ResourceType.category:type_name -> akuity.types.k8s.v1.ResourceCategory
	3, // 3: akuity.types.k8s.v1.ResourceType.deprecated_info:type_name -> akuity.types.k8s.v1.DeprecatedInfo
	4, // 4: akuity.types.k8s.v1.DeprecatedInfo.migrate_to:type_name -> akuity.types.k8s.v1.GroupVersionKind
	4, // 5: akuity.types.k8s.v1.DeprecatedInfo.group_version_kind:type_name -> akuity.types.k8s.v1.GroupVersionKind
	0, // 6: akuity.types.k8s.v1.DeprecatedInfo.severity:type_name -> akuity.types.k8s.v1.DeprecatedInfoSeverity
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_types_k8s_v1_k8s_proto_init() }
func file_types_k8s_v1_k8s_proto_init() {
	if File_types_k8s_v1_k8s_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_k8s_v1_k8s_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_k8s_v1_k8s_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeprecatedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_k8s_v1_k8s_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupVersionKind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_k8s_v1_k8s_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_types_k8s_v1_k8s_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_types_k8s_v1_k8s_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_k8s_v1_k8s_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_k8s_v1_k8s_proto_goTypes,
		DependencyIndexes: file_types_k8s_v1_k8s_proto_depIdxs,
		EnumInfos:         file_types_k8s_v1_k8s_proto_enumTypes,
		MessageInfos:      file_types_k8s_v1_k8s_proto_msgTypes,
	}.Build()
	File_types_k8s_v1_k8s_proto = out.File
	file_types_k8s_v1_k8s_proto_rawDesc = nil
	file_types_k8s_v1_k8s_proto_goTypes = nil
	file_types_k8s_v1_k8s_proto_depIdxs = nil
}
