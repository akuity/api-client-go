// Code generated by protoc-gen-grpc-gateway-client. DO NOT EDIT.
// source: apikey/v1/apikey.proto

package apikeyv1

import (
	context "context"
	fmt "fmt"
	gateway "github.com/akuity/grpc-gateway-client/pkg/grpc/gateway"
)

// APIKeyServiceGatewayClient is the interface for APIKeyService service client.
type APIKeyServiceGatewayClient interface {
	GetAPIKey(context.Context, *GetAPIKeyRequest) (*GetAPIKeyResponse, error)
	DeleteAPIKey(context.Context, *DeleteAPIKeyRequest) (*DeleteAPIKeyResponse, error)
	RegenerateAPIKeySecret(context.Context, *RegenerateAPIKeySecretRequest) (*RegenerateAPIKeySecretResponse, error)
}

func NewAPIKeyServiceGatewayClient(c gateway.Client) APIKeyServiceGatewayClient {
	return &aPIKeyServiceGatewayClient{
		gwc: c,
	}
}

type aPIKeyServiceGatewayClient struct {
	gwc gateway.Client
}

func (c *aPIKeyServiceGatewayClient) GetAPIKey(ctx context.Context, req *GetAPIKeyRequest) (*GetAPIKeyResponse, error) {
	gwReq := c.gwc.NewRequest("GET", "/api/v1/apikeys/{id}")
	gwReq.SetPathParam("id", fmt.Sprintf("%v", req.Id))
	return gateway.DoRequest[GetAPIKeyResponse](ctx, gwReq)
}

func (c *aPIKeyServiceGatewayClient) DeleteAPIKey(ctx context.Context, req *DeleteAPIKeyRequest) (*DeleteAPIKeyResponse, error) {
	gwReq := c.gwc.NewRequest("DELETE", "/api/v1/apikeys/{id}")
	gwReq.SetPathParam("id", fmt.Sprintf("%v", req.Id))
	gwReq.SetBody(req)
	return gateway.DoRequest[DeleteAPIKeyResponse](ctx, gwReq)
}

func (c *aPIKeyServiceGatewayClient) RegenerateAPIKeySecret(ctx context.Context, req *RegenerateAPIKeySecretRequest) (*RegenerateAPIKeySecretResponse, error) {
	gwReq := c.gwc.NewRequest("POST", "/api/v1/apikeys/{id}/regenerate")
	gwReq.SetPathParam("id", fmt.Sprintf("%v", req.Id))
	gwReq.SetBody(req)
	return gateway.DoRequest[RegenerateAPIKeySecretResponse](ctx, gwReq)
}
