// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: notifications/v1/webhook.proto

package webhookv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// `WebhookEventType` defines the types of webhook events.
type WebhookEventType int32

const (
	WebhookEventType_WEBHOOK_EVENT_TYPE_UNSPECIFIED WebhookEventType = 0 // Unspecified event type.
	WebhookEventType_WEBHOOK_EVENT_TYPE_PING        WebhookEventType = 1 // Ping event type.
	WebhookEventType_WEBHOOK_EVENT_TYPE_AUDIT       WebhookEventType = 2 // Audit log event type.
	WebhookEventType_WEBHOOK_EVENT_TYPE_USAGE       WebhookEventType = 3 // Usage alert event type.
)

// Enum value maps for WebhookEventType.
var (
	WebhookEventType_name = map[int32]string{
		0: "WEBHOOK_EVENT_TYPE_UNSPECIFIED",
		1: "WEBHOOK_EVENT_TYPE_PING",
		2: "WEBHOOK_EVENT_TYPE_AUDIT",
		3: "WEBHOOK_EVENT_TYPE_USAGE",
	}
	WebhookEventType_value = map[string]int32{
		"WEBHOOK_EVENT_TYPE_UNSPECIFIED": 0,
		"WEBHOOK_EVENT_TYPE_PING":        1,
		"WEBHOOK_EVENT_TYPE_AUDIT":       2,
		"WEBHOOK_EVENT_TYPE_USAGE":       3,
	}
)

func (x WebhookEventType) Enum() *WebhookEventType {
	p := new(WebhookEventType)
	*p = x
	return p
}

func (x WebhookEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebhookEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_notifications_v1_webhook_proto_enumTypes[0].Descriptor()
}

func (WebhookEventType) Type() protoreflect.EnumType {
	return &file_notifications_v1_webhook_proto_enumTypes[0]
}

func (x WebhookEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebhookEventType.Descriptor instead.
func (WebhookEventType) EnumDescriptor() ([]byte, []int) {
	return file_notifications_v1_webhook_proto_rawDescGZIP(), []int{0}
}

// `WebhookEventPayload` is the payload sent to the webhook endpoint.
type WebhookEventPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTime      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`                                                        // The time the event was triggered.
	EventType      WebhookEventType       `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=akuity.notifications.webhook.v1.WebhookEventType" json:"event_type,omitempty"` // The type of event.
	OrganizationId string                 `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`                                         // The organization ID.
	EventId        string                 `protobuf:"bytes,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`                                                              // The event ID.
	// Types that are assignable to Metadata:
	//
	//	*WebhookEventPayload_PingEvent
	//	*WebhookEventPayload_UsageEvent
	//	*WebhookEventPayload_AuditEvent
	Metadata isWebhookEventPayload_Metadata `protobuf_oneof:"metadata"`
}

func (x *WebhookEventPayload) Reset() {
	*x = WebhookEventPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1_webhook_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookEventPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEventPayload) ProtoMessage() {}

func (x *WebhookEventPayload) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1_webhook_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEventPayload.ProtoReflect.Descriptor instead.
func (*WebhookEventPayload) Descriptor() ([]byte, []int) {
	return file_notifications_v1_webhook_proto_rawDescGZIP(), []int{0}
}

func (x *WebhookEventPayload) GetEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTime
	}
	return nil
}

func (x *WebhookEventPayload) GetEventType() WebhookEventType {
	if x != nil {
		return x.EventType
	}
	return WebhookEventType_WEBHOOK_EVENT_TYPE_UNSPECIFIED
}

func (x *WebhookEventPayload) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *WebhookEventPayload) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (m *WebhookEventPayload) GetMetadata() isWebhookEventPayload_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *WebhookEventPayload) GetPingEvent() *PingEvent {
	if x, ok := x.GetMetadata().(*WebhookEventPayload_PingEvent); ok {
		return x.PingEvent
	}
	return nil
}

func (x *WebhookEventPayload) GetUsageEvent() *UsageUpdateEvent {
	if x, ok := x.GetMetadata().(*WebhookEventPayload_UsageEvent); ok {
		return x.UsageEvent
	}
	return nil
}

func (x *WebhookEventPayload) GetAuditEvent() *AuditEvent {
	if x, ok := x.GetMetadata().(*WebhookEventPayload_AuditEvent); ok {
		return x.AuditEvent
	}
	return nil
}

type isWebhookEventPayload_Metadata interface {
	isWebhookEventPayload_Metadata()
}

type WebhookEventPayload_PingEvent struct {
	PingEvent *PingEvent `protobuf:"bytes,5,opt,name=ping_event,json=pingEvent,proto3,oneof"` // Metadata for a ping event.
}

type WebhookEventPayload_UsageEvent struct {
	UsageEvent *UsageUpdateEvent `protobuf:"bytes,6,opt,name=usage_event,json=usageEvent,proto3,oneof"` // Metadata for a usage update event.
}

type WebhookEventPayload_AuditEvent struct {
	AuditEvent *AuditEvent `protobuf:"bytes,7,opt,name=audit_event,json=auditEvent,proto3,oneof"` // Metadata for an audit event.
}

func (*WebhookEventPayload_PingEvent) isWebhookEventPayload_Metadata() {}

func (*WebhookEventPayload_UsageEvent) isWebhookEventPayload_Metadata() {}

func (*WebhookEventPayload_AuditEvent) isWebhookEventPayload_Metadata() {}

// `PingEvent` contains metadata for a ping event.
type PingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// NotificationConfigID is the organization notification config ID that triggered the ping
	NotificationConfigId string `protobuf:"bytes,1,opt,name=notification_config_id,json=notificationConfigId,proto3" json:"notification_config_id,omitempty"`
}

func (x *PingEvent) Reset() {
	*x = PingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1_webhook_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingEvent) ProtoMessage() {}

func (x *PingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1_webhook_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingEvent.ProtoReflect.Descriptor instead.
func (*PingEvent) Descriptor() ([]byte, []int) {
	return file_notifications_v1_webhook_proto_rawDescGZIP(), []int{1}
}

func (x *PingEvent) GetNotificationConfigId() string {
	if x != nil {
		return x.NotificationConfigId
	}
	return ""
}

type UsageUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product        string  `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`                                       // The product associated with the usage update. E.g. "ArgoCD", "Kargo", "Akuity Agent".
	UsageType      string  `protobuf:"bytes,2,opt,name=usage_type,json=usageType,proto3" json:"usage_type,omitempty"`                  // The type of usage. E.g. "applications", "projects".
	UsageThreshold float64 `protobuf:"fixed64,3,opt,name=usage_threshold,json=usageThreshold,proto3" json:"usage_threshold,omitempty"` // The usage threshold.
	MaxLimit       int64   `protobuf:"varint,4,opt,name=max_limit,json=maxLimit,proto3" json:"max_limit,omitempty"`                    // The maximum limit.
	Usage          int64   `protobuf:"varint,5,opt,name=usage,proto3" json:"usage,omitempty"`                                          // The current usage.
}

func (x *UsageUpdateEvent) Reset() {
	*x = UsageUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1_webhook_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsageUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageUpdateEvent) ProtoMessage() {}

func (x *UsageUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1_webhook_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageUpdateEvent.ProtoReflect.Descriptor instead.
func (*UsageUpdateEvent) Descriptor() ([]byte, []int) {
	return file_notifications_v1_webhook_proto_rawDescGZIP(), []int{2}
}

func (x *UsageUpdateEvent) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *UsageUpdateEvent) GetUsageType() string {
	if x != nil {
		return x.UsageType
	}
	return ""
}

func (x *UsageUpdateEvent) GetUsageThreshold() float64 {
	if x != nil {
		return x.UsageThreshold
	}
	return 0
}

func (x *UsageUpdateEvent) GetMaxLimit() int64 {
	if x != nil {
		return x.MaxLimit
	}
	return 0
}

func (x *UsageUpdateEvent) GetUsage() int64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

// `AuditEvent` contains metadata for an audit event.
type AuditEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp string                        `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // The time the event was triggered.
	Action    string                        `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`       // The action that was performed.
	Actor     *AuditEvent_EventAuditActor   `protobuf:"bytes,3,opt,name=actor,proto3" json:"actor,omitempty"`         // The actor that triggered the event.
	Object    *AuditEvent_EventAuditObject  `protobuf:"bytes,4,opt,name=object,proto3" json:"object,omitempty"`       // The object that was acted upon.
	Details   *AuditEvent_EventAuditDetails `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`     // The details of the event.
}

func (x *AuditEvent) Reset() {
	*x = AuditEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1_webhook_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEvent) ProtoMessage() {}

func (x *AuditEvent) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1_webhook_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEvent.ProtoReflect.Descriptor instead.
func (*AuditEvent) Descriptor() ([]byte, []int) {
	return file_notifications_v1_webhook_proto_rawDescGZIP(), []int{3}
}

func (x *AuditEvent) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *AuditEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *AuditEvent) GetActor() *AuditEvent_EventAuditActor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *AuditEvent) GetObject() *AuditEvent_EventAuditObject {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *AuditEvent) GetDetails() *AuditEvent_EventAuditDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type AuditEvent_EventAuditActor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`   // The type of actor.
	Id   string  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`       // The ID of the actor.
	Ip   *string `protobuf:"bytes,3,opt,name=ip,proto3,oneof" json:"ip,omitempty"` // The IP address of the actor.
}

func (x *AuditEvent_EventAuditActor) Reset() {
	*x = AuditEvent_EventAuditActor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1_webhook_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditEvent_EventAuditActor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEvent_EventAuditActor) ProtoMessage() {}

func (x *AuditEvent_EventAuditActor) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1_webhook_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEvent_EventAuditActor.ProtoReflect.Descriptor instead.
func (*AuditEvent_EventAuditActor) Descriptor() ([]byte, []int) {
	return file_notifications_v1_webhook_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AuditEvent_EventAuditActor) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AuditEvent_EventAuditActor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuditEvent_EventAuditActor) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

type AuditEvent_EventAuditObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string                                          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                         // The type of object. E.g. "team_member", "team", "custom_role", "kargo_instance", etc.
	Id       *AuditEvent_EventAuditObject_EventAuditObjId    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                             // The ID of the object.
	ParentId *AuditEvent_EventAuditObject_EventAuditParentId `protobuf:"bytes,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"` // The parent ID of the object.
}

func (x *AuditEvent_EventAuditObject) Reset() {
	*x = AuditEvent_EventAuditObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1_webhook_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditEvent_EventAuditObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEvent_EventAuditObject) ProtoMessage() {}

func (x *AuditEvent_EventAuditObject) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1_webhook_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEvent_EventAuditObject.ProtoReflect.Descriptor instead.
func (*AuditEvent_EventAuditObject) Descriptor() ([]byte, []int) {
	return file_notifications_v1_webhook_proto_rawDescGZIP(), []int{3, 1}
}

func (x *AuditEvent_EventAuditObject) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AuditEvent_EventAuditObject) GetId() *AuditEvent_EventAuditObject_EventAuditObjId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AuditEvent_EventAuditObject) GetParentId() *AuditEvent_EventAuditObject_EventAuditParentId {
	if x != nil {
		return x.ParentId
	}
	return nil
}

type AuditEvent_EventAuditDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`                         // The message associated with the event.
	Patch      string `protobuf:"bytes,2,opt,name=patch,proto3" json:"patch,omitempty"`                             // The patch associated with the event.
	ActionType string `protobuf:"bytes,3,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"` // The action type.
}

func (x *AuditEvent_EventAuditDetails) Reset() {
	*x = AuditEvent_EventAuditDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1_webhook_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditEvent_EventAuditDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEvent_EventAuditDetails) ProtoMessage() {}

func (x *AuditEvent_EventAuditDetails) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1_webhook_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEvent_EventAuditDetails.ProtoReflect.Descriptor instead.
func (*AuditEvent_EventAuditDetails) Descriptor() ([]byte, []int) {
	return file_notifications_v1_webhook_proto_rawDescGZIP(), []int{3, 2}
}

func (x *AuditEvent_EventAuditDetails) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AuditEvent_EventAuditDetails) GetPatch() string {
	if x != nil {
		return x.Patch
	}
	return ""
}

func (x *AuditEvent_EventAuditDetails) GetActionType() string {
	if x != nil {
		return x.ActionType
	}
	return ""
}

type AuditEvent_EventAuditObject_EventAuditObjId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // The name of the object.
	Kind  string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`   // The kind of object.
	Group string `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"` // The group of the object.
}

func (x *AuditEvent_EventAuditObject_EventAuditObjId) Reset() {
	*x = AuditEvent_EventAuditObject_EventAuditObjId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1_webhook_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditEvent_EventAuditObject_EventAuditObjId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEvent_EventAuditObject_EventAuditObjId) ProtoMessage() {}

func (x *AuditEvent_EventAuditObject_EventAuditObjId) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1_webhook_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEvent_EventAuditObject_EventAuditObjId.ProtoReflect.Descriptor instead.
func (*AuditEvent_EventAuditObject_EventAuditObjId) Descriptor() ([]byte, []int) {
	return file_notifications_v1_webhook_proto_rawDescGZIP(), []int{3, 1, 0}
}

func (x *AuditEvent_EventAuditObject_EventAuditObjId) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuditEvent_EventAuditObject_EventAuditObjId) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AuditEvent_EventAuditObject_EventAuditObjId) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type AuditEvent_EventAuditObject_EventAuditParentId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                              // The name of the parent.
	ParentName      string `protobuf:"bytes,2,opt,name=parent_name,json=parentName,proto3" json:"parent_name,omitempty"`                // The name of the parent object's parent (if present).
	ApplicationName string `protobuf:"bytes,3,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"` // The name of the application.
}

func (x *AuditEvent_EventAuditObject_EventAuditParentId) Reset() {
	*x = AuditEvent_EventAuditObject_EventAuditParentId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1_webhook_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditEvent_EventAuditObject_EventAuditParentId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEvent_EventAuditObject_EventAuditParentId) ProtoMessage() {}

func (x *AuditEvent_EventAuditObject_EventAuditParentId) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1_webhook_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEvent_EventAuditObject_EventAuditParentId.ProtoReflect.Descriptor instead.
func (*AuditEvent_EventAuditObject_EventAuditParentId) Descriptor() ([]byte, []int) {
	return file_notifications_v1_webhook_proto_rawDescGZIP(), []int{3, 1, 1}
}

func (x *AuditEvent_EventAuditObject_EventAuditParentId) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuditEvent_EventAuditObject_EventAuditParentId) GetParentName() string {
	if x != nil {
		return x.ParentName
	}
	return ""
}

func (x *AuditEvent_EventAuditObject_EventAuditParentId) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

var File_notifications_v1_webhook_proto protoreflect.FileDescriptor

var file_notifications_v1_webhook_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1f, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe5, 0x03, 0x0a, 0x13, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6b, 0x75, 0x69,
	0x74, 0x79, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0a, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x70,
	0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x0b, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4e,
	0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x0a,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x09, 0x50, 0x69,
	0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0xa7, 0x01,
	0x0a, 0x10, 0x55, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb9, 0x07, 0x0a, 0x0a, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x05,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x54, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x57, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x51,
	0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x70, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69,
	0x70, 0x1a, 0xb9, 0x03, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x5c, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4f,
	0x62, 0x6a, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x6c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x4f, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x74, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x64, 0x0a,
	0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x2a, 0x8f, 0x01, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x57, 0x45, 0x42, 0x48,
	0x4f, 0x4f, 0x4b, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17,
	0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x45, 0x42,
	0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x55, 0x44, 0x49, 0x54, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x45, 0x42, 0x48, 0x4f,
	0x4f, 0x4b, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53,
	0x41, 0x47, 0x45, 0x10, 0x03, 0x42, 0x9e, 0x02, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x69, 0x6f, 0x2f, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x3b,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x4e, 0x57, 0xaa,
	0x02, 0x1f, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x1f, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x5c, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x2b, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x5c, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x22, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x3a, 0x3a, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x3a, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notifications_v1_webhook_proto_rawDescOnce sync.Once
	file_notifications_v1_webhook_proto_rawDescData = file_notifications_v1_webhook_proto_rawDesc
)

func file_notifications_v1_webhook_proto_rawDescGZIP() []byte {
	file_notifications_v1_webhook_proto_rawDescOnce.Do(func() {
		file_notifications_v1_webhook_proto_rawDescData = protoimpl.X.CompressGZIP(file_notifications_v1_webhook_proto_rawDescData)
	})
	return file_notifications_v1_webhook_proto_rawDescData
}

var file_notifications_v1_webhook_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_notifications_v1_webhook_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_notifications_v1_webhook_proto_goTypes = []interface{}{
	(WebhookEventType)(0),                                  // 0: akuity.notifications.webhook.v1.WebhookEventType
	(*WebhookEventPayload)(nil),                            // 1: akuity.notifications.webhook.v1.WebhookEventPayload
	(*PingEvent)(nil),                                      // 2: akuity.notifications.webhook.v1.PingEvent
	(*UsageUpdateEvent)(nil),                               // 3: akuity.notifications.webhook.v1.UsageUpdateEvent
	(*AuditEvent)(nil),                                     // 4: akuity.notifications.webhook.v1.AuditEvent
	(*AuditEvent_EventAuditActor)(nil),                     // 5: akuity.notifications.webhook.v1.AuditEvent.EventAuditActor
	(*AuditEvent_EventAuditObject)(nil),                    // 6: akuity.notifications.webhook.v1.AuditEvent.EventAuditObject
	(*AuditEvent_EventAuditDetails)(nil),                   // 7: akuity.notifications.webhook.v1.AuditEvent.EventAuditDetails
	(*AuditEvent_EventAuditObject_EventAuditObjId)(nil),    // 8: akuity.notifications.webhook.v1.AuditEvent.EventAuditObject.EventAuditObjId
	(*AuditEvent_EventAuditObject_EventAuditParentId)(nil), // 9: akuity.notifications.webhook.v1.AuditEvent.EventAuditObject.EventAuditParentId
	(*timestamppb.Timestamp)(nil),                          // 10: google.protobuf.Timestamp
}
var file_notifications_v1_webhook_proto_depIdxs = []int32{
	10, // 0: akuity.notifications.webhook.v1.WebhookEventPayload.event_time:type_name -> google.protobuf.Timestamp
	0,  // 1: akuity.notifications.webhook.v1.WebhookEventPayload.event_type:type_name -> akuity.notifications.webhook.v1.WebhookEventType
	2,  // 2: akuity.notifications.webhook.v1.WebhookEventPayload.ping_event:type_name -> akuity.notifications.webhook.v1.PingEvent
	3,  // 3: akuity.notifications.webhook.v1.WebhookEventPayload.usage_event:type_name -> akuity.notifications.webhook.v1.UsageUpdateEvent
	4,  // 4: akuity.notifications.webhook.v1.WebhookEventPayload.audit_event:type_name -> akuity.notifications.webhook.v1.AuditEvent
	5,  // 5: akuity.notifications.webhook.v1.AuditEvent.actor:type_name -> akuity.notifications.webhook.v1.AuditEvent.EventAuditActor
	6,  // 6: akuity.notifications.webhook.v1.AuditEvent.object:type_name -> akuity.notifications.webhook.v1.AuditEvent.EventAuditObject
	7,  // 7: akuity.notifications.webhook.v1.AuditEvent.details:type_name -> akuity.notifications.webhook.v1.AuditEvent.EventAuditDetails
	8,  // 8: akuity.notifications.webhook.v1.AuditEvent.EventAuditObject.id:type_name -> akuity.notifications.webhook.v1.AuditEvent.EventAuditObject.EventAuditObjId
	9,  // 9: akuity.notifications.webhook.v1.AuditEvent.EventAuditObject.parent_id:type_name -> akuity.notifications.webhook.v1.AuditEvent.EventAuditObject.EventAuditParentId
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_notifications_v1_webhook_proto_init() }
func file_notifications_v1_webhook_proto_init() {
	if File_notifications_v1_webhook_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notifications_v1_webhook_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookEventPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1_webhook_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1_webhook_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsageUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1_webhook_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1_webhook_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditEvent_EventAuditActor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1_webhook_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditEvent_EventAuditObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1_webhook_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditEvent_EventAuditDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1_webhook_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditEvent_EventAuditObject_EventAuditObjId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1_webhook_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditEvent_EventAuditObject_EventAuditParentId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_notifications_v1_webhook_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*WebhookEventPayload_PingEvent)(nil),
		(*WebhookEventPayload_UsageEvent)(nil),
		(*WebhookEventPayload_AuditEvent)(nil),
	}
	file_notifications_v1_webhook_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notifications_v1_webhook_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_notifications_v1_webhook_proto_goTypes,
		DependencyIndexes: file_notifications_v1_webhook_proto_depIdxs,
		EnumInfos:         file_notifications_v1_webhook_proto_enumTypes,
		MessageInfos:      file_notifications_v1_webhook_proto_msgTypes,
	}.Build()
	File_notifications_v1_webhook_proto = out.File
	file_notifications_v1_webhook_proto_rawDesc = nil
	file_notifications_v1_webhook_proto_goTypes = nil
	file_notifications_v1_webhook_proto_depIdxs = nil
}
