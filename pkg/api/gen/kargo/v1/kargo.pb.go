// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: kargo/v1/kargo.proto

package kargov1

import (
	v13 "github.com/akuity/api-client-go/pkg/api/gen/types/events/v1"
	v14 "github.com/akuity/api-client-go/pkg/api/gen/types/id/v1"
	v1 "github.com/akuity/api-client-go/pkg/api/gen/types/misc/v1"
	v11 "github.com/akuity/api-client-go/pkg/api/gen/types/status/health/v1"
	v12 "github.com/akuity/api-client-go/pkg/api/gen/types/status/reconciliation/v1"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PromotionField int32

const (
	PromotionField_PROMOTION_FIELD_UNSPECIFIED    PromotionField = 0
	PromotionField_PROMOTION_FIELD_STAGES         PromotionField = 1
	PromotionField_PROMOTION_FIELD_PROJECTS       PromotionField = 2
	PromotionField_PROMOTION_FIELD_INITIATORS     PromotionField = 3
	PromotionField_PROMOTION_FIELD_PROMOTIONS     PromotionField = 4
	PromotionField_PROMOTION_FIELD_INSTANCE_NAMES PromotionField = 5
)

// Enum value maps for PromotionField.
var (
	PromotionField_name = map[int32]string{
		0: "PROMOTION_FIELD_UNSPECIFIED",
		1: "PROMOTION_FIELD_STAGES",
		2: "PROMOTION_FIELD_PROJECTS",
		3: "PROMOTION_FIELD_INITIATORS",
		4: "PROMOTION_FIELD_PROMOTIONS",
		5: "PROMOTION_FIELD_INSTANCE_NAMES",
	}
	PromotionField_value = map[string]int32{
		"PROMOTION_FIELD_UNSPECIFIED":    0,
		"PROMOTION_FIELD_STAGES":         1,
		"PROMOTION_FIELD_PROJECTS":       2,
		"PROMOTION_FIELD_INITIATORS":     3,
		"PROMOTION_FIELD_PROMOTIONS":     4,
		"PROMOTION_FIELD_INSTANCE_NAMES": 5,
	}
)

func (x PromotionField) Enum() *PromotionField {
	p := new(PromotionField)
	*p = x
	return p
}

func (x PromotionField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PromotionField) Descriptor() protoreflect.EnumDescriptor {
	return file_kargo_v1_kargo_proto_enumTypes[0].Descriptor()
}

func (PromotionField) Type() protoreflect.EnumType {
	return &file_kargo_v1_kargo_proto_enumTypes[0]
}

func (x PromotionField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PromotionField.Descriptor instead.
func (PromotionField) EnumDescriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{0}
}

type PromotionGroupField int32

const (
	PromotionGroupField_PROMOTION_GROUP_FIELD_UNSPECIFIED    PromotionGroupField = 0
	PromotionGroupField_PROMOTION_GROUP_FIELD_STAGES         PromotionGroupField = 1
	PromotionGroupField_PROMOTION_GROUP_FIELD_PROJECTS       PromotionGroupField = 2
	PromotionGroupField_PROMOTION_GROUP_FIELD_INITIATORS     PromotionGroupField = 3
	PromotionGroupField_PROMOTION_GROUP_FIELD_INSTANCE_NAMES PromotionGroupField = 4
	PromotionGroupField_PROMOTION_GROUP_FIELD_STATUS         PromotionGroupField = 5
)

// Enum value maps for PromotionGroupField.
var (
	PromotionGroupField_name = map[int32]string{
		0: "PROMOTION_GROUP_FIELD_UNSPECIFIED",
		1: "PROMOTION_GROUP_FIELD_STAGES",
		2: "PROMOTION_GROUP_FIELD_PROJECTS",
		3: "PROMOTION_GROUP_FIELD_INITIATORS",
		4: "PROMOTION_GROUP_FIELD_INSTANCE_NAMES",
		5: "PROMOTION_GROUP_FIELD_STATUS",
	}
	PromotionGroupField_value = map[string]int32{
		"PROMOTION_GROUP_FIELD_UNSPECIFIED":    0,
		"PROMOTION_GROUP_FIELD_STAGES":         1,
		"PROMOTION_GROUP_FIELD_PROJECTS":       2,
		"PROMOTION_GROUP_FIELD_INITIATORS":     3,
		"PROMOTION_GROUP_FIELD_INSTANCE_NAMES": 4,
		"PROMOTION_GROUP_FIELD_STATUS":         5,
	}
)

func (x PromotionGroupField) Enum() *PromotionGroupField {
	p := new(PromotionGroupField)
	*p = x
	return p
}

func (x PromotionGroupField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PromotionGroupField) Descriptor() protoreflect.EnumDescriptor {
	return file_kargo_v1_kargo_proto_enumTypes[1].Descriptor()
}

func (PromotionGroupField) Type() protoreflect.EnumType {
	return &file_kargo_v1_kargo_proto_enumTypes[1]
}

func (x PromotionGroupField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PromotionGroupField.Descriptor instead.
func (PromotionGroupField) EnumDescriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{1}
}

type KargoAgentSize int32

const (
	KargoAgentSize_KARGO_AGENT_SIZE_UNSPECIFIED KargoAgentSize = 0
	KargoAgentSize_KARGO_AGENT_SIZE_SMALL       KargoAgentSize = 1
	KargoAgentSize_KARGO_AGENT_SIZE_MEDIUM      KargoAgentSize = 2
	KargoAgentSize_KARGO_AGENT_SIZE_LARGE       KargoAgentSize = 3
)

// Enum value maps for KargoAgentSize.
var (
	KargoAgentSize_name = map[int32]string{
		0: "KARGO_AGENT_SIZE_UNSPECIFIED",
		1: "KARGO_AGENT_SIZE_SMALL",
		2: "KARGO_AGENT_SIZE_MEDIUM",
		3: "KARGO_AGENT_SIZE_LARGE",
	}
	KargoAgentSize_value = map[string]int32{
		"KARGO_AGENT_SIZE_UNSPECIFIED": 0,
		"KARGO_AGENT_SIZE_SMALL":       1,
		"KARGO_AGENT_SIZE_MEDIUM":      2,
		"KARGO_AGENT_SIZE_LARGE":       3,
	}
)

func (x KargoAgentSize) Enum() *KargoAgentSize {
	p := new(KargoAgentSize)
	*p = x
	return p
}

func (x KargoAgentSize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KargoAgentSize) Descriptor() protoreflect.EnumDescriptor {
	return file_kargo_v1_kargo_proto_enumTypes[2].Descriptor()
}

func (KargoAgentSize) Type() protoreflect.EnumType {
	return &file_kargo_v1_kargo_proto_enumTypes[2]
}

func (x KargoAgentSize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KargoAgentSize.Descriptor instead.
func (KargoAgentSize) EnumDescriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{2}
}

type PruneResourceType int32

const (
	PruneResourceType_PRUNE_RESOURCE_TYPE_UNSPECIFIED             PruneResourceType = 0
	PruneResourceType_PRUNE_RESOURCE_TYPE_ALL                     PruneResourceType = 1
	PruneResourceType_PRUNE_RESOURCE_TYPE_AGENTS                  PruneResourceType = 2
	PruneResourceType_PRUNE_RESOURCE_TYPE_PROJECTS                PruneResourceType = 3
	PruneResourceType_PRUNE_RESOURCE_TYPE_WAREHOUSES              PruneResourceType = 4
	PruneResourceType_PRUNE_RESOURCE_TYPE_STAGES                  PruneResourceType = 5
	PruneResourceType_PRUNE_RESOURCE_TYPE_ANALYSIS_TEMPLATES      PruneResourceType = 6
	PruneResourceType_PRUNE_RESOURCE_TYPE_PROMOTION_TASKS         PruneResourceType = 7
	PruneResourceType_PRUNE_RESOURCE_TYPE_CLUSTER_PROMOTION_TASKS PruneResourceType = 8
	PruneResourceType_PRUNE_RESOURCE_TYPE_REPO_CREDENTIALS        PruneResourceType = 9
	PruneResourceType_PRUNE_RESOURCE_TYPE_SERVICE_ACCOUNTS        PruneResourceType = 10
	PruneResourceType_PRUNE_RESOURCE_TYPE_ROLES                   PruneResourceType = 11
	PruneResourceType_PRUNE_RESOURCE_TYPE_ROLE_BINDINGS           PruneResourceType = 12
	PruneResourceType_PRUNE_RESOURCE_TYPE_CONFIGMAPS              PruneResourceType = 13
)

// Enum value maps for PruneResourceType.
var (
	PruneResourceType_name = map[int32]string{
		0:  "PRUNE_RESOURCE_TYPE_UNSPECIFIED",
		1:  "PRUNE_RESOURCE_TYPE_ALL",
		2:  "PRUNE_RESOURCE_TYPE_AGENTS",
		3:  "PRUNE_RESOURCE_TYPE_PROJECTS",
		4:  "PRUNE_RESOURCE_TYPE_WAREHOUSES",
		5:  "PRUNE_RESOURCE_TYPE_STAGES",
		6:  "PRUNE_RESOURCE_TYPE_ANALYSIS_TEMPLATES",
		7:  "PRUNE_RESOURCE_TYPE_PROMOTION_TASKS",
		8:  "PRUNE_RESOURCE_TYPE_CLUSTER_PROMOTION_TASKS",
		9:  "PRUNE_RESOURCE_TYPE_REPO_CREDENTIALS",
		10: "PRUNE_RESOURCE_TYPE_SERVICE_ACCOUNTS",
		11: "PRUNE_RESOURCE_TYPE_ROLES",
		12: "PRUNE_RESOURCE_TYPE_ROLE_BINDINGS",
		13: "PRUNE_RESOURCE_TYPE_CONFIGMAPS",
	}
	PruneResourceType_value = map[string]int32{
		"PRUNE_RESOURCE_TYPE_UNSPECIFIED":             0,
		"PRUNE_RESOURCE_TYPE_ALL":                     1,
		"PRUNE_RESOURCE_TYPE_AGENTS":                  2,
		"PRUNE_RESOURCE_TYPE_PROJECTS":                3,
		"PRUNE_RESOURCE_TYPE_WAREHOUSES":              4,
		"PRUNE_RESOURCE_TYPE_STAGES":                  5,
		"PRUNE_RESOURCE_TYPE_ANALYSIS_TEMPLATES":      6,
		"PRUNE_RESOURCE_TYPE_PROMOTION_TASKS":         7,
		"PRUNE_RESOURCE_TYPE_CLUSTER_PROMOTION_TASKS": 8,
		"PRUNE_RESOURCE_TYPE_REPO_CREDENTIALS":        9,
		"PRUNE_RESOURCE_TYPE_SERVICE_ACCOUNTS":        10,
		"PRUNE_RESOURCE_TYPE_ROLES":                   11,
		"PRUNE_RESOURCE_TYPE_ROLE_BINDINGS":           12,
		"PRUNE_RESOURCE_TYPE_CONFIGMAPS":              13,
	}
)

func (x PruneResourceType) Enum() *PruneResourceType {
	p := new(PruneResourceType)
	*p = x
	return p
}

func (x PruneResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PruneResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_kargo_v1_kargo_proto_enumTypes[3].Descriptor()
}

func (PruneResourceType) Type() protoreflect.EnumType {
	return &file_kargo_v1_kargo_proto_enumTypes[3]
}

func (x PruneResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PruneResourceType.Descriptor instead.
func (PruneResourceType) EnumDescriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{3}
}

// for lead time and recovery time graphs
type GetStageSpecificStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string           `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Filter         *PromotionFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	WorkspaceId    string           `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *GetStageSpecificStatsRequest) Reset() {
	*x = GetStageSpecificStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStageSpecificStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStageSpecificStatsRequest) ProtoMessage() {}

func (x *GetStageSpecificStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStageSpecificStatsRequest.ProtoReflect.Descriptor instead.
func (*GetStageSpecificStatsRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{0}
}

func (x *GetStageSpecificStatsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *GetStageSpecificStatsRequest) GetFilter() *PromotionFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetStageSpecificStatsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type GetStageSpecificStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadTimeData     []*LeadTimeData     `protobuf:"bytes,1,rep,name=lead_time_data,json=leadTimeData,proto3" json:"lead_time_data,omitempty"`
	RecoveryTimeData []*RecoveryTimeData `protobuf:"bytes,2,rep,name=recovery_time_data,json=recoveryTimeData,proto3" json:"recovery_time_data,omitempty"`
}

func (x *GetStageSpecificStatsResponse) Reset() {
	*x = GetStageSpecificStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStageSpecificStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStageSpecificStatsResponse) ProtoMessage() {}

func (x *GetStageSpecificStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStageSpecificStatsResponse.ProtoReflect.Descriptor instead.
func (*GetStageSpecificStatsResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{1}
}

func (x *GetStageSpecificStatsResponse) GetLeadTimeData() []*LeadTimeData {
	if x != nil {
		return x.LeadTimeData
	}
	return nil
}

func (x *GetStageSpecificStatsResponse) GetRecoveryTimeData() []*RecoveryTimeData {
	if x != nil {
		return x.RecoveryTimeData
	}
	return nil
}

type LeadTimeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionEndTime    string  `protobuf:"bytes,2,opt,name=promotion_end_time,json=promotionEndTime,proto3" json:"promotion_end_time,omitempty"`
	FreightCreationTime string  `protobuf:"bytes,3,opt,name=freight_creation_time,json=freightCreationTime,proto3" json:"freight_creation_time,omitempty"`
	LeadTime            float32 `protobuf:"fixed32,4,opt,name=lead_time,json=leadTime,proto3" json:"lead_time,omitempty"`
	StageName           string  `protobuf:"bytes,5,opt,name=stage_name,json=stageName,proto3" json:"stage_name,omitempty"`
}

func (x *LeadTimeData) Reset() {
	*x = LeadTimeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeadTimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadTimeData) ProtoMessage() {}

func (x *LeadTimeData) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadTimeData.ProtoReflect.Descriptor instead.
func (*LeadTimeData) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{2}
}

func (x *LeadTimeData) GetPromotionEndTime() string {
	if x != nil {
		return x.PromotionEndTime
	}
	return ""
}

func (x *LeadTimeData) GetFreightCreationTime() string {
	if x != nil {
		return x.FreightCreationTime
	}
	return ""
}

func (x *LeadTimeData) GetLeadTime() float32 {
	if x != nil {
		return x.LeadTime
	}
	return 0
}

func (x *LeadTimeData) GetStageName() string {
	if x != nil {
		return x.StageName
	}
	return ""
}

type RecoveryTimeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phase           string `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty"`
	PhaseChangeTime string `protobuf:"bytes,2,opt,name=phase_change_time,json=phaseChangeTime,proto3" json:"phase_change_time,omitempty"`
	StageName       string `protobuf:"bytes,3,opt,name=stage_name,json=stageName,proto3" json:"stage_name,omitempty"`
}

func (x *RecoveryTimeData) Reset() {
	*x = RecoveryTimeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoveryTimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoveryTimeData) ProtoMessage() {}

func (x *RecoveryTimeData) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoveryTimeData.ProtoReflect.Descriptor instead.
func (*RecoveryTimeData) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{3}
}

func (x *RecoveryTimeData) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *RecoveryTimeData) GetPhaseChangeTime() string {
	if x != nil {
		return x.PhaseChangeTime
	}
	return ""
}

func (x *RecoveryTimeData) GetStageName() string {
	if x != nil {
		return x.StageName
	}
	return ""
}

type GetPromotionStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string             `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Filter         *PromotionFilter   `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Interval       v1.GroupByInterval `protobuf:"varint,3,opt,name=interval,proto3,enum=akuity.types.misc.v1.GroupByInterval" json:"interval,omitempty"`
	// can either set group_by_field or group_by_label_field(has more preference)
	GroupByField PromotionGroupField `protobuf:"varint,4,opt,name=group_by_field,json=groupByField,proto3,enum=akuity.kargo.v1.PromotionGroupField" json:"group_by_field,omitempty"`
	WorkspaceId  string              `protobuf:"bytes,5,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *GetPromotionStatsRequest) Reset() {
	*x = GetPromotionStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionStatsRequest) ProtoMessage() {}

func (x *GetPromotionStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionStatsRequest.ProtoReflect.Descriptor instead.
func (*GetPromotionStatsRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{4}
}

func (x *GetPromotionStatsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *GetPromotionStatsRequest) GetFilter() *PromotionFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetPromotionStatsRequest) GetInterval() v1.GroupByInterval {
	if x != nil {
		return x.Interval
	}
	return v1.GroupByInterval(0)
}

func (x *GetPromotionStatsRequest) GetGroupByField() PromotionGroupField {
	if x != nil {
		return x.GroupByField
	}
	return PromotionGroupField_PROMOTION_GROUP_FIELD_UNSPECIFIED
}

func (x *GetPromotionStatsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type GetPromotionEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string           `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Filter         *PromotionFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit          *int64           `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset         *int64           `protobuf:"varint,4,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	Field          PromotionField   `protobuf:"varint,5,opt,name=field,proto3,enum=akuity.kargo.v1.PromotionField" json:"field,omitempty"`
	FieldLike      string           `protobuf:"bytes,6,opt,name=field_like,json=fieldLike,proto3" json:"field_like,omitempty"`
	WorkspaceId    string           `protobuf:"bytes,7,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *GetPromotionEventsRequest) Reset() {
	*x = GetPromotionEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionEventsRequest) ProtoMessage() {}

func (x *GetPromotionEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionEventsRequest.ProtoReflect.Descriptor instead.
func (*GetPromotionEventsRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{5}
}

func (x *GetPromotionEventsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *GetPromotionEventsRequest) GetFilter() *PromotionFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetPromotionEventsRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetPromotionEventsRequest) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *GetPromotionEventsRequest) GetField() PromotionField {
	if x != nil {
		return x.Field
	}
	return PromotionField_PROMOTION_FIELD_UNSPECIFIED
}

func (x *GetPromotionEventsRequest) GetFieldLike() string {
	if x != nil {
		return x.FieldLike
	}
	return ""
}

func (x *GetPromotionEventsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type PromotionFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string  `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	// stage_name is a list of stages to be filtered. Stage name allows `*` to match multiple stages (e.g. 'test-*')
	StageName     []string `protobuf:"bytes,3,rep,name=stage_name,json=stageName,proto3" json:"stage_name,omitempty"`
	Projects      []string `protobuf:"bytes,4,rep,name=projects,proto3" json:"projects,omitempty"`
	PromotionName []string `protobuf:"bytes,6,rep,name=promotion_name,json=promotionName,proto3" json:"promotion_name,omitempty"`
	InstanceId    []string `protobuf:"bytes,7,rep,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InitiatedBy   []string `protobuf:"bytes,8,rep,name=initiated_by,json=initiatedBy,proto3" json:"initiated_by,omitempty"`
	InstanceNames []string `protobuf:"bytes,9,rep,name=instance_names,json=instanceNames,proto3" json:"instance_names,omitempty"`
}

func (x *PromotionFilter) Reset() {
	*x = PromotionFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionFilter) ProtoMessage() {}

func (x *PromotionFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionFilter.ProtoReflect.Descriptor instead.
func (*PromotionFilter) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{6}
}

func (x *PromotionFilter) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *PromotionFilter) GetEndTime() string {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return ""
}

func (x *PromotionFilter) GetStageName() []string {
	if x != nil {
		return x.StageName
	}
	return nil
}

func (x *PromotionFilter) GetProjects() []string {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *PromotionFilter) GetPromotionName() []string {
	if x != nil {
		return x.PromotionName
	}
	return nil
}

func (x *PromotionFilter) GetInstanceId() []string {
	if x != nil {
		return x.InstanceId
	}
	return nil
}

func (x *PromotionFilter) GetInitiatedBy() []string {
	if x != nil {
		return x.InitiatedBy
	}
	return nil
}

func (x *PromotionFilter) GetInstanceNames() []string {
	if x != nil {
		return x.InstanceNames
	}
	return nil
}

type PromotionStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntervalStart string             `protobuf:"bytes,1,opt,name=interval_start,json=intervalStart,proto3" json:"interval_start,omitempty"`
	CountMap      map[string]uint32  `protobuf:"bytes,2,rep,name=count_map,json=countMap,proto3" json:"count_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	AverageMap    map[string]float32 `protobuf:"bytes,3,rep,name=average_map,json=averageMap,proto3" json:"average_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
}

func (x *PromotionStat) Reset() {
	*x = PromotionStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionStat) ProtoMessage() {}

func (x *PromotionStat) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionStat.ProtoReflect.Descriptor instead.
func (*PromotionStat) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{7}
}

func (x *PromotionStat) GetIntervalStart() string {
	if x != nil {
		return x.IntervalStart
	}
	return ""
}

func (x *PromotionStat) GetCountMap() map[string]uint32 {
	if x != nil {
		return x.CountMap
	}
	return nil
}

func (x *PromotionStat) GetAverageMap() map[string]float32 {
	if x != nil {
		return x.AverageMap
	}
	return nil
}

type PromotionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InstanceId    string                 `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	PromotionName string                 `protobuf:"bytes,3,opt,name=promotion_name,json=promotionName,proto3" json:"promotion_name,omitempty"`
	StartTime     string                 `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string                 `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	ResultPhase   string                 `protobuf:"bytes,6,opt,name=result_phase,json=resultPhase,proto3" json:"result_phase,omitempty"`
	ResultMessage string                 `protobuf:"bytes,7,opt,name=result_message,json=resultMessage,proto3" json:"result_message,omitempty"`
	Details       *PromotionEventDetails `protobuf:"bytes,8,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *PromotionEvent) Reset() {
	*x = PromotionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionEvent) ProtoMessage() {}

func (x *PromotionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionEvent.ProtoReflect.Descriptor instead.
func (*PromotionEvent) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{8}
}

func (x *PromotionEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PromotionEvent) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *PromotionEvent) GetPromotionName() string {
	if x != nil {
		return x.PromotionName
	}
	return ""
}

func (x *PromotionEvent) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *PromotionEvent) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *PromotionEvent) GetResultPhase() string {
	if x != nil {
		return x.ResultPhase
	}
	return ""
}

func (x *PromotionEvent) GetResultMessage() string {
	if x != nil {
		return x.ResultMessage
	}
	return ""
}

func (x *PromotionEvent) GetDetails() *PromotionEventDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type PromotionEventDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project               string              `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Stage                 string              `protobuf:"bytes,2,opt,name=stage,proto3" json:"stage,omitempty"`
	InitiatedBy           *OperationInitiator `protobuf:"bytes,3,opt,name=initiated_by,json=initiatedBy,proto3" json:"initiated_by,omitempty"`
	PromotionStatus       string              `protobuf:"bytes,4,opt,name=promotion_status,json=promotionStatus,proto3" json:"promotion_status,omitempty"`
	FreightName           string              `protobuf:"bytes,5,opt,name=freight_name,json=freightName,proto3" json:"freight_name,omitempty"`
	FreightAlias          string              `protobuf:"bytes,6,opt,name=freight_alias,json=freightAlias,proto3" json:"freight_alias,omitempty"`
	FreightCreationTime   string              `protobuf:"bytes,7,opt,name=freight_creation_time,json=freightCreationTime,proto3" json:"freight_creation_time,omitempty"`
	VerificationStartTime string              `protobuf:"bytes,8,opt,name=verification_start_time,json=verificationStartTime,proto3" json:"verification_start_time,omitempty"`
	VerificationEndTime   string              `protobuf:"bytes,9,opt,name=verification_end_time,json=verificationEndTime,proto3" json:"verification_end_time,omitempty"`
	VerificationStatus    string              `protobuf:"bytes,10,opt,name=verification_status,json=verificationStatus,proto3" json:"verification_status,omitempty"`
	Miscellaneous         *structpb.Struct    `protobuf:"bytes,11,opt,name=miscellaneous,proto3" json:"miscellaneous,omitempty"`
}

func (x *PromotionEventDetails) Reset() {
	*x = PromotionEventDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionEventDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionEventDetails) ProtoMessage() {}

func (x *PromotionEventDetails) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionEventDetails.ProtoReflect.Descriptor instead.
func (*PromotionEventDetails) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{9}
}

func (x *PromotionEventDetails) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *PromotionEventDetails) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *PromotionEventDetails) GetInitiatedBy() *OperationInitiator {
	if x != nil {
		return x.InitiatedBy
	}
	return nil
}

func (x *PromotionEventDetails) GetPromotionStatus() string {
	if x != nil {
		return x.PromotionStatus
	}
	return ""
}

func (x *PromotionEventDetails) GetFreightName() string {
	if x != nil {
		return x.FreightName
	}
	return ""
}

func (x *PromotionEventDetails) GetFreightAlias() string {
	if x != nil {
		return x.FreightAlias
	}
	return ""
}

func (x *PromotionEventDetails) GetFreightCreationTime() string {
	if x != nil {
		return x.FreightCreationTime
	}
	return ""
}

func (x *PromotionEventDetails) GetVerificationStartTime() string {
	if x != nil {
		return x.VerificationStartTime
	}
	return ""
}

func (x *PromotionEventDetails) GetVerificationEndTime() string {
	if x != nil {
		return x.VerificationEndTime
	}
	return ""
}

func (x *PromotionEventDetails) GetVerificationStatus() string {
	if x != nil {
		return x.VerificationStatus
	}
	return ""
}

func (x *PromotionEventDetails) GetMiscellaneous() *structpb.Struct {
	if x != nil {
		return x.Miscellaneous
	}
	return nil
}

type OperationInitiator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Automated bool   `protobuf:"varint,2,opt,name=automated,proto3" json:"automated,omitempty"`
}

func (x *OperationInitiator) Reset() {
	*x = OperationInitiator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationInitiator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationInitiator) ProtoMessage() {}

func (x *OperationInitiator) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationInitiator.ProtoReflect.Descriptor instead.
func (*OperationInitiator) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{10}
}

func (x *OperationInitiator) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *OperationInitiator) GetAutomated() bool {
	if x != nil {
		return x.Automated
	}
	return false
}

type GetPromotionStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionStats []*PromotionStat `protobuf:"bytes,1,rep,name=promotion_stats,json=promotionStats,proto3" json:"promotion_stats,omitempty"`
}

func (x *GetPromotionStatsResponse) Reset() {
	*x = GetPromotionStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionStatsResponse) ProtoMessage() {}

func (x *GetPromotionStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionStatsResponse.ProtoReflect.Descriptor instead.
func (*GetPromotionStatsResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{11}
}

func (x *GetPromotionStatsResponse) GetPromotionStats() []*PromotionStat {
	if x != nil {
		return x.PromotionStats
	}
	return nil
}

type GetPromotionEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionEvents []*PromotionEvent `protobuf:"bytes,1,rep,name=promotion_events,json=promotionEvents,proto3" json:"promotion_events,omitempty"`
	Count           int64             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	FieldResult     []string          `protobuf:"bytes,3,rep,name=field_result,json=fieldResult,proto3" json:"field_result,omitempty"`
}

func (x *GetPromotionEventsResponse) Reset() {
	*x = GetPromotionEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromotionEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromotionEventsResponse) ProtoMessage() {}

func (x *GetPromotionEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromotionEventsResponse.ProtoReflect.Descriptor instead.
func (*GetPromotionEventsResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{12}
}

func (x *GetPromotionEventsResponse) GetPromotionEvents() []*PromotionEvent {
	if x != nil {
		return x.PromotionEvents
	}
	return nil
}

func (x *GetPromotionEventsResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetPromotionEventsResponse) GetFieldResult() []string {
	if x != nil {
		return x.FieldResult
	}
	return nil
}

type UpdateInstanceAgentVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string   `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	InstanceId     string   `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	AgentNames     []string `protobuf:"bytes,3,rep,name=agent_names,json=agentNames,proto3" json:"agent_names,omitempty"`
	NewVersion     string   `protobuf:"bytes,4,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`
	WorkspaceId    string   `protobuf:"bytes,5,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *UpdateInstanceAgentVersionRequest) Reset() {
	*x = UpdateInstanceAgentVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstanceAgentVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceAgentVersionRequest) ProtoMessage() {}

func (x *UpdateInstanceAgentVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceAgentVersionRequest.ProtoReflect.Descriptor instead.
func (*UpdateInstanceAgentVersionRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateInstanceAgentVersionRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *UpdateInstanceAgentVersionRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *UpdateInstanceAgentVersionRequest) GetAgentNames() []string {
	if x != nil {
		return x.AgentNames
	}
	return nil
}

func (x *UpdateInstanceAgentVersionRequest) GetNewVersion() string {
	if x != nil {
		return x.NewVersion
	}
	return ""
}

func (x *UpdateInstanceAgentVersionRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type UpdateInstanceAgentVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateInstanceAgentVersionResponse) Reset() {
	*x = UpdateInstanceAgentVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstanceAgentVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstanceAgentVersionResponse) ProtoMessage() {}

func (x *UpdateInstanceAgentVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstanceAgentVersionResponse.ProtoReflect.Descriptor instead.
func (*UpdateInstanceAgentVersionResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{14}
}

type RotateInstanceAgentCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string   `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	InstanceId     string   `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	AgentNames     []string `protobuf:"bytes,3,rep,name=agent_names,json=agentNames,proto3" json:"agent_names,omitempty"`
	WorkspaceId    string   `protobuf:"bytes,4,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *RotateInstanceAgentCredentialsRequest) Reset() {
	*x = RotateInstanceAgentCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RotateInstanceAgentCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateInstanceAgentCredentialsRequest) ProtoMessage() {}

func (x *RotateInstanceAgentCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateInstanceAgentCredentialsRequest.ProtoReflect.Descriptor instead.
func (*RotateInstanceAgentCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{15}
}

func (x *RotateInstanceAgentCredentialsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *RotateInstanceAgentCredentialsRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *RotateInstanceAgentCredentialsRequest) GetAgentNames() []string {
	if x != nil {
		return x.AgentNames
	}
	return nil
}

func (x *RotateInstanceAgentCredentialsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type RotateInstanceAgentCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkippedAgents []string `protobuf:"bytes,1,rep,name=skipped_agents,json=skippedAgents,proto3" json:"skipped_agents,omitempty"`
}

func (x *RotateInstanceAgentCredentialsResponse) Reset() {
	*x = RotateInstanceAgentCredentialsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RotateInstanceAgentCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateInstanceAgentCredentialsResponse) ProtoMessage() {}

func (x *RotateInstanceAgentCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateInstanceAgentCredentialsResponse.ProtoReflect.Descriptor instead.
func (*RotateInstanceAgentCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{16}
}

func (x *RotateInstanceAgentCredentialsResponse) GetSkippedAgents() []string {
	if x != nil {
		return x.SkippedAgents
	}
	return nil
}

type DeleteInstanceAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	InstanceId     string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Id             string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId    string `protobuf:"bytes,4,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *DeleteInstanceAgentRequest) Reset() {
	*x = DeleteInstanceAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceAgentRequest) ProtoMessage() {}

func (x *DeleteInstanceAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceAgentRequest.ProtoReflect.Descriptor instead.
func (*DeleteInstanceAgentRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteInstanceAgentRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *DeleteInstanceAgentRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *DeleteInstanceAgentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteInstanceAgentRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type DeleteInstanceAgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteInstanceAgentResponse) Reset() {
	*x = DeleteInstanceAgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceAgentResponse) ProtoMessage() {}

func (x *DeleteInstanceAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceAgentResponse.ProtoReflect.Descriptor instead.
func (*DeleteInstanceAgentResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{18}
}

type DeleteInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Id             string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId    string `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *DeleteInstanceRequest) Reset() {
	*x = DeleteInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceRequest) ProtoMessage() {}

func (x *DeleteInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceRequest.ProtoReflect.Descriptor instead.
func (*DeleteInstanceRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteInstanceRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *DeleteInstanceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteInstanceRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type DeleteInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteInstanceResponse) Reset() {
	*x = DeleteInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceResponse) ProtoMessage() {}

func (x *DeleteInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceResponse.ProtoReflect.Descriptor instead.
func (*DeleteInstanceResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{20}
}

type ListKargoInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	WorkspaceId    string `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *ListKargoInstancesRequest) Reset() {
	*x = ListKargoInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKargoInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKargoInstancesRequest) ProtoMessage() {}

func (x *ListKargoInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKargoInstancesRequest.ProtoReflect.Descriptor instead.
func (*ListKargoInstancesRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{21}
}

func (x *ListKargoInstancesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListKargoInstancesRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type ListKargoInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances []*KargoInstance `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *ListKargoInstancesResponse) Reset() {
	*x = ListKargoInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKargoInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKargoInstancesResponse) ProtoMessage() {}

func (x *ListKargoInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKargoInstancesResponse.ProtoReflect.Descriptor instead.
func (*ListKargoInstancesResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{22}
}

func (x *ListKargoInstancesResponse) GetInstances() []*KargoInstance {
	if x != nil {
		return x.Instances
	}
	return nil
}

type CreateKargoInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string  `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Name           string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version        string  `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Description    *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	WorkspaceId    string  `protobuf:"bytes,5,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *CreateKargoInstanceRequest) Reset() {
	*x = CreateKargoInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKargoInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKargoInstanceRequest) ProtoMessage() {}

func (x *CreateKargoInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKargoInstanceRequest.ProtoReflect.Descriptor instead.
func (*CreateKargoInstanceRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{23}
}

func (x *CreateKargoInstanceRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateKargoInstanceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateKargoInstanceRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CreateKargoInstanceRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateKargoInstanceRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type CreateKargoInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *KargoInstance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *CreateKargoInstanceResponse) Reset() {
	*x = CreateKargoInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKargoInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKargoInstanceResponse) ProtoMessage() {}

func (x *CreateKargoInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKargoInstanceResponse.ProtoReflect.Descriptor instead.
func (*CreateKargoInstanceResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{24}
}

func (x *CreateKargoInstanceResponse) GetInstance() *KargoInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

type GetKargoInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	WorkspaceId    string `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *GetKargoInstanceRequest) Reset() {
	*x = GetKargoInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKargoInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKargoInstanceRequest) ProtoMessage() {}

func (x *GetKargoInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKargoInstanceRequest.ProtoReflect.Descriptor instead.
func (*GetKargoInstanceRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{25}
}

func (x *GetKargoInstanceRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *GetKargoInstanceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetKargoInstanceRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type CertificateStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCnameSet bool   `protobuf:"varint,1,opt,name=is_cname_set,json=isCnameSet,proto3" json:"is_cname_set,omitempty"`
	IsIssued   bool   `protobuf:"varint,2,opt,name=is_issued,json=isIssued,proto3" json:"is_issued,omitempty"`
	Message    string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CertificateStatus) Reset() {
	*x = CertificateStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateStatus) ProtoMessage() {}

func (x *CertificateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateStatus.ProtoReflect.Descriptor instead.
func (*CertificateStatus) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{26}
}

func (x *CertificateStatus) GetIsCnameSet() bool {
	if x != nil {
		return x.IsCnameSet
	}
	return false
}

func (x *CertificateStatus) GetIsIssued() bool {
	if x != nil {
		return x.IsIssued
	}
	return false
}

func (x *CertificateStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type KargoInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description           string                     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Spec                  *KargoInstanceSpec         `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	Hostname              string                     `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Generation            uint32                     `protobuf:"varint,6,opt,name=generation,proto3" json:"generation,omitempty"`
	HealthStatus          *v11.Status                `protobuf:"bytes,7,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	ReconciliationStatus  *v12.Status                `protobuf:"bytes,8,opt,name=reconciliation_status,json=reconciliationStatus,proto3" json:"reconciliation_status,omitempty"`
	DeleteTime            *timestamppb.Timestamp     `protobuf:"bytes,9,opt,name=delete_time,json=deleteTime,proto3,oneof" json:"delete_time,omitempty"`
	OwnerOrganizationName string                     `protobuf:"bytes,10,opt,name=owner_organization_name,json=ownerOrganizationName,proto3" json:"owner_organization_name,omitempty"`
	Version               string                     `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	ControllerCm          *KargoControllerCM         `protobuf:"bytes,12,opt,name=controller_cm,json=controllerCm,proto3,oneof" json:"controller_cm,omitempty"`
	WebhookCm             *KargoWebhookCM            `protobuf:"bytes,13,opt,name=webhook_cm,json=webhookCm,proto3,oneof" json:"webhook_cm,omitempty"`
	ApiCm                 *KargoApiCM                `protobuf:"bytes,14,opt,name=api_cm,json=apiCm,proto3,oneof" json:"api_cm,omitempty"`
	ApiSecret             *KargoApiSecret            `protobuf:"bytes,15,opt,name=api_secret,json=apiSecret,proto3,oneof" json:"api_secret,omitempty"`
	OidcConfig            *KargoOidcConfig           `protobuf:"bytes,16,opt,name=oidc_config,json=oidcConfig,proto3,oneof" json:"oidc_config,omitempty"`
	Subdomain             string                     `protobuf:"bytes,17,opt,name=subdomain,proto3" json:"subdomain,omitempty"`
	WorkspaceId           string                     `protobuf:"bytes,18,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	MiscellaneousSecrets  *KargoMiscellaneousSecrets `protobuf:"bytes,19,opt,name=miscellaneous_secrets,json=miscellaneousSecrets,proto3,oneof" json:"miscellaneous_secrets,omitempty"`
	Fqdn                  string                     `protobuf:"bytes,20,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	CertificateStatus     *CertificateStatus         `protobuf:"bytes,21,opt,name=certificate_status,json=certificateStatus,proto3,oneof" json:"certificate_status,omitempty"`
	UnsupportedVersion    *bool                      `protobuf:"varint,22,opt,name=unsupported_version,json=unsupportedVersion,proto3,oneof" json:"unsupported_version,omitempty"`
}

func (x *KargoInstance) Reset() {
	*x = KargoInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoInstance) ProtoMessage() {}

func (x *KargoInstance) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoInstance.ProtoReflect.Descriptor instead.
func (*KargoInstance) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{27}
}

func (x *KargoInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KargoInstance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KargoInstance) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *KargoInstance) GetSpec() *KargoInstanceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *KargoInstance) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *KargoInstance) GetGeneration() uint32 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *KargoInstance) GetHealthStatus() *v11.Status {
	if x != nil {
		return x.HealthStatus
	}
	return nil
}

func (x *KargoInstance) GetReconciliationStatus() *v12.Status {
	if x != nil {
		return x.ReconciliationStatus
	}
	return nil
}

func (x *KargoInstance) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

func (x *KargoInstance) GetOwnerOrganizationName() string {
	if x != nil {
		return x.OwnerOrganizationName
	}
	return ""
}

func (x *KargoInstance) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *KargoInstance) GetControllerCm() *KargoControllerCM {
	if x != nil {
		return x.ControllerCm
	}
	return nil
}

func (x *KargoInstance) GetWebhookCm() *KargoWebhookCM {
	if x != nil {
		return x.WebhookCm
	}
	return nil
}

func (x *KargoInstance) GetApiCm() *KargoApiCM {
	if x != nil {
		return x.ApiCm
	}
	return nil
}

func (x *KargoInstance) GetApiSecret() *KargoApiSecret {
	if x != nil {
		return x.ApiSecret
	}
	return nil
}

func (x *KargoInstance) GetOidcConfig() *KargoOidcConfig {
	if x != nil {
		return x.OidcConfig
	}
	return nil
}

func (x *KargoInstance) GetSubdomain() string {
	if x != nil {
		return x.Subdomain
	}
	return ""
}

func (x *KargoInstance) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *KargoInstance) GetMiscellaneousSecrets() *KargoMiscellaneousSecrets {
	if x != nil {
		return x.MiscellaneousSecrets
	}
	return nil
}

func (x *KargoInstance) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *KargoInstance) GetCertificateStatus() *CertificateStatus {
	if x != nil {
		return x.CertificateStatus
	}
	return nil
}

func (x *KargoInstance) GetUnsupportedVersion() bool {
	if x != nil && x.UnsupportedVersion != nil {
		return *x.UnsupportedVersion
	}
	return false
}

type KargoIPAllowListEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip          string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *KargoIPAllowListEntry) Reset() {
	*x = KargoIPAllowListEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoIPAllowListEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoIPAllowListEntry) ProtoMessage() {}

func (x *KargoIPAllowListEntry) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoIPAllowListEntry.ProtoReflect.Descriptor instead.
func (*KargoIPAllowListEntry) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{28}
}

func (x *KargoIPAllowListEntry) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *KargoIPAllowListEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type KargoAgentCustomization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoUpgradeDisabled bool             `protobuf:"varint,1,opt,name=auto_upgrade_disabled,json=autoUpgradeDisabled,proto3" json:"auto_upgrade_disabled,omitempty"`
	Kustomization       *structpb.Struct `protobuf:"bytes,2,opt,name=kustomization,proto3" json:"kustomization,omitempty"`
}

func (x *KargoAgentCustomization) Reset() {
	*x = KargoAgentCustomization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoAgentCustomization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoAgentCustomization) ProtoMessage() {}

func (x *KargoAgentCustomization) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoAgentCustomization.ProtoReflect.Descriptor instead.
func (*KargoAgentCustomization) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{29}
}

func (x *KargoAgentCustomization) GetAutoUpgradeDisabled() bool {
	if x != nil {
		return x.AutoUpgradeDisabled
	}
	return false
}

func (x *KargoAgentCustomization) GetKustomization() *structpb.Struct {
	if x != nil {
		return x.Kustomization
	}
	return nil
}

type KargoInstanceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackendIpAllowListEnabled  bool                     `protobuf:"varint,2,opt,name=backend_ip_allow_list_enabled,json=backendIpAllowListEnabled,proto3" json:"backend_ip_allow_list_enabled,omitempty"`
	IpAllowList                []*KargoIPAllowListEntry `protobuf:"bytes,1,rep,name=ip_allow_list,json=ipAllowList,proto3" json:"ip_allow_list,omitempty"`
	AgentCustomizationDefaults *KargoAgentCustomization `protobuf:"bytes,3,opt,name=agent_customization_defaults,json=agentCustomizationDefaults,proto3" json:"agent_customization_defaults,omitempty"`
	DefaultShardAgent          string                   `protobuf:"bytes,4,opt,name=default_shard_agent,json=defaultShardAgent,proto3" json:"default_shard_agent,omitempty"`
	GlobalCredentialsNs        []string                 `protobuf:"bytes,5,rep,name=global_credentials_ns,json=globalCredentialsNs,proto3" json:"global_credentials_ns,omitempty"`
	GlobalServiceAccountNs     []string                 `protobuf:"bytes,6,rep,name=global_service_account_ns,json=globalServiceAccountNs,proto3" json:"global_service_account_ns,omitempty"`
	AkuityIntelligence         *AkuityIntelligence      `protobuf:"bytes,7,opt,name=akuity_intelligence,json=akuityIntelligence,proto3" json:"akuity_intelligence,omitempty"`
	GcConfig                   *GarbageCollectorConfig  `protobuf:"bytes,8,opt,name=gc_config,json=gcConfig,proto3,oneof" json:"gc_config,omitempty"`
}

func (x *KargoInstanceSpec) Reset() {
	*x = KargoInstanceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoInstanceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoInstanceSpec) ProtoMessage() {}

func (x *KargoInstanceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoInstanceSpec.ProtoReflect.Descriptor instead.
func (*KargoInstanceSpec) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{30}
}

func (x *KargoInstanceSpec) GetBackendIpAllowListEnabled() bool {
	if x != nil {
		return x.BackendIpAllowListEnabled
	}
	return false
}

func (x *KargoInstanceSpec) GetIpAllowList() []*KargoIPAllowListEntry {
	if x != nil {
		return x.IpAllowList
	}
	return nil
}

func (x *KargoInstanceSpec) GetAgentCustomizationDefaults() *KargoAgentCustomization {
	if x != nil {
		return x.AgentCustomizationDefaults
	}
	return nil
}

func (x *KargoInstanceSpec) GetDefaultShardAgent() string {
	if x != nil {
		return x.DefaultShardAgent
	}
	return ""
}

func (x *KargoInstanceSpec) GetGlobalCredentialsNs() []string {
	if x != nil {
		return x.GlobalCredentialsNs
	}
	return nil
}

func (x *KargoInstanceSpec) GetGlobalServiceAccountNs() []string {
	if x != nil {
		return x.GlobalServiceAccountNs
	}
	return nil
}

func (x *KargoInstanceSpec) GetAkuityIntelligence() *AkuityIntelligence {
	if x != nil {
		return x.AkuityIntelligence
	}
	return nil
}

func (x *KargoInstanceSpec) GetGcConfig() *GarbageCollectorConfig {
	if x != nil {
		return x.GcConfig
	}
	return nil
}

type AkuityIntelligence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AiSupportEngineerEnabled bool     `protobuf:"varint,1,opt,name=ai_support_engineer_enabled,json=aiSupportEngineerEnabled,proto3" json:"ai_support_engineer_enabled,omitempty"`
	Enabled                  bool     `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	AllowedUsernames         []string `protobuf:"bytes,3,rep,name=allowed_usernames,json=allowedUsernames,proto3" json:"allowed_usernames,omitempty"`
	AllowedGroups            []string `protobuf:"bytes,4,rep,name=allowed_groups,json=allowedGroups,proto3" json:"allowed_groups,omitempty"`
	ModelVersion             string   `protobuf:"bytes,5,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`
}

func (x *AkuityIntelligence) Reset() {
	*x = AkuityIntelligence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AkuityIntelligence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AkuityIntelligence) ProtoMessage() {}

func (x *AkuityIntelligence) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AkuityIntelligence.ProtoReflect.Descriptor instead.
func (*AkuityIntelligence) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{31}
}

func (x *AkuityIntelligence) GetAiSupportEngineerEnabled() bool {
	if x != nil {
		return x.AiSupportEngineerEnabled
	}
	return false
}

func (x *AkuityIntelligence) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AkuityIntelligence) GetAllowedUsernames() []string {
	if x != nil {
		return x.AllowedUsernames
	}
	return nil
}

func (x *AkuityIntelligence) GetAllowedGroups() []string {
	if x != nil {
		return x.AllowedGroups
	}
	return nil
}

func (x *AkuityIntelligence) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

type KargoControllerCM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KargoControllerCM) Reset() {
	*x = KargoControllerCM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoControllerCM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoControllerCM) ProtoMessage() {}

func (x *KargoControllerCM) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoControllerCM.ProtoReflect.Descriptor instead.
func (*KargoControllerCM) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{32}
}

type KargoWebhookCM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KargoWebhookCM) Reset() {
	*x = KargoWebhookCM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoWebhookCM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoWebhookCM) ProtoMessage() {}

func (x *KargoWebhookCM) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoWebhookCM.ProtoReflect.Descriptor instead.
func (*KargoWebhookCM) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{33}
}

type KargoApiCM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminAccountEnabled  bool   `protobuf:"varint,1,opt,name=admin_account_enabled,json=adminAccountEnabled,proto3" json:"admin_account_enabled,omitempty"`
	AdminAccountTokenTtl string `protobuf:"bytes,4,opt,name=admin_account_token_ttl,json=adminAccountTokenTtl,proto3" json:"admin_account_token_ttl,omitempty"`
}

func (x *KargoApiCM) Reset() {
	*x = KargoApiCM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoApiCM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoApiCM) ProtoMessage() {}

func (x *KargoApiCM) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoApiCM.ProtoReflect.Descriptor instead.
func (*KargoApiCM) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{34}
}

func (x *KargoApiCM) GetAdminAccountEnabled() bool {
	if x != nil {
		return x.AdminAccountEnabled
	}
	return false
}

func (x *KargoApiCM) GetAdminAccountTokenTtl() string {
	if x != nil {
		return x.AdminAccountTokenTtl
	}
	return ""
}

type KargoApiSecret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminAccountPasswordHash string `protobuf:"bytes,1,opt,name=admin_account_password_hash,json=adminAccountPasswordHash,proto3" json:"admin_account_password_hash,omitempty"`
}

func (x *KargoApiSecret) Reset() {
	*x = KargoApiSecret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoApiSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoApiSecret) ProtoMessage() {}

func (x *KargoApiSecret) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoApiSecret.ProtoReflect.Descriptor instead.
func (*KargoApiSecret) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{35}
}

func (x *KargoApiSecret) GetAdminAccountPasswordHash() string {
	if x != nil {
		return x.AdminAccountPasswordHash
	}
	return ""
}

type KargoPredefinedAccountClaimValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *KargoPredefinedAccountClaimValue) Reset() {
	*x = KargoPredefinedAccountClaimValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoPredefinedAccountClaimValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoPredefinedAccountClaimValue) ProtoMessage() {}

func (x *KargoPredefinedAccountClaimValue) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoPredefinedAccountClaimValue.ProtoReflect.Descriptor instead.
func (*KargoPredefinedAccountClaimValue) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{36}
}

func (x *KargoPredefinedAccountClaimValue) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type KargoPredefinedAccountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in kargo/v1/kargo.proto.
	Email []string `protobuf:"bytes,1,rep,name=email,proto3" json:"email,omitempty"` // Use claims instead;
	// Deprecated: Marked as deprecated in kargo/v1/kargo.proto.
	Sub []string `protobuf:"bytes,2,rep,name=sub,proto3" json:"sub,omitempty"` // Use claims instead;
	// Deprecated: Marked as deprecated in kargo/v1/kargo.proto.
	Groups []string                                     `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"` // Use claims instead;
	Claims map[string]*KargoPredefinedAccountClaimValue `protobuf:"bytes,4,rep,name=claims,proto3" json:"claims,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *KargoPredefinedAccountData) Reset() {
	*x = KargoPredefinedAccountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoPredefinedAccountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoPredefinedAccountData) ProtoMessage() {}

func (x *KargoPredefinedAccountData) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoPredefinedAccountData.ProtoReflect.Descriptor instead.
func (*KargoPredefinedAccountData) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{37}
}

// Deprecated: Marked as deprecated in kargo/v1/kargo.proto.
func (x *KargoPredefinedAccountData) GetEmail() []string {
	if x != nil {
		return x.Email
	}
	return nil
}

// Deprecated: Marked as deprecated in kargo/v1/kargo.proto.
func (x *KargoPredefinedAccountData) GetSub() []string {
	if x != nil {
		return x.Sub
	}
	return nil
}

// Deprecated: Marked as deprecated in kargo/v1/kargo.proto.
func (x *KargoPredefinedAccountData) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *KargoPredefinedAccountData) GetClaims() map[string]*KargoPredefinedAccountClaimValue {
	if x != nil {
		return x.Claims
	}
	return nil
}

type KargoMiscellaneousSecrets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatadogRolloutsSecret  *DataDogRolloutsSecret  `protobuf:"bytes,1,opt,name=datadog_rollouts_secret,json=datadogRolloutsSecret,proto3,oneof" json:"datadog_rollouts_secret,omitempty"`
	NewrelicRolloutsSecret *NewRelicRolloutsSecret `protobuf:"bytes,2,opt,name=newrelic_rollouts_secret,json=newrelicRolloutsSecret,proto3,oneof" json:"newrelic_rollouts_secret,omitempty"`
	InfluxdbRolloutsSecret *InfluxDbRolloutsSecret `protobuf:"bytes,3,opt,name=influxdb_rollouts_secret,json=influxdbRolloutsSecret,proto3,oneof" json:"influxdb_rollouts_secret,omitempty"`
}

func (x *KargoMiscellaneousSecrets) Reset() {
	*x = KargoMiscellaneousSecrets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoMiscellaneousSecrets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoMiscellaneousSecrets) ProtoMessage() {}

func (x *KargoMiscellaneousSecrets) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoMiscellaneousSecrets.ProtoReflect.Descriptor instead.
func (*KargoMiscellaneousSecrets) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{38}
}

func (x *KargoMiscellaneousSecrets) GetDatadogRolloutsSecret() *DataDogRolloutsSecret {
	if x != nil {
		return x.DatadogRolloutsSecret
	}
	return nil
}

func (x *KargoMiscellaneousSecrets) GetNewrelicRolloutsSecret() *NewRelicRolloutsSecret {
	if x != nil {
		return x.NewrelicRolloutsSecret
	}
	return nil
}

func (x *KargoMiscellaneousSecrets) GetInfluxdbRolloutsSecret() *InfluxDbRolloutsSecret {
	if x != nil {
		return x.InfluxdbRolloutsSecret
	}
	return nil
}

type DataDogRolloutsSecret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ApiKey  string `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	AppKey  string `protobuf:"bytes,3,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
}

func (x *DataDogRolloutsSecret) Reset() {
	*x = DataDogRolloutsSecret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataDogRolloutsSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataDogRolloutsSecret) ProtoMessage() {}

func (x *DataDogRolloutsSecret) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataDogRolloutsSecret.ProtoReflect.Descriptor instead.
func (*DataDogRolloutsSecret) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{39}
}

func (x *DataDogRolloutsSecret) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DataDogRolloutsSecret) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *DataDogRolloutsSecret) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

type NewRelicRolloutsSecret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonalApiKey   string `protobuf:"bytes,1,opt,name=personal_api_key,json=personalApiKey,proto3" json:"personal_api_key,omitempty"`
	AccountId        string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Region           string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	BaseUrlRest      string `protobuf:"bytes,4,opt,name=base_url_rest,json=baseUrlRest,proto3" json:"base_url_rest,omitempty"`
	BaseUrlNerdgraph string `protobuf:"bytes,5,opt,name=base_url_nerdgraph,json=baseUrlNerdgraph,proto3" json:"base_url_nerdgraph,omitempty"`
}

func (x *NewRelicRolloutsSecret) Reset() {
	*x = NewRelicRolloutsSecret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRelicRolloutsSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRelicRolloutsSecret) ProtoMessage() {}

func (x *NewRelicRolloutsSecret) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRelicRolloutsSecret.ProtoReflect.Descriptor instead.
func (*NewRelicRolloutsSecret) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{40}
}

func (x *NewRelicRolloutsSecret) GetPersonalApiKey() string {
	if x != nil {
		return x.PersonalApiKey
	}
	return ""
}

func (x *NewRelicRolloutsSecret) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *NewRelicRolloutsSecret) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *NewRelicRolloutsSecret) GetBaseUrlRest() string {
	if x != nil {
		return x.BaseUrlRest
	}
	return ""
}

func (x *NewRelicRolloutsSecret) GetBaseUrlNerdgraph() string {
	if x != nil {
		return x.BaseUrlNerdgraph
	}
	return ""
}

type InfluxDbRolloutsSecret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfluxdbAddress string `protobuf:"bytes,1,opt,name=influxdb_address,json=influxdbAddress,proto3" json:"influxdb_address,omitempty"`
	AuthToken       string `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	Org             string `protobuf:"bytes,3,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *InfluxDbRolloutsSecret) Reset() {
	*x = InfluxDbRolloutsSecret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfluxDbRolloutsSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfluxDbRolloutsSecret) ProtoMessage() {}

func (x *InfluxDbRolloutsSecret) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfluxDbRolloutsSecret.ProtoReflect.Descriptor instead.
func (*InfluxDbRolloutsSecret) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{41}
}

func (x *InfluxDbRolloutsSecret) GetInfluxdbAddress() string {
	if x != nil {
		return x.InfluxdbAddress
	}
	return ""
}

func (x *InfluxDbRolloutsSecret) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *InfluxDbRolloutsSecret) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

type KargoOidcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled               bool                              `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	DexEnabled            bool                              `protobuf:"varint,2,opt,name=dex_enabled,json=dexEnabled,proto3" json:"dex_enabled,omitempty"`
	DexConfig             string                            `protobuf:"bytes,3,opt,name=dex_config,json=dexConfig,proto3" json:"dex_config,omitempty"`
	DexConfigSecret       map[string]*KargoOidcConfig_Value `protobuf:"bytes,4,rep,name=dex_config_secret,json=dexConfigSecret,proto3" json:"dex_config_secret,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IssuerUrl             string                            `protobuf:"bytes,5,opt,name=issuer_url,json=issuerUrl,proto3" json:"issuer_url,omitempty"`
	ClientId              string                            `protobuf:"bytes,6,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	CliClientId           string                            `protobuf:"bytes,7,opt,name=cli_client_id,json=cliClientId,proto3" json:"cli_client_id,omitempty"`
	AdminAccount          *KargoPredefinedAccountData       `protobuf:"bytes,8,opt,name=admin_account,json=adminAccount,proto3" json:"admin_account,omitempty"`
	ViewerAccount         *KargoPredefinedAccountData       `protobuf:"bytes,9,opt,name=viewer_account,json=viewerAccount,proto3" json:"viewer_account,omitempty"`
	AdditionalScopes      []string                          `protobuf:"bytes,10,rep,name=additional_scopes,json=additionalScopes,proto3" json:"additional_scopes,omitempty"`
	UserAccount           *KargoPredefinedAccountData       `protobuf:"bytes,11,opt,name=user_account,json=userAccount,proto3" json:"user_account,omitempty"`
	ProjectCreatorAccount *KargoPredefinedAccountData       `protobuf:"bytes,12,opt,name=project_creator_account,json=projectCreatorAccount,proto3" json:"project_creator_account,omitempty"`
}

func (x *KargoOidcConfig) Reset() {
	*x = KargoOidcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoOidcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoOidcConfig) ProtoMessage() {}

func (x *KargoOidcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoOidcConfig.ProtoReflect.Descriptor instead.
func (*KargoOidcConfig) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{42}
}

func (x *KargoOidcConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *KargoOidcConfig) GetDexEnabled() bool {
	if x != nil {
		return x.DexEnabled
	}
	return false
}

func (x *KargoOidcConfig) GetDexConfig() string {
	if x != nil {
		return x.DexConfig
	}
	return ""
}

func (x *KargoOidcConfig) GetDexConfigSecret() map[string]*KargoOidcConfig_Value {
	if x != nil {
		return x.DexConfigSecret
	}
	return nil
}

func (x *KargoOidcConfig) GetIssuerUrl() string {
	if x != nil {
		return x.IssuerUrl
	}
	return ""
}

func (x *KargoOidcConfig) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *KargoOidcConfig) GetCliClientId() string {
	if x != nil {
		return x.CliClientId
	}
	return ""
}

func (x *KargoOidcConfig) GetAdminAccount() *KargoPredefinedAccountData {
	if x != nil {
		return x.AdminAccount
	}
	return nil
}

func (x *KargoOidcConfig) GetViewerAccount() *KargoPredefinedAccountData {
	if x != nil {
		return x.ViewerAccount
	}
	return nil
}

func (x *KargoOidcConfig) GetAdditionalScopes() []string {
	if x != nil {
		return x.AdditionalScopes
	}
	return nil
}

func (x *KargoOidcConfig) GetUserAccount() *KargoPredefinedAccountData {
	if x != nil {
		return x.UserAccount
	}
	return nil
}

func (x *KargoOidcConfig) GetProjectCreatorAccount() *KargoPredefinedAccountData {
	if x != nil {
		return x.ProjectCreatorAccount
	}
	return nil
}

type GarbageCollectorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxRetainedFreight      uint32 `protobuf:"varint,1,opt,name=max_retained_freight,json=maxRetainedFreight,proto3" json:"max_retained_freight,omitempty"`
	MaxRetainedPromotions   uint32 `protobuf:"varint,2,opt,name=max_retained_promotions,json=maxRetainedPromotions,proto3" json:"max_retained_promotions,omitempty"`
	MinFreightDeletionAge   uint32 `protobuf:"varint,3,opt,name=min_freight_deletion_age,json=minFreightDeletionAge,proto3" json:"min_freight_deletion_age,omitempty"`
	MinPromotionDeletionAge uint32 `protobuf:"varint,4,opt,name=min_promotion_deletion_age,json=minPromotionDeletionAge,proto3" json:"min_promotion_deletion_age,omitempty"`
}

func (x *GarbageCollectorConfig) Reset() {
	*x = GarbageCollectorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GarbageCollectorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GarbageCollectorConfig) ProtoMessage() {}

func (x *GarbageCollectorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GarbageCollectorConfig.ProtoReflect.Descriptor instead.
func (*GarbageCollectorConfig) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{43}
}

func (x *GarbageCollectorConfig) GetMaxRetainedFreight() uint32 {
	if x != nil {
		return x.MaxRetainedFreight
	}
	return 0
}

func (x *GarbageCollectorConfig) GetMaxRetainedPromotions() uint32 {
	if x != nil {
		return x.MaxRetainedPromotions
	}
	return 0
}

func (x *GarbageCollectorConfig) GetMinFreightDeletionAge() uint32 {
	if x != nil {
		return x.MinFreightDeletionAge
	}
	return 0
}

func (x *GarbageCollectorConfig) GetMinPromotionDeletionAge() uint32 {
	if x != nil {
		return x.MinPromotionDeletionAge
	}
	return 0
}

type WatchKargoInstancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string  `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	InstanceId     *string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3,oneof" json:"instance_id,omitempty"`
	WorkspaceId    string  `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *WatchKargoInstancesRequest) Reset() {
	*x = WatchKargoInstancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchKargoInstancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchKargoInstancesRequest) ProtoMessage() {}

func (x *WatchKargoInstancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchKargoInstancesRequest.ProtoReflect.Descriptor instead.
func (*WatchKargoInstancesRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{44}
}

func (x *WatchKargoInstancesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *WatchKargoInstancesRequest) GetInstanceId() string {
	if x != nil && x.InstanceId != nil {
		return *x.InstanceId
	}
	return ""
}

func (x *WatchKargoInstancesRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type GetKargoInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *KargoInstance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *GetKargoInstanceResponse) Reset() {
	*x = GetKargoInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKargoInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKargoInstanceResponse) ProtoMessage() {}

func (x *GetKargoInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKargoInstanceResponse.ProtoReflect.Descriptor instead.
func (*GetKargoInstanceResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{45}
}

func (x *GetKargoInstanceResponse) GetInstance() *KargoInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

type WatchKargoInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *KargoInstance `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Type v13.EventType  `protobuf:"varint,2,opt,name=type,proto3,enum=akuity.types.events.v1.EventType" json:"type,omitempty"`
}

func (x *WatchKargoInstancesResponse) Reset() {
	*x = WatchKargoInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchKargoInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchKargoInstancesResponse) ProtoMessage() {}

func (x *WatchKargoInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchKargoInstancesResponse.ProtoReflect.Descriptor instead.
func (*WatchKargoInstancesResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{46}
}

func (x *WatchKargoInstancesResponse) GetItem() *KargoInstance {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *WatchKargoInstancesResponse) GetType() v13.EventType {
	if x != nil {
		return x.Type
	}
	return v13.EventType(0)
}

type PatchKargoInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string           `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Id             string           `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Patch          *structpb.Struct `protobuf:"bytes,3,opt,name=patch,proto3" json:"patch,omitempty"`
	WorkspaceId    string           `protobuf:"bytes,4,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *PatchKargoInstanceRequest) Reset() {
	*x = PatchKargoInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchKargoInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchKargoInstanceRequest) ProtoMessage() {}

func (x *PatchKargoInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchKargoInstanceRequest.ProtoReflect.Descriptor instead.
func (*PatchKargoInstanceRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{47}
}

func (x *PatchKargoInstanceRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *PatchKargoInstanceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PatchKargoInstanceRequest) GetPatch() *structpb.Struct {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *PatchKargoInstanceRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type PatchKargoInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *KargoInstance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *PatchKargoInstanceResponse) Reset() {
	*x = PatchKargoInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchKargoInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchKargoInstanceResponse) ProtoMessage() {}

func (x *PatchKargoInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchKargoInstanceResponse.ProtoReflect.Descriptor instead.
func (*PatchKargoInstanceResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{48}
}

func (x *PatchKargoInstanceResponse) GetInstance() *KargoInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

type UpdateKargoInstanceWorkspaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Id             string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId    string `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	NewWorkspaceId string `protobuf:"bytes,4,opt,name=new_workspace_id,json=newWorkspaceId,proto3" json:"new_workspace_id,omitempty"`
}

func (x *UpdateKargoInstanceWorkspaceRequest) Reset() {
	*x = UpdateKargoInstanceWorkspaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKargoInstanceWorkspaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKargoInstanceWorkspaceRequest) ProtoMessage() {}

func (x *UpdateKargoInstanceWorkspaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKargoInstanceWorkspaceRequest.ProtoReflect.Descriptor instead.
func (*UpdateKargoInstanceWorkspaceRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateKargoInstanceWorkspaceRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *UpdateKargoInstanceWorkspaceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateKargoInstanceWorkspaceRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *UpdateKargoInstanceWorkspaceRequest) GetNewWorkspaceId() string {
	if x != nil {
		return x.NewWorkspaceId
	}
	return ""
}

type UpdateKargoInstanceWorkspaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *KargoInstance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *UpdateKargoInstanceWorkspaceResponse) Reset() {
	*x = UpdateKargoInstanceWorkspaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKargoInstanceWorkspaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKargoInstanceWorkspaceResponse) ProtoMessage() {}

func (x *UpdateKargoInstanceWorkspaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKargoInstanceWorkspaceResponse.ProtoReflect.Descriptor instead.
func (*UpdateKargoInstanceWorkspaceResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateKargoInstanceWorkspaceResponse) GetInstance() *KargoInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

type KargoAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Deprecated: Marked as deprecated in kargo/v1/kargo.proto.
	Namespace                         string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"` // Use data.namespace instead
	Description                       string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Data                              *KargoAgentData        `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	DeleteTime                        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=delete_time,json=deleteTime,proto3,oneof" json:"delete_time,omitempty"`
	HealthStatus                      *v11.Status            `protobuf:"bytes,8,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	ReconciliationStatus              *v12.Status            `protobuf:"bytes,9,opt,name=reconciliation_status,json=reconciliationStatus,proto3" json:"reconciliation_status,omitempty"`
	AgentState                        *KargoAgentState       `protobuf:"bytes,10,opt,name=agent_state,json=agentState,proto3,oneof" json:"agent_state,omitempty"`
	ReadonlySettingsChangedGeneration *uint64                `protobuf:"varint,11,opt,name=readonly_settings_changed_generation,json=readonlySettingsChangedGeneration,proto3,oneof" json:"readonly_settings_changed_generation,omitempty"`
	ObservedGeneration                *uint64                `protobuf:"varint,12,opt,name=observed_generation,json=observedGeneration,proto3,oneof" json:"observed_generation,omitempty"`
}

func (x *KargoAgent) Reset() {
	*x = KargoAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoAgent) ProtoMessage() {}

func (x *KargoAgent) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoAgent.ProtoReflect.Descriptor instead.
func (*KargoAgent) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{51}
}

func (x *KargoAgent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KargoAgent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Deprecated: Marked as deprecated in kargo/v1/kargo.proto.
func (x *KargoAgent) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *KargoAgent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *KargoAgent) GetData() *KargoAgentData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *KargoAgent) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

func (x *KargoAgent) GetHealthStatus() *v11.Status {
	if x != nil {
		return x.HealthStatus
	}
	return nil
}

func (x *KargoAgent) GetReconciliationStatus() *v12.Status {
	if x != nil {
		return x.ReconciliationStatus
	}
	return nil
}

func (x *KargoAgent) GetAgentState() *KargoAgentState {
	if x != nil {
		return x.AgentState
	}
	return nil
}

func (x *KargoAgent) GetReadonlySettingsChangedGeneration() uint64 {
	if x != nil && x.ReadonlySettingsChangedGeneration != nil {
		return *x.ReadonlySettingsChangedGeneration
	}
	return 0
}

func (x *KargoAgent) GetObservedGeneration() uint64 {
	if x != nil && x.ObservedGeneration != nil {
		return *x.ObservedGeneration
	}
	return 0
}

type KargoAgentState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version                   string                             `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	KargoVersion              string                             `protobuf:"bytes,2,opt,name=kargo_version,json=kargoVersion,proto3" json:"kargo_version,omitempty"`
	ObserveTime               *timestamppb.Timestamp             `protobuf:"bytes,3,opt,name=observe_time,json=observeTime,proto3,oneof" json:"observe_time,omitempty"`
	Status                    *v11.AgentAggregatedHealthResponse `protobuf:"bytes,4,opt,name=status,proto3,oneof" json:"status,omitempty"`
	AgentIds                  []string                           `protobuf:"bytes,5,rep,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"`
	LastUserAppliedGeneration uint64                             `protobuf:"varint,6,opt,name=last_user_applied_generation,json=lastUserAppliedGeneration,proto3" json:"last_user_applied_generation,omitempty"`
	UpdateStatus              *v12.AgentUpdateStatus             `protobuf:"varint,7,opt,name=update_status,json=updateStatus,proto3,enum=akuity.types.status.reconciliation.v1.AgentUpdateStatus,oneof" json:"update_status,omitempty"`
}

func (x *KargoAgentState) Reset() {
	*x = KargoAgentState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoAgentState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoAgentState) ProtoMessage() {}

func (x *KargoAgentState) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoAgentState.ProtoReflect.Descriptor instead.
func (*KargoAgentState) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{52}
}

func (x *KargoAgentState) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *KargoAgentState) GetKargoVersion() string {
	if x != nil {
		return x.KargoVersion
	}
	return ""
}

func (x *KargoAgentState) GetObserveTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ObserveTime
	}
	return nil
}

func (x *KargoAgentState) GetStatus() *v11.AgentAggregatedHealthResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *KargoAgentState) GetAgentIds() []string {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

func (x *KargoAgentState) GetLastUserAppliedGeneration() uint64 {
	if x != nil {
		return x.LastUserAppliedGeneration
	}
	return 0
}

func (x *KargoAgentState) GetUpdateStatus() v12.AgentUpdateStatus {
	if x != nil && x.UpdateStatus != nil {
		return *x.UpdateStatus
	}
	return v12.AgentUpdateStatus(0)
}

type ListKargoInstanceAgentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string            `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	InstanceId     string            `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Filter         *KargoAgentFilter `protobuf:"bytes,3,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	WorkspaceId    string            `protobuf:"bytes,4,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *ListKargoInstanceAgentsRequest) Reset() {
	*x = ListKargoInstanceAgentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKargoInstanceAgentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKargoInstanceAgentsRequest) ProtoMessage() {}

func (x *ListKargoInstanceAgentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKargoInstanceAgentsRequest.ProtoReflect.Descriptor instead.
func (*ListKargoInstanceAgentsRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{53}
}

func (x *ListKargoInstanceAgentsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListKargoInstanceAgentsRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ListKargoInstanceAgentsRequest) GetFilter() *KargoAgentFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListKargoInstanceAgentsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type WatchKargoInstanceAgentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string            `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	InstanceId     string            `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	AgentId        *string           `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3,oneof" json:"agent_id,omitempty"`
	MinAgentName   *string           `protobuf:"bytes,4,opt,name=min_agent_name,json=minAgentName,proto3,oneof" json:"min_agent_name,omitempty"`
	MaxAgentName   *string           `protobuf:"bytes,5,opt,name=max_agent_name,json=maxAgentName,proto3,oneof" json:"max_agent_name,omitempty"`
	Filter         *KargoAgentFilter `protobuf:"bytes,6,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	WorkspaceId    string            `protobuf:"bytes,7,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *WatchKargoInstanceAgentsRequest) Reset() {
	*x = WatchKargoInstanceAgentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchKargoInstanceAgentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchKargoInstanceAgentsRequest) ProtoMessage() {}

func (x *WatchKargoInstanceAgentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchKargoInstanceAgentsRequest.ProtoReflect.Descriptor instead.
func (*WatchKargoInstanceAgentsRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{54}
}

func (x *WatchKargoInstanceAgentsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *WatchKargoInstanceAgentsRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *WatchKargoInstanceAgentsRequest) GetAgentId() string {
	if x != nil && x.AgentId != nil {
		return *x.AgentId
	}
	return ""
}

func (x *WatchKargoInstanceAgentsRequest) GetMinAgentName() string {
	if x != nil && x.MinAgentName != nil {
		return *x.MinAgentName
	}
	return ""
}

func (x *WatchKargoInstanceAgentsRequest) GetMaxAgentName() string {
	if x != nil && x.MaxAgentName != nil {
		return *x.MaxAgentName
	}
	return ""
}

func (x *WatchKargoInstanceAgentsRequest) GetFilter() *KargoAgentFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *WatchKargoInstanceAgentsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type KargoAgentFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameLike            *string           `protobuf:"bytes,1,opt,name=name_like,json=nameLike,proto3,oneof" json:"name_like,omitempty"`
	AgentStatus         []v11.StatusCode  `protobuf:"varint,2,rep,packed,name=agent_status,json=agentStatus,proto3,enum=akuity.types.status.health.v1.StatusCode" json:"agent_status,omitempty"`
	AgentVersion        []string          `protobuf:"bytes,3,rep,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`
	KargoVersion        []string          `protobuf:"bytes,4,rep,name=kargo_version,json=kargoVersion,proto3" json:"kargo_version,omitempty"`
	Limit               *int64            `protobuf:"varint,5,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset              *int64            `protobuf:"varint,6,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	ExcludeAgentVersion *string           `protobuf:"bytes,7,opt,name=exclude_agent_version,json=excludeAgentVersion,proto3,oneof" json:"exclude_agent_version,omitempty"`
	OutdatedManifest    *bool             `protobuf:"varint,8,opt,name=outdated_manifest,json=outdatedManifest,proto3,oneof" json:"outdated_manifest,omitempty"`
	Namespace           []string          `protobuf:"bytes,9,rep,name=namespace,proto3" json:"namespace,omitempty"`
	Labels              map[string]string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RemoteArgocdIds     []string          `protobuf:"bytes,11,rep,name=remote_argocd_ids,json=remoteArgocdIds,proto3" json:"remote_argocd_ids,omitempty"`
	SelfManaged         *bool             `protobuf:"varint,12,opt,name=self_managed,json=selfManaged,proto3,oneof" json:"self_managed,omitempty"`
	NeedReapply         *bool             `protobuf:"varint,13,opt,name=need_reapply,json=needReapply,proto3,oneof" json:"need_reapply,omitempty"`
}

func (x *KargoAgentFilter) Reset() {
	*x = KargoAgentFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoAgentFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoAgentFilter) ProtoMessage() {}

func (x *KargoAgentFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoAgentFilter.ProtoReflect.Descriptor instead.
func (*KargoAgentFilter) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{55}
}

func (x *KargoAgentFilter) GetNameLike() string {
	if x != nil && x.NameLike != nil {
		return *x.NameLike
	}
	return ""
}

func (x *KargoAgentFilter) GetAgentStatus() []v11.StatusCode {
	if x != nil {
		return x.AgentStatus
	}
	return nil
}

func (x *KargoAgentFilter) GetAgentVersion() []string {
	if x != nil {
		return x.AgentVersion
	}
	return nil
}

func (x *KargoAgentFilter) GetKargoVersion() []string {
	if x != nil {
		return x.KargoVersion
	}
	return nil
}

func (x *KargoAgentFilter) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *KargoAgentFilter) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *KargoAgentFilter) GetExcludeAgentVersion() string {
	if x != nil && x.ExcludeAgentVersion != nil {
		return *x.ExcludeAgentVersion
	}
	return ""
}

func (x *KargoAgentFilter) GetOutdatedManifest() bool {
	if x != nil && x.OutdatedManifest != nil {
		return *x.OutdatedManifest
	}
	return false
}

func (x *KargoAgentFilter) GetNamespace() []string {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *KargoAgentFilter) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *KargoAgentFilter) GetRemoteArgocdIds() []string {
	if x != nil {
		return x.RemoteArgocdIds
	}
	return nil
}

func (x *KargoAgentFilter) GetSelfManaged() bool {
	if x != nil && x.SelfManaged != nil {
		return *x.SelfManaged
	}
	return false
}

func (x *KargoAgentFilter) GetNeedReapply() bool {
	if x != nil && x.NeedReapply != nil {
		return *x.NeedReapply
	}
	return false
}

type CreateKargoInstanceAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	InstanceId     string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Deprecated: Marked as deprecated in kargo/v1/kargo.proto.
	Namespace   string          `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"` // Use data.namespace instead
	Description string          `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Data        *KargoAgentData `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	// Deprecated: Marked as deprecated in kargo/v1/kargo.proto.
	Upsert      bool   `protobuf:"varint,7,opt,name=upsert,proto3" json:"upsert,omitempty"` // Use UpdateKargoInstanceAgent endpoint instead
	WorkspaceId string `protobuf:"bytes,8,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *CreateKargoInstanceAgentRequest) Reset() {
	*x = CreateKargoInstanceAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKargoInstanceAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKargoInstanceAgentRequest) ProtoMessage() {}

func (x *CreateKargoInstanceAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKargoInstanceAgentRequest.ProtoReflect.Descriptor instead.
func (*CreateKargoInstanceAgentRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{56}
}

func (x *CreateKargoInstanceAgentRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateKargoInstanceAgentRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *CreateKargoInstanceAgentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Deprecated: Marked as deprecated in kargo/v1/kargo.proto.
func (x *CreateKargoInstanceAgentRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateKargoInstanceAgentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateKargoInstanceAgentRequest) GetData() *KargoAgentData {
	if x != nil {
		return x.Data
	}
	return nil
}

// Deprecated: Marked as deprecated in kargo/v1/kargo.proto.
func (x *CreateKargoInstanceAgentRequest) GetUpsert() bool {
	if x != nil {
		return x.Upsert
	}
	return false
}

func (x *CreateKargoInstanceAgentRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type KargoAgentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size                 KargoAgentSize    `protobuf:"varint,1,opt,name=size,proto3,enum=akuity.kargo.v1.KargoAgentSize" json:"size,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AutoUpgradeDisabled  *bool             `protobuf:"varint,4,opt,name=auto_upgrade_disabled,json=autoUpgradeDisabled,proto3,oneof" json:"auto_upgrade_disabled,omitempty"`
	TargetVersion        string            `protobuf:"bytes,5,opt,name=target_version,json=targetVersion,proto3" json:"target_version,omitempty"`
	Kustomization        *structpb.Struct  `protobuf:"bytes,6,opt,name=kustomization,proto3" json:"kustomization,omitempty"`
	RemoteArgocd         string            `protobuf:"bytes,7,opt,name=remote_argocd,json=remoteArgocd,proto3" json:"remote_argocd,omitempty"`
	AkuityManaged        bool              `protobuf:"varint,8,opt,name=akuity_managed,json=akuityManaged,proto3" json:"akuity_managed,omitempty"`
	Namespace            string            `protobuf:"bytes,9,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ArgocdNamespace      string            `protobuf:"bytes,10,opt,name=argocd_namespace,json=argocdNamespace,proto3" json:"argocd_namespace,omitempty"`
	SelfManagedArgocdUrl string            `protobuf:"bytes,11,opt,name=self_managed_argocd_url,json=selfManagedArgocdUrl,proto3" json:"self_managed_argocd_url,omitempty"`
}

func (x *KargoAgentData) Reset() {
	*x = KargoAgentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoAgentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoAgentData) ProtoMessage() {}

func (x *KargoAgentData) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoAgentData.ProtoReflect.Descriptor instead.
func (*KargoAgentData) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{57}
}

func (x *KargoAgentData) GetSize() KargoAgentSize {
	if x != nil {
		return x.Size
	}
	return KargoAgentSize_KARGO_AGENT_SIZE_UNSPECIFIED
}

func (x *KargoAgentData) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *KargoAgentData) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *KargoAgentData) GetAutoUpgradeDisabled() bool {
	if x != nil && x.AutoUpgradeDisabled != nil {
		return *x.AutoUpgradeDisabled
	}
	return false
}

func (x *KargoAgentData) GetTargetVersion() string {
	if x != nil {
		return x.TargetVersion
	}
	return ""
}

func (x *KargoAgentData) GetKustomization() *structpb.Struct {
	if x != nil {
		return x.Kustomization
	}
	return nil
}

func (x *KargoAgentData) GetRemoteArgocd() string {
	if x != nil {
		return x.RemoteArgocd
	}
	return ""
}

func (x *KargoAgentData) GetAkuityManaged() bool {
	if x != nil {
		return x.AkuityManaged
	}
	return false
}

func (x *KargoAgentData) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *KargoAgentData) GetArgocdNamespace() string {
	if x != nil {
		return x.ArgocdNamespace
	}
	return ""
}

func (x *KargoAgentData) GetSelfManagedArgocdUrl() string {
	if x != nil {
		return x.SelfManagedArgocdUrl
	}
	return ""
}

type GetInstanceAgentCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	InstanceId     string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Id             string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	LocationOrigin string `protobuf:"bytes,4,opt,name=location_origin,json=locationOrigin,proto3" json:"location_origin,omitempty"`
	Type           string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	SkipNamespace  *bool  `protobuf:"varint,7,opt,name=skip_namespace,json=skipNamespace,proto3,oneof" json:"skip_namespace,omitempty"`
	WorkspaceId    string `protobuf:"bytes,8,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *GetInstanceAgentCommandRequest) Reset() {
	*x = GetInstanceAgentCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceAgentCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceAgentCommandRequest) ProtoMessage() {}

func (x *GetInstanceAgentCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceAgentCommandRequest.ProtoReflect.Descriptor instead.
func (*GetInstanceAgentCommandRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{58}
}

func (x *GetInstanceAgentCommandRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *GetInstanceAgentCommandRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GetInstanceAgentCommandRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetInstanceAgentCommandRequest) GetLocationOrigin() string {
	if x != nil {
		return x.LocationOrigin
	}
	return ""
}

func (x *GetInstanceAgentCommandRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetInstanceAgentCommandRequest) GetSkipNamespace() bool {
	if x != nil && x.SkipNamespace != nil {
		return *x.SkipNamespace
	}
	return false
}

func (x *GetInstanceAgentCommandRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type GetInstanceAgentCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *GetInstanceAgentCommandResponse) Reset() {
	*x = GetInstanceAgentCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceAgentCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceAgentCommandResponse) ProtoMessage() {}

func (x *GetInstanceAgentCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceAgentCommandResponse.ProtoReflect.Descriptor instead.
func (*GetInstanceAgentCommandResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{59}
}

func (x *GetInstanceAgentCommandResponse) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type ListKargoInstanceAgentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agents     []*KargoAgent `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
	TotalCount int64         `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListKargoInstanceAgentsResponse) Reset() {
	*x = ListKargoInstanceAgentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKargoInstanceAgentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKargoInstanceAgentsResponse) ProtoMessage() {}

func (x *ListKargoInstanceAgentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKargoInstanceAgentsResponse.ProtoReflect.Descriptor instead.
func (*ListKargoInstanceAgentsResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{60}
}

func (x *ListKargoInstanceAgentsResponse) GetAgents() []*KargoAgent {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *ListKargoInstanceAgentsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type WatchKargoInstanceAgentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *KargoAgent   `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Type v13.EventType `protobuf:"varint,2,opt,name=type,proto3,enum=akuity.types.events.v1.EventType" json:"type,omitempty"`
}

func (x *WatchKargoInstanceAgentsResponse) Reset() {
	*x = WatchKargoInstanceAgentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchKargoInstanceAgentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchKargoInstanceAgentsResponse) ProtoMessage() {}

func (x *WatchKargoInstanceAgentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchKargoInstanceAgentsResponse.ProtoReflect.Descriptor instead.
func (*WatchKargoInstanceAgentsResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{61}
}

func (x *WatchKargoInstanceAgentsResponse) GetItem() *KargoAgent {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *WatchKargoInstanceAgentsResponse) GetType() v13.EventType {
	if x != nil {
		return x.Type
	}
	return v13.EventType(0)
}

type CreateKargoInstanceAgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent *KargoAgent `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
}

func (x *CreateKargoInstanceAgentResponse) Reset() {
	*x = CreateKargoInstanceAgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKargoInstanceAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKargoInstanceAgentResponse) ProtoMessage() {}

func (x *CreateKargoInstanceAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKargoInstanceAgentResponse.ProtoReflect.Descriptor instead.
func (*CreateKargoInstanceAgentResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{62}
}

func (x *CreateKargoInstanceAgentResponse) GetAgent() *KargoAgent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type GetKargoInstanceAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	InstanceId     string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Id             string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId    string `protobuf:"bytes,4,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *GetKargoInstanceAgentRequest) Reset() {
	*x = GetKargoInstanceAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKargoInstanceAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKargoInstanceAgentRequest) ProtoMessage() {}

func (x *GetKargoInstanceAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKargoInstanceAgentRequest.ProtoReflect.Descriptor instead.
func (*GetKargoInstanceAgentRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{63}
}

func (x *GetKargoInstanceAgentRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *GetKargoInstanceAgentRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GetKargoInstanceAgentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetKargoInstanceAgentRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type GetKargoInstanceAgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent *KargoAgent `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
}

func (x *GetKargoInstanceAgentResponse) Reset() {
	*x = GetKargoInstanceAgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKargoInstanceAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKargoInstanceAgentResponse) ProtoMessage() {}

func (x *GetKargoInstanceAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKargoInstanceAgentResponse.ProtoReflect.Descriptor instead.
func (*GetKargoInstanceAgentResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{64}
}

func (x *GetKargoInstanceAgentResponse) GetAgent() *KargoAgent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type UpdateKargoInstanceAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string          `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	InstanceId     string          `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Id             string          `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Description    string          `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Data           *KargoAgentData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	WorkspaceId    string          `protobuf:"bytes,6,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *UpdateKargoInstanceAgentRequest) Reset() {
	*x = UpdateKargoInstanceAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKargoInstanceAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKargoInstanceAgentRequest) ProtoMessage() {}

func (x *UpdateKargoInstanceAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKargoInstanceAgentRequest.ProtoReflect.Descriptor instead.
func (*UpdateKargoInstanceAgentRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{65}
}

func (x *UpdateKargoInstanceAgentRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *UpdateKargoInstanceAgentRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *UpdateKargoInstanceAgentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateKargoInstanceAgentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateKargoInstanceAgentRequest) GetData() *KargoAgentData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateKargoInstanceAgentRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type UpdateKargoInstanceAgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent *KargoAgent `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
}

func (x *UpdateKargoInstanceAgentResponse) Reset() {
	*x = UpdateKargoInstanceAgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKargoInstanceAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKargoInstanceAgentResponse) ProtoMessage() {}

func (x *UpdateKargoInstanceAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKargoInstanceAgentResponse.ProtoReflect.Descriptor instead.
func (*UpdateKargoInstanceAgentResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{66}
}

func (x *UpdateKargoInstanceAgentResponse) GetAgent() *KargoAgent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type GetKargoInstanceAgentManifestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	InstanceId     string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Id             string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	SkipNamespace  *bool  `protobuf:"varint,4,opt,name=skip_namespace,json=skipNamespace,proto3,oneof" json:"skip_namespace,omitempty"`
	WorkspaceId    string `protobuf:"bytes,5,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *GetKargoInstanceAgentManifestsRequest) Reset() {
	*x = GetKargoInstanceAgentManifestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKargoInstanceAgentManifestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKargoInstanceAgentManifestsRequest) ProtoMessage() {}

func (x *GetKargoInstanceAgentManifestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKargoInstanceAgentManifestsRequest.ProtoReflect.Descriptor instead.
func (*GetKargoInstanceAgentManifestsRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{67}
}

func (x *GetKargoInstanceAgentManifestsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *GetKargoInstanceAgentManifestsRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GetKargoInstanceAgentManifestsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetKargoInstanceAgentManifestsRequest) GetSkipNamespace() bool {
	if x != nil && x.SkipNamespace != nil {
		return *x.SkipNamespace
	}
	return false
}

func (x *GetKargoInstanceAgentManifestsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type UpdateKargoInstanceAgentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId      string                   `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	InstanceId          string                   `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	AgentCustomizations *KargoAgentCustomization `protobuf:"bytes,3,opt,name=agent_customizations,json=agentCustomizations,proto3" json:"agent_customizations,omitempty"`
	WorkspaceId         string                   `protobuf:"bytes,4,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *UpdateKargoInstanceAgentsRequest) Reset() {
	*x = UpdateKargoInstanceAgentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKargoInstanceAgentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKargoInstanceAgentsRequest) ProtoMessage() {}

func (x *UpdateKargoInstanceAgentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKargoInstanceAgentsRequest.ProtoReflect.Descriptor instead.
func (*UpdateKargoInstanceAgentsRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{68}
}

func (x *UpdateKargoInstanceAgentsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *UpdateKargoInstanceAgentsRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *UpdateKargoInstanceAgentsRequest) GetAgentCustomizations() *KargoAgentCustomization {
	if x != nil {
		return x.AgentCustomizations
	}
	return nil
}

func (x *UpdateKargoInstanceAgentsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type UpdateKargoInstanceAgentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateKargoInstanceAgentsResponse) Reset() {
	*x = UpdateKargoInstanceAgentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKargoInstanceAgentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKargoInstanceAgentsResponse) ProtoMessage() {}

func (x *UpdateKargoInstanceAgentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKargoInstanceAgentsResponse.ProtoReflect.Descriptor instead.
func (*UpdateKargoInstanceAgentsResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{69}
}

type ApplyKargoInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId        string              `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Id                    string              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	IdType                v14.Type            `protobuf:"varint,3,opt,name=id_type,json=idType,proto3,enum=akuity.types.id.v1.Type" json:"id_type,omitempty"`
	WorkspaceId           string              `protobuf:"bytes,4,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	Kargo                 *structpb.Struct    `protobuf:"bytes,5,opt,name=kargo,proto3" json:"kargo,omitempty"`
	Agents                []*structpb.Struct  `protobuf:"bytes,6,rep,name=agents,proto3" json:"agents,omitempty"`
	PruneResourceTypes    []PruneResourceType `protobuf:"varint,7,rep,packed,name=prune_resource_types,json=pruneResourceTypes,proto3,enum=akuity.kargo.v1.PruneResourceType" json:"prune_resource_types,omitempty"`
	KargoConfigmap        *structpb.Struct    `protobuf:"bytes,8,opt,name=kargo_configmap,json=kargoConfigmap,proto3" json:"kargo_configmap,omitempty"`
	KargoSecret           *structpb.Struct    `protobuf:"bytes,9,opt,name=kargo_secret,json=kargoSecret,proto3" json:"kargo_secret,omitempty"`
	Projects              []*structpb.Struct  `protobuf:"bytes,10,rep,name=projects,proto3" json:"projects,omitempty"`
	Warehouses            []*structpb.Struct  `protobuf:"bytes,11,rep,name=warehouses,proto3" json:"warehouses,omitempty"`
	Stages                []*structpb.Struct  `protobuf:"bytes,12,rep,name=stages,proto3" json:"stages,omitempty"`
	AnalysisTemplates     []*structpb.Struct  `protobuf:"bytes,13,rep,name=analysis_templates,json=analysisTemplates,proto3" json:"analysis_templates,omitempty"`
	PromotionTasks        []*structpb.Struct  `protobuf:"bytes,14,rep,name=promotion_tasks,json=promotionTasks,proto3" json:"promotion_tasks,omitempty"`
	ClusterPromotionTasks []*structpb.Struct  `protobuf:"bytes,15,rep,name=cluster_promotion_tasks,json=clusterPromotionTasks,proto3" json:"cluster_promotion_tasks,omitempty"`
	RepoCredentials       []*structpb.Struct  `protobuf:"bytes,16,rep,name=repo_credentials,json=repoCredentials,proto3" json:"repo_credentials,omitempty"`
	ServiceAccounts       []*structpb.Struct  `protobuf:"bytes,17,rep,name=service_accounts,json=serviceAccounts,proto3" json:"service_accounts,omitempty"`
	Roles                 []*structpb.Struct  `protobuf:"bytes,18,rep,name=roles,proto3" json:"roles,omitempty"`
	RoleBindings          []*structpb.Struct  `protobuf:"bytes,19,rep,name=role_bindings,json=roleBindings,proto3" json:"role_bindings,omitempty"`
	Configmaps            []*structpb.Struct  `protobuf:"bytes,20,rep,name=configmaps,proto3" json:"configmaps,omitempty"`
}

func (x *ApplyKargoInstanceRequest) Reset() {
	*x = ApplyKargoInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyKargoInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyKargoInstanceRequest) ProtoMessage() {}

func (x *ApplyKargoInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyKargoInstanceRequest.ProtoReflect.Descriptor instead.
func (*ApplyKargoInstanceRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{70}
}

func (x *ApplyKargoInstanceRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ApplyKargoInstanceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApplyKargoInstanceRequest) GetIdType() v14.Type {
	if x != nil {
		return x.IdType
	}
	return v14.Type(0)
}

func (x *ApplyKargoInstanceRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *ApplyKargoInstanceRequest) GetKargo() *structpb.Struct {
	if x != nil {
		return x.Kargo
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetAgents() []*structpb.Struct {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetPruneResourceTypes() []PruneResourceType {
	if x != nil {
		return x.PruneResourceTypes
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetKargoConfigmap() *structpb.Struct {
	if x != nil {
		return x.KargoConfigmap
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetKargoSecret() *structpb.Struct {
	if x != nil {
		return x.KargoSecret
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetProjects() []*structpb.Struct {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetWarehouses() []*structpb.Struct {
	if x != nil {
		return x.Warehouses
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetStages() []*structpb.Struct {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetAnalysisTemplates() []*structpb.Struct {
	if x != nil {
		return x.AnalysisTemplates
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetPromotionTasks() []*structpb.Struct {
	if x != nil {
		return x.PromotionTasks
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetClusterPromotionTasks() []*structpb.Struct {
	if x != nil {
		return x.ClusterPromotionTasks
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetRepoCredentials() []*structpb.Struct {
	if x != nil {
		return x.RepoCredentials
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetServiceAccounts() []*structpb.Struct {
	if x != nil {
		return x.ServiceAccounts
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetRoles() []*structpb.Struct {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetRoleBindings() []*structpb.Struct {
	if x != nil {
		return x.RoleBindings
	}
	return nil
}

func (x *ApplyKargoInstanceRequest) GetConfigmaps() []*structpb.Struct {
	if x != nil {
		return x.Configmaps
	}
	return nil
}

type ApplyKargoInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApplyKargoInstanceResponse) Reset() {
	*x = ApplyKargoInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyKargoInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyKargoInstanceResponse) ProtoMessage() {}

func (x *ApplyKargoInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyKargoInstanceResponse.ProtoReflect.Descriptor instead.
func (*ApplyKargoInstanceResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{71}
}

type ExportKargoInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Id             string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId    string `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *ExportKargoInstanceRequest) Reset() {
	*x = ExportKargoInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportKargoInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportKargoInstanceRequest) ProtoMessage() {}

func (x *ExportKargoInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportKargoInstanceRequest.ProtoReflect.Descriptor instead.
func (*ExportKargoInstanceRequest) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{72}
}

func (x *ExportKargoInstanceRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ExportKargoInstanceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExportKargoInstanceRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type ExportKargoInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kargo                 *structpb.Struct   `protobuf:"bytes,1,opt,name=kargo,proto3" json:"kargo,omitempty"`
	Agents                []*structpb.Struct `protobuf:"bytes,2,rep,name=agents,proto3" json:"agents,omitempty"`
	KargoConfigmap        *structpb.Struct   `protobuf:"bytes,3,opt,name=kargo_configmap,json=kargoConfigmap,proto3" json:"kargo_configmap,omitempty"`
	Projects              []*structpb.Struct `protobuf:"bytes,4,rep,name=projects,proto3" json:"projects,omitempty"`
	Warehouses            []*structpb.Struct `protobuf:"bytes,5,rep,name=warehouses,proto3" json:"warehouses,omitempty"`
	Stages                []*structpb.Struct `protobuf:"bytes,6,rep,name=stages,proto3" json:"stages,omitempty"`
	AnalysisTemplates     []*structpb.Struct `protobuf:"bytes,7,rep,name=analysis_templates,json=analysisTemplates,proto3" json:"analysis_templates,omitempty"`
	PromotionTasks        []*structpb.Struct `protobuf:"bytes,8,rep,name=promotion_tasks,json=promotionTasks,proto3" json:"promotion_tasks,omitempty"`
	ClusterPromotionTasks []*structpb.Struct `protobuf:"bytes,9,rep,name=cluster_promotion_tasks,json=clusterPromotionTasks,proto3" json:"cluster_promotion_tasks,omitempty"`
	ServiceAccounts       []*structpb.Struct `protobuf:"bytes,10,rep,name=service_accounts,json=serviceAccounts,proto3" json:"service_accounts,omitempty"`
	Roles                 []*structpb.Struct `protobuf:"bytes,11,rep,name=roles,proto3" json:"roles,omitempty"`
	RoleBindings          []*structpb.Struct `protobuf:"bytes,12,rep,name=role_bindings,json=roleBindings,proto3" json:"role_bindings,omitempty"`
	Configmaps            []*structpb.Struct `protobuf:"bytes,13,rep,name=configmaps,proto3" json:"configmaps,omitempty"`
}

func (x *ExportKargoInstanceResponse) Reset() {
	*x = ExportKargoInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportKargoInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportKargoInstanceResponse) ProtoMessage() {}

func (x *ExportKargoInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportKargoInstanceResponse.ProtoReflect.Descriptor instead.
func (*ExportKargoInstanceResponse) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{73}
}

func (x *ExportKargoInstanceResponse) GetKargo() *structpb.Struct {
	if x != nil {
		return x.Kargo
	}
	return nil
}

func (x *ExportKargoInstanceResponse) GetAgents() []*structpb.Struct {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *ExportKargoInstanceResponse) GetKargoConfigmap() *structpb.Struct {
	if x != nil {
		return x.KargoConfigmap
	}
	return nil
}

func (x *ExportKargoInstanceResponse) GetProjects() []*structpb.Struct {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *ExportKargoInstanceResponse) GetWarehouses() []*structpb.Struct {
	if x != nil {
		return x.Warehouses
	}
	return nil
}

func (x *ExportKargoInstanceResponse) GetStages() []*structpb.Struct {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *ExportKargoInstanceResponse) GetAnalysisTemplates() []*structpb.Struct {
	if x != nil {
		return x.AnalysisTemplates
	}
	return nil
}

func (x *ExportKargoInstanceResponse) GetPromotionTasks() []*structpb.Struct {
	if x != nil {
		return x.PromotionTasks
	}
	return nil
}

func (x *ExportKargoInstanceResponse) GetClusterPromotionTasks() []*structpb.Struct {
	if x != nil {
		return x.ClusterPromotionTasks
	}
	return nil
}

func (x *ExportKargoInstanceResponse) GetServiceAccounts() []*structpb.Struct {
	if x != nil {
		return x.ServiceAccounts
	}
	return nil
}

func (x *ExportKargoInstanceResponse) GetRoles() []*structpb.Struct {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ExportKargoInstanceResponse) GetRoleBindings() []*structpb.Struct {
	if x != nil {
		return x.RoleBindings
	}
	return nil
}

func (x *ExportKargoInstanceResponse) GetConfigmaps() []*structpb.Struct {
	if x != nil {
		return x.Configmaps
	}
	return nil
}

type KargoOidcConfig_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *KargoOidcConfig_Value) Reset() {
	*x = KargoOidcConfig_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kargo_v1_kargo_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KargoOidcConfig_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KargoOidcConfig_Value) ProtoMessage() {}

func (x *KargoOidcConfig_Value) ProtoReflect() protoreflect.Message {
	mi := &file_kargo_v1_kargo_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KargoOidcConfig_Value.ProtoReflect.Descriptor instead.
func (*KargoOidcConfig_Value) Descriptor() ([]byte, []int) {
	return file_kargo_v1_kargo_proto_rawDescGZIP(), []int{42, 1}
}

func (x *KargoOidcConfig_Value) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

var File_kargo_v1_kargo_proto protoreflect.FileDescriptor

var file_kargo_v1_kargo_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b,
	0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x69, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x69, 0x73, 0x63, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x69, 0x73, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x33, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0xb5,
	0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xac, 0x01, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x65,
	0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x73, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xaf, 0x02, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x38, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x61,
	0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6d, 0x69, 0x73, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x4a, 0x0a,
	0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b,
	0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0c, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0xc4, 0x02, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72,
	0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61,
	0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0xaa, 0x02, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0xce, 0x02, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x49, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4d, 0x61, 0x70, 0x12, 0x4f, 0x0a, 0x0b, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6b, 0x75, 0x69,
	0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x3b, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xae, 0x02, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x40, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x92, 0x04, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x0c,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x72, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x63,
	0x65, 0x6c, 0x6c, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0d, 0x6d, 0x69, 0x73, 0x63, 0x65, 0x6c,
	0x6c, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x22, 0x4e, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x22, 0x64, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0xa1, 0x01,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xd2, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb5, 0x01, 0x0a,
	0x25, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x26, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x73, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x67, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6b, 0x75, 0x69,
	0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67,
	0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b,
	0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x59, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x61,
	0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b,
	0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0x79, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x11, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd3, 0x0a, 0x0a, 0x0d, 0x4b, 0x61, 0x72,
	0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x62, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x14,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x17, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x63, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x43, 0x4d, 0x48, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x43, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x5f, 0x63, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6b, 0x75,
	0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72,
	0x67, 0x6f, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x4d, 0x48, 0x02, 0x52, 0x09, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x06, 0x61,
	0x70, 0x69, 0x5f, 0x63, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61,
	0x72, 0x67, 0x6f, 0x41, 0x70, 0x69, 0x43, 0x4d, 0x48, 0x03, 0x52, 0x05, 0x61, 0x70, 0x69, 0x43,
	0x6d, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f,
	0x41, 0x70, 0x69, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x04, 0x52, 0x09, 0x61, 0x70, 0x69,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0b, 0x6f, 0x69, 0x64,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x4f, 0x69, 0x64, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x05, 0x52, 0x0a, 0x6f, 0x69, 0x64, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01,
	0x01, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x64, 0x0a, 0x15, 0x6d, 0x69, 0x73, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x6e, 0x65,
	0x6f, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x4d, 0x69, 0x73, 0x63, 0x65, 0x6c, 0x6c,
	0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x48, 0x06, 0x52,
	0x14, 0x6d, 0x69, 0x73, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x56, 0x0a, 0x12,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x07, 0x52, 0x11,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x13, 0x75, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x08, 0x52, 0x12, 0x75, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x63, 0x6d, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x63, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x6d, 0x69, 0x73, 0x63, 0x65, 0x6c,
	0x6c, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x75, 0x6e, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x49,
	0x0a, 0x15, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x50, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x17, 0x4b, 0x61,
	0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0d, 0x6b, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0d, 0x6b, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdb, 0x04, 0x0a, 0x11, 0x4b, 0x61, 0x72,
	0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x40,
	0x0a, 0x1d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x49, 0x70,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x4a, 0x0a, 0x0d, 0x69, 0x70, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49,
	0x50, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x69, 0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x1c,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1a, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x4e, 0x73, 0x12, 0x39, 0x0a, 0x19,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x16, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x73, 0x12, 0x54, 0x0a, 0x13, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61,
	0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x74,
	0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x12, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x49, 0x0a,
	0x09, 0x67, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x08, 0x67, 0x63, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x63, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xe6, 0x01, 0x0a, 0x12, 0x41, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a,
	0x1b, 0x61, 0x69, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x18, 0x61, 0x69, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x13, 0x0a, 0x11, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x43, 0x4d, 0x22, 0x10, 0x0a, 0x0e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x4d, 0x22, 0x77, 0x0a, 0x0a, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41,
	0x70, 0x69, 0x43, 0x4d, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x74, 0x6c, 0x22,
	0x4f, 0x0a, 0x0e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x70, 0x69, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x3a, 0x0a, 0x20, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xa7, 0x02, 0x0a,
	0x1a, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12, 0x1a, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x4f, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x50,
	0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x1a, 0x6c, 0x0a, 0x0b, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x47, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f,
	0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa6, 0x03, 0x0a, 0x19, 0x4b, 0x61, 0x72, 0x67, 0x6f,
	0x4d, 0x69, 0x73, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x73, 0x12, 0x63, 0x0a, 0x17, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x5f,
	0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b,
	0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x67, 0x52,
	0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x15, 0x64, 0x61, 0x74, 0x61, 0x64, 0x6f, 0x67, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x66, 0x0a, 0x18, 0x6e, 0x65, 0x77,
	0x72, 0x65, 0x6c, 0x69, 0x63, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65,
	0x77, 0x52, 0x65, 0x6c, 0x69, 0x63, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x48, 0x01, 0x52, 0x16, 0x6e, 0x65, 0x77, 0x72, 0x65, 0x6c, 0x69, 0x63,
	0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x66, 0x0a, 0x18, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x62, 0x5f, 0x72, 0x6f,
	0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72,
	0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x44, 0x62, 0x52, 0x6f,
	0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x02, 0x52, 0x16,
	0x69, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x62, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x64, 0x6f, 0x67, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x6e, 0x65, 0x77, 0x72, 0x65, 0x6c,
	0x69, 0x63, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x62, 0x5f,
	0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22,
	0x63, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x67, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75,
	0x74, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70,
	0x70, 0x4b, 0x65, 0x79, 0x22, 0xcb, 0x01, 0x0a, 0x16, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x69,
	0x63, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x72, 0x65, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x5f, 0x6e, 0x65, 0x72, 0x64, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x4e, 0x65, 0x72, 0x64, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x22, 0x74, 0x0a, 0x16, 0x49, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x44, 0x62, 0x52, 0x6f,
	0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x69, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x62, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x78, 0x64, 0x62,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x22, 0xd0, 0x06, 0x0a, 0x0f, 0x4b, 0x61, 0x72,
	0x67, 0x6f, 0x4f, 0x69, 0x64, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x78, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x78,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x78, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x78,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x61, 0x0a, 0x11, 0x64, 0x65, 0x78, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x4f, 0x69, 0x64, 0x63, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c,
	0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x0d, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x0e, 0x76,
	0x69, 0x65, 0x77, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72,
	0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x50, 0x72, 0x65, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x63, 0x0a, 0x17,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x61, 0x72, 0x67, 0x6f, 0x50, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x6a, 0x0a, 0x14, 0x44, 0x65, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6b, 0x75,
	0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72,
	0x67, 0x6f, 0x4f, 0x69, 0x64, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x2c, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x16,
	0x47, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x64, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f,
	0x72, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6d, 0x61, 0x78, 0x52, 0x65,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x37, 0x0a, 0x18, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x15, 0x6d, 0x69, 0x6e, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x6d, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x6d,
	0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x67, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x1a, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4b, 0x61,
	0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b,
	0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0x88, 0x01, 0x0a, 0x1b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x19, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2d, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x1a, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4b, 0x61, 0x72, 0x67,
	0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72,
	0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xab, 0x01,
	0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x77,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x24, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b,
	0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0xd0, 0x05, 0x0a, 0x0a, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61,
	0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0b, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a,
	0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x62, 0x0a, 0x15, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69,
	0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46, 0x0a,
	0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x48, 0x01, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x54, 0x0a, 0x24, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c,
	0x79, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x21, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x13, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x48, 0x03, 0x52, 0x12, 0x6f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x42, 0x27, 0x0a, 0x25, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xdf, 0x03, 0x0a, 0x0f, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0c, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x6b, 0x75, 0x69,
	0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6b, 0x75, 0x69,
	0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x48, 0x02, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x61, 0x72,
	0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x3e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x82, 0x03, 0x0a, 0x1f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a,
	0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72,
	0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x80, 0x06, 0x0a, 0x10, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08,
	0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x0c, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x29, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x13, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x04, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61,
	0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x72,
	0x67, 0x6f, 0x63, 0x64, 0x49, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x66, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52,
	0x0b, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6b, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x6f, 0x75, 0x74, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f,
	0x72, 0x65, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x22, 0xb7, 0x02, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61,
	0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x06, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x22, 0xde, 0x05, 0x0a, 0x0e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53,
	0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6b, 0x75, 0x69,
	0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67,
	0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x52,
	0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72,
	0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x37, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0d, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x0d, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x6f,
	0x63, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x41, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61,
	0x72, 0x67, 0x6f, 0x63, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x6c, 0x66, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x41, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x55, 0x72, 0x6c, 0x1a, 0x39, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0x99, 0x02, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x0e,
	0x73, 0x6b, 0x69, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x73, 0x6b, 0x69, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x3b,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x77, 0x0a, 0x1f, 0x4c,
	0x69, 0x73, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x20, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4b, 0x61,
	0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x55, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61,
	0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x72,
	0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0xf5, 0x01, 0x0a, 0x1f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x55, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67,
	0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b,
	0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x25, 0x47, 0x65,
	0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a,
	0x0e, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22,
	0xec, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x5b,
	0x0a, 0x14, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x23,
	0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x86, 0x09, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4b, 0x61, 0x72,
	0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x69, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x69, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x05, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x12,
	0x2f, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x54, 0x0a, 0x14, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x12, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x12, 0x3a, 0x0a, 0x0c, 0x6b, 0x61, 0x72, 0x67,
	0x6f, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x12, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x11, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x4f, 0x0a,
	0x17, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x15, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x42,
	0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x12, 0x42, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x70,
	0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x73, 0x22, 0x1c, 0x0a, 0x1a,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x1a, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x22, 0xa3, 0x06, 0x0a, 0x1b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4b,
	0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x6b, 0x61,
	0x72, 0x67, 0x6f, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x12, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x11, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12,
	0x4f, 0x0a, 0x17, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x15, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x12, 0x42, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6d, 0x61, 0x70, 0x73, 0x2a, 0xcf, 0x01, 0x0a, 0x0e, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1f, 0x0a,
	0x1b, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x53, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52,
	0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x52,
	0x4f, 0x4a, 0x45, 0x43, 0x54, 0x53, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x52, 0x4f, 0x4d,
	0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x41, 0x54, 0x4f, 0x52, 0x53, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x52, 0x4f, 0x4d,
	0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x4d,
	0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x52, 0x4f, 0x4d,
	0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x49, 0x4e, 0x53, 0x54,
	0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x53, 0x10, 0x05, 0x2a, 0xf4, 0x01, 0x0a,
	0x13, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x25, 0x0a, 0x21, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x50,
	0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x53, 0x10, 0x01, 0x12, 0x22, 0x0a,
	0x1e, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x53, 0x10,
	0x02, 0x12, 0x24, 0x0a, 0x20, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x41, 0x54, 0x4f, 0x52, 0x53, 0x10, 0x03, 0x12, 0x28, 0x0a, 0x24, 0x50, 0x52, 0x4f, 0x4d, 0x4f,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x53, 0x10,
	0x04, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x10, 0x05, 0x2a, 0x87, 0x01, 0x0a, 0x0e, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x4b, 0x41, 0x52, 0x47, 0x4f, 0x5f,
	0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x41, 0x52, 0x47,
	0x4f, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x53, 0x4d, 0x41,
	0x4c, 0x4c, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4b, 0x41, 0x52, 0x47, 0x4f, 0x5f, 0x41, 0x47,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10,
	0x02, 0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x41, 0x52, 0x47, 0x4f, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x03, 0x2a, 0x9f, 0x04,
	0x0a, 0x11, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x50, 0x52, 0x55, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x55, 0x4e,
	0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x52, 0x55, 0x4e, 0x45, 0x5f, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x47, 0x45,
	0x4e, 0x54, 0x53, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x52, 0x55, 0x4e, 0x45, 0x5f, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f,
	0x4a, 0x45, 0x43, 0x54, 0x53, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x52, 0x55, 0x4e, 0x45,
	0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57,
	0x41, 0x52, 0x45, 0x48, 0x4f, 0x55, 0x53, 0x45, 0x53, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x50,
	0x52, 0x55, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x53, 0x10, 0x05, 0x12, 0x2a, 0x0a, 0x26, 0x50,
	0x52, 0x55, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x4e, 0x41, 0x4c, 0x59, 0x53, 0x49, 0x53, 0x5f, 0x54, 0x45, 0x4d, 0x50,
	0x4c, 0x41, 0x54, 0x45, 0x53, 0x10, 0x06, 0x12, 0x27, 0x0a, 0x23, 0x50, 0x52, 0x55, 0x4e, 0x45,
	0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50,
	0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x10, 0x07,
	0x12, 0x2f, 0x0a, 0x2b, 0x50, 0x52, 0x55, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f,
	0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x10,
	0x08, 0x12, 0x28, 0x0a, 0x24, 0x50, 0x52, 0x55, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x43, 0x52,
	0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x53, 0x10, 0x09, 0x12, 0x28, 0x0a, 0x24, 0x50,
	0x52, 0x55, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x53, 0x10, 0x0a, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52, 0x55, 0x4e, 0x45, 0x5f, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x4c,
	0x45, 0x53, 0x10, 0x0b, 0x12, 0x25, 0x0a, 0x21, 0x50, 0x52, 0x55, 0x4e, 0x45, 0x5f, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45,
	0x5f, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x53, 0x10, 0x0c, 0x12, 0x22, 0x0a, 0x1e, 0x50,
	0x52, 0x55, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x4d, 0x41, 0x50, 0x53, 0x10, 0x0d, 0x32,
	0xc3, 0x34, 0x0a, 0x0c, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0xf2, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x61,
	0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72,
	0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x82, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x7c, 0x5a, 0x4a, 0x12, 0x48, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f,
	0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x86, 0x02, 0x0a, 0x13, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4b,
	0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2b, 0x2e,
	0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x6b, 0x75,
	0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x8a, 0x01, 0x5a, 0x51, 0x12, 0x4f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x35, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72,
	0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x30, 0x01, 0x12, 0xfc,
	0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b,
	0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72,
	0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67,
	0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x89, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x82, 0x01, 0x3a, 0x01, 0x2a, 0x5a, 0x4d,
	0x3a, 0x01, 0x2a, 0x22, 0x48, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67,
	0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61,
	0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x2e, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61,
	0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x8b, 0x02,
	0x0a, 0x12, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61,
	0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4b, 0x61, 0x72, 0x67,
	0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b, 0x01,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x94, 0x01, 0x3a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5a, 0x56,
	0x3a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x32, 0x4d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x32, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb3, 0x02, 0x0a, 0x1c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x34, 0x2e, 0x61,
	0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5, 0x01, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x9e, 0x01, 0x3a, 0x01, 0x2a, 0x5a, 0x5b, 0x3a, 0x01, 0x2a, 0x1a, 0x56, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x1a, 0x3c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67,
	0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0xfb, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x72, 0x67,
	0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x8a, 0x01, 0x5a, 0x51, 0x12, 0x4f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x35, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12,
	0xac, 0x02, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61,
	0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xa6, 0x01, 0x5a, 0x5f, 0x12, 0x5d, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x43, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xbf,
	0x02, 0x0a, 0x18, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xbb, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xb4, 0x01, 0x5a, 0x66, 0x12, 0x64, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x6f, 0x72, 0x67,
	0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61,
	0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x4a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x30, 0x01,
	0x12, 0xb5, 0x02, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x2e,
	0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xb3, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xac, 0x01, 0x3a, 0x01, 0x2a, 0x5a,
	0x62, 0x3a, 0x01, 0x2a, 0x22, 0x5d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72,
	0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f,
	0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b,
	0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x43, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67,
	0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xbf, 0x02, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b,
	0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61,
	0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbd, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0xb6, 0x01, 0x3a, 0x01, 0x2a, 0x5a, 0x67, 0x3a, 0x01, 0x2a, 0x1a, 0x62, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x1a, 0x48, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb8, 0x02, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xb3, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xac, 0x01, 0x3a, 0x01, 0x2a, 0x5a, 0x62, 0x3a, 0x01,
	0x2a, 0x1a, 0x5d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f,
	0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67,
	0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x43, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xb0, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x72,
	0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x2d, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb7,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xb0, 0x01, 0x5a, 0x64, 0x12, 0x62, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x48,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b,
	0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xe7, 0x02, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x12, 0x36, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x48, 0x74, 0x74, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x22, 0xf4, 0x01, 0x92, 0x41, 0x26, 0x12,
	0x24, 0x47, 0x65, 0x74, 0x20, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x20,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xc4, 0x01, 0x5a, 0x6e, 0x12, 0x6c,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x2f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x12, 0x52, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72,
	0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73,
	0x30, 0x01, 0x12, 0xc6, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2f,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xc7, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xc0, 0x01, 0x5a, 0x6c, 0x12, 0x6a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x50, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0xf1, 0x01, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x8d, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x86, 0x01, 0x5a, 0x4f, 0x2a, 0x4d, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2a, 0x33, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f,
	0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0xaa, 0x02, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61,
	0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xb7, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xb0, 0x01, 0x5a, 0x64, 0x2a, 0x62,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x2a, 0x48, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73,
	0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xed, 0x02, 0x0a,
	0x1e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12,
	0x36, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xd9, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xd2, 0x01, 0x3a, 0x01, 0x2a, 0x5a, 0x75, 0x3a,
	0x01, 0x2a, 0x22, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73,
	0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72,
	0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x2d, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x22, 0x56, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72,
	0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65,
	0x2d, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0xcb, 0x02, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc3, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xbc, 0x01, 0x3a, 0x01,
	0x2a, 0x5a, 0x6a, 0x3a, 0x01, 0x2a, 0x22, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61,
	0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x98, 0x02, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x29, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xa4,
	0x01, 0x3a, 0x01, 0x2a, 0x5a, 0x5e, 0x3a, 0x01, 0x2a, 0x22, 0x59, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x22, 0x3f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72,
	0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x9d, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x61,
	0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xa6, 0x01, 0x3a,
	0x01, 0x2a, 0x5a, 0x5f, 0x3a, 0x01, 0x2a, 0x22, 0x5a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x40, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67,
	0x73, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xac, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x2d, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb3,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0xac, 0x01, 0x3a, 0x01, 0x2a, 0x5a, 0x62, 0x3a, 0x01, 0x2a,
	0x22, 0x5d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f,
	0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x2d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22,
	0x43, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x2d, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x12, 0xcd, 0x01, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4b, 0x61,
	0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4b,
	0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x58, 0x3a, 0x01, 0x2a, 0x22,
	0x53, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x12, 0xce, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4b,
	0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x2e, 0x61,
	0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x6b, 0x75, 0x69,
	0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x56, 0x12,
	0x54, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x73, 0x2f, 0x7b, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x42, 0xc1, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x4b,
	0x61, 0x72, 0x67, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x69, 0x6f,
	0x2f, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6b, 0x61, 0x72,
	0x67, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x41, 0x4b, 0x58, 0xaa, 0x02, 0x0f, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x4b, 0x61, 0x72,
	0x67, 0x6f, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x5c, 0x4b,
	0x61, 0x72, 0x67, 0x6f, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x5c, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x3a, 0x3a,
	0x4b, 0x61, 0x72, 0x67, 0x6f, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_kargo_v1_kargo_proto_rawDescOnce sync.Once
	file_kargo_v1_kargo_proto_rawDescData = file_kargo_v1_kargo_proto_rawDesc
)

func file_kargo_v1_kargo_proto_rawDescGZIP() []byte {
	file_kargo_v1_kargo_proto_rawDescOnce.Do(func() {
		file_kargo_v1_kargo_proto_rawDescData = protoimpl.X.CompressGZIP(file_kargo_v1_kargo_proto_rawDescData)
	})
	return file_kargo_v1_kargo_proto_rawDescData
}

var file_kargo_v1_kargo_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_kargo_v1_kargo_proto_msgTypes = make([]protoimpl.MessageInfo, 82)
var file_kargo_v1_kargo_proto_goTypes = []interface{}{
	(PromotionField)(0),                            // 0: akuity.kargo.v1.PromotionField
	(PromotionGroupField)(0),                       // 1: akuity.kargo.v1.PromotionGroupField
	(KargoAgentSize)(0),                            // 2: akuity.kargo.v1.KargoAgentSize
	(PruneResourceType)(0),                         // 3: akuity.kargo.v1.PruneResourceType
	(*GetStageSpecificStatsRequest)(nil),           // 4: akuity.kargo.v1.GetStageSpecificStatsRequest
	(*GetStageSpecificStatsResponse)(nil),          // 5: akuity.kargo.v1.GetStageSpecificStatsResponse
	(*LeadTimeData)(nil),                           // 6: akuity.kargo.v1.LeadTimeData
	(*RecoveryTimeData)(nil),                       // 7: akuity.kargo.v1.RecoveryTimeData
	(*GetPromotionStatsRequest)(nil),               // 8: akuity.kargo.v1.GetPromotionStatsRequest
	(*GetPromotionEventsRequest)(nil),              // 9: akuity.kargo.v1.GetPromotionEventsRequest
	(*PromotionFilter)(nil),                        // 10: akuity.kargo.v1.PromotionFilter
	(*PromotionStat)(nil),                          // 11: akuity.kargo.v1.PromotionStat
	(*PromotionEvent)(nil),                         // 12: akuity.kargo.v1.PromotionEvent
	(*PromotionEventDetails)(nil),                  // 13: akuity.kargo.v1.PromotionEventDetails
	(*OperationInitiator)(nil),                     // 14: akuity.kargo.v1.OperationInitiator
	(*GetPromotionStatsResponse)(nil),              // 15: akuity.kargo.v1.GetPromotionStatsResponse
	(*GetPromotionEventsResponse)(nil),             // 16: akuity.kargo.v1.GetPromotionEventsResponse
	(*UpdateInstanceAgentVersionRequest)(nil),      // 17: akuity.kargo.v1.UpdateInstanceAgentVersionRequest
	(*UpdateInstanceAgentVersionResponse)(nil),     // 18: akuity.kargo.v1.UpdateInstanceAgentVersionResponse
	(*RotateInstanceAgentCredentialsRequest)(nil),  // 19: akuity.kargo.v1.RotateInstanceAgentCredentialsRequest
	(*RotateInstanceAgentCredentialsResponse)(nil), // 20: akuity.kargo.v1.RotateInstanceAgentCredentialsResponse
	(*DeleteInstanceAgentRequest)(nil),             // 21: akuity.kargo.v1.DeleteInstanceAgentRequest
	(*DeleteInstanceAgentResponse)(nil),            // 22: akuity.kargo.v1.DeleteInstanceAgentResponse
	(*DeleteInstanceRequest)(nil),                  // 23: akuity.kargo.v1.DeleteInstanceRequest
	(*DeleteInstanceResponse)(nil),                 // 24: akuity.kargo.v1.DeleteInstanceResponse
	(*ListKargoInstancesRequest)(nil),              // 25: akuity.kargo.v1.ListKargoInstancesRequest
	(*ListKargoInstancesResponse)(nil),             // 26: akuity.kargo.v1.ListKargoInstancesResponse
	(*CreateKargoInstanceRequest)(nil),             // 27: akuity.kargo.v1.CreateKargoInstanceRequest
	(*CreateKargoInstanceResponse)(nil),            // 28: akuity.kargo.v1.CreateKargoInstanceResponse
	(*GetKargoInstanceRequest)(nil),                // 29: akuity.kargo.v1.GetKargoInstanceRequest
	(*CertificateStatus)(nil),                      // 30: akuity.kargo.v1.CertificateStatus
	(*KargoInstance)(nil),                          // 31: akuity.kargo.v1.KargoInstance
	(*KargoIPAllowListEntry)(nil),                  // 32: akuity.kargo.v1.KargoIPAllowListEntry
	(*KargoAgentCustomization)(nil),                // 33: akuity.kargo.v1.KargoAgentCustomization
	(*KargoInstanceSpec)(nil),                      // 34: akuity.kargo.v1.KargoInstanceSpec
	(*AkuityIntelligence)(nil),                     // 35: akuity.kargo.v1.AkuityIntelligence
	(*KargoControllerCM)(nil),                      // 36: akuity.kargo.v1.KargoControllerCM
	(*KargoWebhookCM)(nil),                         // 37: akuity.kargo.v1.KargoWebhookCM
	(*KargoApiCM)(nil),                             // 38: akuity.kargo.v1.KargoApiCM
	(*KargoApiSecret)(nil),                         // 39: akuity.kargo.v1.KargoApiSecret
	(*KargoPredefinedAccountClaimValue)(nil),       // 40: akuity.kargo.v1.KargoPredefinedAccountClaimValue
	(*KargoPredefinedAccountData)(nil),             // 41: akuity.kargo.v1.KargoPredefinedAccountData
	(*KargoMiscellaneousSecrets)(nil),              // 42: akuity.kargo.v1.KargoMiscellaneousSecrets
	(*DataDogRolloutsSecret)(nil),                  // 43: akuity.kargo.v1.DataDogRolloutsSecret
	(*NewRelicRolloutsSecret)(nil),                 // 44: akuity.kargo.v1.NewRelicRolloutsSecret
	(*InfluxDbRolloutsSecret)(nil),                 // 45: akuity.kargo.v1.InfluxDbRolloutsSecret
	(*KargoOidcConfig)(nil),                        // 46: akuity.kargo.v1.KargoOidcConfig
	(*GarbageCollectorConfig)(nil),                 // 47: akuity.kargo.v1.GarbageCollectorConfig
	(*WatchKargoInstancesRequest)(nil),             // 48: akuity.kargo.v1.WatchKargoInstancesRequest
	(*GetKargoInstanceResponse)(nil),               // 49: akuity.kargo.v1.GetKargoInstanceResponse
	(*WatchKargoInstancesResponse)(nil),            // 50: akuity.kargo.v1.WatchKargoInstancesResponse
	(*PatchKargoInstanceRequest)(nil),              // 51: akuity.kargo.v1.PatchKargoInstanceRequest
	(*PatchKargoInstanceResponse)(nil),             // 52: akuity.kargo.v1.PatchKargoInstanceResponse
	(*UpdateKargoInstanceWorkspaceRequest)(nil),    // 53: akuity.kargo.v1.UpdateKargoInstanceWorkspaceRequest
	(*UpdateKargoInstanceWorkspaceResponse)(nil),   // 54: akuity.kargo.v1.UpdateKargoInstanceWorkspaceResponse
	(*KargoAgent)(nil),                             // 55: akuity.kargo.v1.KargoAgent
	(*KargoAgentState)(nil),                        // 56: akuity.kargo.v1.KargoAgentState
	(*ListKargoInstanceAgentsRequest)(nil),         // 57: akuity.kargo.v1.ListKargoInstanceAgentsRequest
	(*WatchKargoInstanceAgentsRequest)(nil),        // 58: akuity.kargo.v1.WatchKargoInstanceAgentsRequest
	(*KargoAgentFilter)(nil),                       // 59: akuity.kargo.v1.KargoAgentFilter
	(*CreateKargoInstanceAgentRequest)(nil),        // 60: akuity.kargo.v1.CreateKargoInstanceAgentRequest
	(*KargoAgentData)(nil),                         // 61: akuity.kargo.v1.KargoAgentData
	(*GetInstanceAgentCommandRequest)(nil),         // 62: akuity.kargo.v1.GetInstanceAgentCommandRequest
	(*GetInstanceAgentCommandResponse)(nil),        // 63: akuity.kargo.v1.GetInstanceAgentCommandResponse
	(*ListKargoInstanceAgentsResponse)(nil),        // 64: akuity.kargo.v1.ListKargoInstanceAgentsResponse
	(*WatchKargoInstanceAgentsResponse)(nil),       // 65: akuity.kargo.v1.WatchKargoInstanceAgentsResponse
	(*CreateKargoInstanceAgentResponse)(nil),       // 66: akuity.kargo.v1.CreateKargoInstanceAgentResponse
	(*GetKargoInstanceAgentRequest)(nil),           // 67: akuity.kargo.v1.GetKargoInstanceAgentRequest
	(*GetKargoInstanceAgentResponse)(nil),          // 68: akuity.kargo.v1.GetKargoInstanceAgentResponse
	(*UpdateKargoInstanceAgentRequest)(nil),        // 69: akuity.kargo.v1.UpdateKargoInstanceAgentRequest
	(*UpdateKargoInstanceAgentResponse)(nil),       // 70: akuity.kargo.v1.UpdateKargoInstanceAgentResponse
	(*GetKargoInstanceAgentManifestsRequest)(nil),  // 71: akuity.kargo.v1.GetKargoInstanceAgentManifestsRequest
	(*UpdateKargoInstanceAgentsRequest)(nil),       // 72: akuity.kargo.v1.UpdateKargoInstanceAgentsRequest
	(*UpdateKargoInstanceAgentsResponse)(nil),      // 73: akuity.kargo.v1.UpdateKargoInstanceAgentsResponse
	(*ApplyKargoInstanceRequest)(nil),              // 74: akuity.kargo.v1.ApplyKargoInstanceRequest
	(*ApplyKargoInstanceResponse)(nil),             // 75: akuity.kargo.v1.ApplyKargoInstanceResponse
	(*ExportKargoInstanceRequest)(nil),             // 76: akuity.kargo.v1.ExportKargoInstanceRequest
	(*ExportKargoInstanceResponse)(nil),            // 77: akuity.kargo.v1.ExportKargoInstanceResponse
	nil,                                            // 78: akuity.kargo.v1.PromotionStat.CountMapEntry
	nil,                                            // 79: akuity.kargo.v1.PromotionStat.AverageMapEntry
	nil,                                            // 80: akuity.kargo.v1.KargoPredefinedAccountData.ClaimsEntry
	nil,                                            // 81: akuity.kargo.v1.KargoOidcConfig.DexConfigSecretEntry
	(*KargoOidcConfig_Value)(nil),                  // 82: akuity.kargo.v1.KargoOidcConfig.Value
	nil,                                            // 83: akuity.kargo.v1.KargoAgentFilter.LabelsEntry
	nil,                                            // 84: akuity.kargo.v1.KargoAgentData.LabelsEntry
	nil,                                            // 85: akuity.kargo.v1.KargoAgentData.AnnotationsEntry
	(v1.GroupByInterval)(0),                        // 86: akuity.types.misc.v1.GroupByInterval
	(*structpb.Struct)(nil),                        // 87: google.protobuf.Struct
	(*v11.Status)(nil),                             // 88: akuity.types.status.health.v1.Status
	(*v12.Status)(nil),                             // 89: akuity.types.status.reconciliation.v1.Status
	(*timestamppb.Timestamp)(nil),                  // 90: google.protobuf.Timestamp
	(v13.EventType)(0),                             // 91: akuity.types.events.v1.EventType
	(*v11.AgentAggregatedHealthResponse)(nil),      // 92: akuity.types.status.health.v1.AgentAggregatedHealthResponse
	(v12.AgentUpdateStatus)(0),                     // 93: akuity.types.status.reconciliation.v1.AgentUpdateStatus
	(v11.StatusCode)(0),                            // 94: akuity.types.status.health.v1.StatusCode
	(v14.Type)(0),                                  // 95: akuity.types.id.v1.Type
	(*httpbody.HttpBody)(nil),                      // 96: google.api.HttpBody
}
var file_kargo_v1_kargo_proto_depIdxs = []int32{
	10,  // 0: akuity.kargo.v1.GetStageSpecificStatsRequest.filter:type_name -> akuity.kargo.v1.PromotionFilter
	6,   // 1: akuity.kargo.v1.GetStageSpecificStatsResponse.lead_time_data:type_name -> akuity.kargo.v1.LeadTimeData
	7,   // 2: akuity.kargo.v1.GetStageSpecificStatsResponse.recovery_time_data:type_name -> akuity.kargo.v1.RecoveryTimeData
	10,  // 3: akuity.kargo.v1.GetPromotionStatsRequest.filter:type_name -> akuity.kargo.v1.PromotionFilter
	86,  // 4: akuity.kargo.v1.GetPromotionStatsRequest.interval:type_name -> akuity.types.misc.v1.GroupByInterval
	1,   // 5: akuity.kargo.v1.GetPromotionStatsRequest.group_by_field:type_name -> akuity.kargo.v1.PromotionGroupField
	10,  // 6: akuity.kargo.v1.GetPromotionEventsRequest.filter:type_name -> akuity.kargo.v1.PromotionFilter
	0,   // 7: akuity.kargo.v1.GetPromotionEventsRequest.field:type_name -> akuity.kargo.v1.PromotionField
	78,  // 8: akuity.kargo.v1.PromotionStat.count_map:type_name -> akuity.kargo.v1.PromotionStat.CountMapEntry
	79,  // 9: akuity.kargo.v1.PromotionStat.average_map:type_name -> akuity.kargo.v1.PromotionStat.AverageMapEntry
	13,  // 10: akuity.kargo.v1.PromotionEvent.details:type_name -> akuity.kargo.v1.PromotionEventDetails
	14,  // 11: akuity.kargo.v1.PromotionEventDetails.initiated_by:type_name -> akuity.kargo.v1.OperationInitiator
	87,  // 12: akuity.kargo.v1.PromotionEventDetails.miscellaneous:type_name -> google.protobuf.Struct
	11,  // 13: akuity.kargo.v1.GetPromotionStatsResponse.promotion_stats:type_name -> akuity.kargo.v1.PromotionStat
	12,  // 14: akuity.kargo.v1.GetPromotionEventsResponse.promotion_events:type_name -> akuity.kargo.v1.PromotionEvent
	31,  // 15: akuity.kargo.v1.ListKargoInstancesResponse.instances:type_name -> akuity.kargo.v1.KargoInstance
	31,  // 16: akuity.kargo.v1.CreateKargoInstanceResponse.instance:type_name -> akuity.kargo.v1.KargoInstance
	34,  // 17: akuity.kargo.v1.KargoInstance.spec:type_name -> akuity.kargo.v1.KargoInstanceSpec
	88,  // 18: akuity.kargo.v1.KargoInstance.health_status:type_name -> akuity.types.status.health.v1.Status
	89,  // 19: akuity.kargo.v1.KargoInstance.reconciliation_status:type_name -> akuity.types.status.reconciliation.v1.Status
	90,  // 20: akuity.kargo.v1.KargoInstance.delete_time:type_name -> google.protobuf.Timestamp
	36,  // 21: akuity.kargo.v1.KargoInstance.controller_cm:type_name -> akuity.kargo.v1.KargoControllerCM
	37,  // 22: akuity.kargo.v1.KargoInstance.webhook_cm:type_name -> akuity.kargo.v1.KargoWebhookCM
	38,  // 23: akuity.kargo.v1.KargoInstance.api_cm:type_name -> akuity.kargo.v1.KargoApiCM
	39,  // 24: akuity.kargo.v1.KargoInstance.api_secret:type_name -> akuity.kargo.v1.KargoApiSecret
	46,  // 25: akuity.kargo.v1.KargoInstance.oidc_config:type_name -> akuity.kargo.v1.KargoOidcConfig
	42,  // 26: akuity.kargo.v1.KargoInstance.miscellaneous_secrets:type_name -> akuity.kargo.v1.KargoMiscellaneousSecrets
	30,  // 27: akuity.kargo.v1.KargoInstance.certificate_status:type_name -> akuity.kargo.v1.CertificateStatus
	87,  // 28: akuity.kargo.v1.KargoAgentCustomization.kustomization:type_name -> google.protobuf.Struct
	32,  // 29: akuity.kargo.v1.KargoInstanceSpec.ip_allow_list:type_name -> akuity.kargo.v1.KargoIPAllowListEntry
	33,  // 30: akuity.kargo.v1.KargoInstanceSpec.agent_customization_defaults:type_name -> akuity.kargo.v1.KargoAgentCustomization
	35,  // 31: akuity.kargo.v1.KargoInstanceSpec.akuity_intelligence:type_name -> akuity.kargo.v1.AkuityIntelligence
	47,  // 32: akuity.kargo.v1.KargoInstanceSpec.gc_config:type_name -> akuity.kargo.v1.GarbageCollectorConfig
	80,  // 33: akuity.kargo.v1.KargoPredefinedAccountData.claims:type_name -> akuity.kargo.v1.KargoPredefinedAccountData.ClaimsEntry
	43,  // 34: akuity.kargo.v1.KargoMiscellaneousSecrets.datadog_rollouts_secret:type_name -> akuity.kargo.v1.DataDogRolloutsSecret
	44,  // 35: akuity.kargo.v1.KargoMiscellaneousSecrets.newrelic_rollouts_secret:type_name -> akuity.kargo.v1.NewRelicRolloutsSecret
	45,  // 36: akuity.kargo.v1.KargoMiscellaneousSecrets.influxdb_rollouts_secret:type_name -> akuity.kargo.v1.InfluxDbRolloutsSecret
	81,  // 37: akuity.kargo.v1.KargoOidcConfig.dex_config_secret:type_name -> akuity.kargo.v1.KargoOidcConfig.DexConfigSecretEntry
	41,  // 38: akuity.kargo.v1.KargoOidcConfig.admin_account:type_name -> akuity.kargo.v1.KargoPredefinedAccountData
	41,  // 39: akuity.kargo.v1.KargoOidcConfig.viewer_account:type_name -> akuity.kargo.v1.KargoPredefinedAccountData
	41,  // 40: akuity.kargo.v1.KargoOidcConfig.user_account:type_name -> akuity.kargo.v1.KargoPredefinedAccountData
	41,  // 41: akuity.kargo.v1.KargoOidcConfig.project_creator_account:type_name -> akuity.kargo.v1.KargoPredefinedAccountData
	31,  // 42: akuity.kargo.v1.GetKargoInstanceResponse.instance:type_name -> akuity.kargo.v1.KargoInstance
	31,  // 43: akuity.kargo.v1.WatchKargoInstancesResponse.item:type_name -> akuity.kargo.v1.KargoInstance
	91,  // 44: akuity.kargo.v1.WatchKargoInstancesResponse.type:type_name -> akuity.types.events.v1.EventType
	87,  // 45: akuity.kargo.v1.PatchKargoInstanceRequest.patch:type_name -> google.protobuf.Struct
	31,  // 46: akuity.kargo.v1.PatchKargoInstanceResponse.instance:type_name -> akuity.kargo.v1.KargoInstance
	31,  // 47: akuity.kargo.v1.UpdateKargoInstanceWorkspaceResponse.instance:type_name -> akuity.kargo.v1.KargoInstance
	61,  // 48: akuity.kargo.v1.KargoAgent.data:type_name -> akuity.kargo.v1.KargoAgentData
	90,  // 49: akuity.kargo.v1.KargoAgent.delete_time:type_name -> google.protobuf.Timestamp
	88,  // 50: akuity.kargo.v1.KargoAgent.health_status:type_name -> akuity.types.status.health.v1.Status
	89,  // 51: akuity.kargo.v1.KargoAgent.reconciliation_status:type_name -> akuity.types.status.reconciliation.v1.Status
	56,  // 52: akuity.kargo.v1.KargoAgent.agent_state:type_name -> akuity.kargo.v1.KargoAgentState
	90,  // 53: akuity.kargo.v1.KargoAgentState.observe_time:type_name -> google.protobuf.Timestamp
	92,  // 54: akuity.kargo.v1.KargoAgentState.status:type_name -> akuity.types.status.health.v1.AgentAggregatedHealthResponse
	93,  // 55: akuity.kargo.v1.KargoAgentState.update_status:type_name -> akuity.types.status.reconciliation.v1.AgentUpdateStatus
	59,  // 56: akuity.kargo.v1.ListKargoInstanceAgentsRequest.filter:type_name -> akuity.kargo.v1.KargoAgentFilter
	59,  // 57: akuity.kargo.v1.WatchKargoInstanceAgentsRequest.filter:type_name -> akuity.kargo.v1.KargoAgentFilter
	94,  // 58: akuity.kargo.v1.KargoAgentFilter.agent_status:type_name -> akuity.types.status.health.v1.StatusCode
	83,  // 59: akuity.kargo.v1.KargoAgentFilter.labels:type_name -> akuity.kargo.v1.KargoAgentFilter.LabelsEntry
	61,  // 60: akuity.kargo.v1.CreateKargoInstanceAgentRequest.data:type_name -> akuity.kargo.v1.KargoAgentData
	2,   // 61: akuity.kargo.v1.KargoAgentData.size:type_name -> akuity.kargo.v1.KargoAgentSize
	84,  // 62: akuity.kargo.v1.KargoAgentData.labels:type_name -> akuity.kargo.v1.KargoAgentData.LabelsEntry
	85,  // 63: akuity.kargo.v1.KargoAgentData.annotations:type_name -> akuity.kargo.v1.KargoAgentData.AnnotationsEntry
	87,  // 64: akuity.kargo.v1.KargoAgentData.kustomization:type_name -> google.protobuf.Struct
	55,  // 65: akuity.kargo.v1.ListKargoInstanceAgentsResponse.agents:type_name -> akuity.kargo.v1.KargoAgent
	55,  // 66: akuity.kargo.v1.WatchKargoInstanceAgentsResponse.item:type_name -> akuity.kargo.v1.KargoAgent
	91,  // 67: akuity.kargo.v1.WatchKargoInstanceAgentsResponse.type:type_name -> akuity.types.events.v1.EventType
	55,  // 68: akuity.kargo.v1.CreateKargoInstanceAgentResponse.agent:type_name -> akuity.kargo.v1.KargoAgent
	55,  // 69: akuity.kargo.v1.GetKargoInstanceAgentResponse.agent:type_name -> akuity.kargo.v1.KargoAgent
	61,  // 70: akuity.kargo.v1.UpdateKargoInstanceAgentRequest.data:type_name -> akuity.kargo.v1.KargoAgentData
	55,  // 71: akuity.kargo.v1.UpdateKargoInstanceAgentResponse.agent:type_name -> akuity.kargo.v1.KargoAgent
	33,  // 72: akuity.kargo.v1.UpdateKargoInstanceAgentsRequest.agent_customizations:type_name -> akuity.kargo.v1.KargoAgentCustomization
	95,  // 73: akuity.kargo.v1.ApplyKargoInstanceRequest.id_type:type_name -> akuity.types.id.v1.Type
	87,  // 74: akuity.kargo.v1.ApplyKargoInstanceRequest.kargo:type_name -> google.protobuf.Struct
	87,  // 75: akuity.kargo.v1.ApplyKargoInstanceRequest.agents:type_name -> google.protobuf.Struct
	3,   // 76: akuity.kargo.v1.ApplyKargoInstanceRequest.prune_resource_types:type_name -> akuity.kargo.v1.PruneResourceType
	87,  // 77: akuity.kargo.v1.ApplyKargoInstanceRequest.kargo_configmap:type_name -> google.protobuf.Struct
	87,  // 78: akuity.kargo.v1.ApplyKargoInstanceRequest.kargo_secret:type_name -> google.protobuf.Struct
	87,  // 79: akuity.kargo.v1.ApplyKargoInstanceRequest.projects:type_name -> google.protobuf.Struct
	87,  // 80: akuity.kargo.v1.ApplyKargoInstanceRequest.warehouses:type_name -> google.protobuf.Struct
	87,  // 81: akuity.kargo.v1.ApplyKargoInstanceRequest.stages:type_name -> google.protobuf.Struct
	87,  // 82: akuity.kargo.v1.ApplyKargoInstanceRequest.analysis_templates:type_name -> google.protobuf.Struct
	87,  // 83: akuity.kargo.v1.ApplyKargoInstanceRequest.promotion_tasks:type_name -> google.protobuf.Struct
	87,  // 84: akuity.kargo.v1.ApplyKargoInstanceRequest.cluster_promotion_tasks:type_name -> google.protobuf.Struct
	87,  // 85: akuity.kargo.v1.ApplyKargoInstanceRequest.repo_credentials:type_name -> google.protobuf.Struct
	87,  // 86: akuity.kargo.v1.ApplyKargoInstanceRequest.service_accounts:type_name -> google.protobuf.Struct
	87,  // 87: akuity.kargo.v1.ApplyKargoInstanceRequest.roles:type_name -> google.protobuf.Struct
	87,  // 88: akuity.kargo.v1.ApplyKargoInstanceRequest.role_bindings:type_name -> google.protobuf.Struct
	87,  // 89: akuity.kargo.v1.ApplyKargoInstanceRequest.configmaps:type_name -> google.protobuf.Struct
	87,  // 90: akuity.kargo.v1.ExportKargoInstanceResponse.kargo:type_name -> google.protobuf.Struct
	87,  // 91: akuity.kargo.v1.ExportKargoInstanceResponse.agents:type_name -> google.protobuf.Struct
	87,  // 92: akuity.kargo.v1.ExportKargoInstanceResponse.kargo_configmap:type_name -> google.protobuf.Struct
	87,  // 93: akuity.kargo.v1.ExportKargoInstanceResponse.projects:type_name -> google.protobuf.Struct
	87,  // 94: akuity.kargo.v1.ExportKargoInstanceResponse.warehouses:type_name -> google.protobuf.Struct
	87,  // 95: akuity.kargo.v1.ExportKargoInstanceResponse.stages:type_name -> google.protobuf.Struct
	87,  // 96: akuity.kargo.v1.ExportKargoInstanceResponse.analysis_templates:type_name -> google.protobuf.Struct
	87,  // 97: akuity.kargo.v1.ExportKargoInstanceResponse.promotion_tasks:type_name -> google.protobuf.Struct
	87,  // 98: akuity.kargo.v1.ExportKargoInstanceResponse.cluster_promotion_tasks:type_name -> google.protobuf.Struct
	87,  // 99: akuity.kargo.v1.ExportKargoInstanceResponse.service_accounts:type_name -> google.protobuf.Struct
	87,  // 100: akuity.kargo.v1.ExportKargoInstanceResponse.roles:type_name -> google.protobuf.Struct
	87,  // 101: akuity.kargo.v1.ExportKargoInstanceResponse.role_bindings:type_name -> google.protobuf.Struct
	87,  // 102: akuity.kargo.v1.ExportKargoInstanceResponse.configmaps:type_name -> google.protobuf.Struct
	40,  // 103: akuity.kargo.v1.KargoPredefinedAccountData.ClaimsEntry.value:type_name -> akuity.kargo.v1.KargoPredefinedAccountClaimValue
	82,  // 104: akuity.kargo.v1.KargoOidcConfig.DexConfigSecretEntry.value:type_name -> akuity.kargo.v1.KargoOidcConfig.Value
	25,  // 105: akuity.kargo.v1.KargoService.ListKargoInstances:input_type -> akuity.kargo.v1.ListKargoInstancesRequest
	48,  // 106: akuity.kargo.v1.KargoService.WatchKargoInstances:input_type -> akuity.kargo.v1.WatchKargoInstancesRequest
	27,  // 107: akuity.kargo.v1.KargoService.CreateKargoInstance:input_type -> akuity.kargo.v1.CreateKargoInstanceRequest
	51,  // 108: akuity.kargo.v1.KargoService.PatchKargoInstance:input_type -> akuity.kargo.v1.PatchKargoInstanceRequest
	53,  // 109: akuity.kargo.v1.KargoService.UpdateKargoInstanceWorkspace:input_type -> akuity.kargo.v1.UpdateKargoInstanceWorkspaceRequest
	29,  // 110: akuity.kargo.v1.KargoService.GetKargoInstance:input_type -> akuity.kargo.v1.GetKargoInstanceRequest
	57,  // 111: akuity.kargo.v1.KargoService.ListKargoInstanceAgents:input_type -> akuity.kargo.v1.ListKargoInstanceAgentsRequest
	58,  // 112: akuity.kargo.v1.KargoService.WatchKargoInstanceAgents:input_type -> akuity.kargo.v1.WatchKargoInstanceAgentsRequest
	60,  // 113: akuity.kargo.v1.KargoService.CreateKargoInstanceAgent:input_type -> akuity.kargo.v1.CreateKargoInstanceAgentRequest
	69,  // 114: akuity.kargo.v1.KargoService.UpdateKargoInstanceAgent:input_type -> akuity.kargo.v1.UpdateKargoInstanceAgentRequest
	72,  // 115: akuity.kargo.v1.KargoService.UpdateKargoInstanceAgents:input_type -> akuity.kargo.v1.UpdateKargoInstanceAgentsRequest
	67,  // 116: akuity.kargo.v1.KargoService.GetKargoInstanceAgent:input_type -> akuity.kargo.v1.GetKargoInstanceAgentRequest
	71,  // 117: akuity.kargo.v1.KargoService.GetKargoInstanceAgentManifests:input_type -> akuity.kargo.v1.GetKargoInstanceAgentManifestsRequest
	62,  // 118: akuity.kargo.v1.KargoService.GetInstanceAgentCommand:input_type -> akuity.kargo.v1.GetInstanceAgentCommandRequest
	23,  // 119: akuity.kargo.v1.KargoService.DeleteInstance:input_type -> akuity.kargo.v1.DeleteInstanceRequest
	21,  // 120: akuity.kargo.v1.KargoService.DeleteInstanceAgent:input_type -> akuity.kargo.v1.DeleteInstanceAgentRequest
	19,  // 121: akuity.kargo.v1.KargoService.RotateInstanceAgentCredentials:input_type -> akuity.kargo.v1.RotateInstanceAgentCredentialsRequest
	17,  // 122: akuity.kargo.v1.KargoService.UpdateInstanceAgentVersion:input_type -> akuity.kargo.v1.UpdateInstanceAgentVersionRequest
	8,   // 123: akuity.kargo.v1.KargoService.GetPromotionStats:input_type -> akuity.kargo.v1.GetPromotionStatsRequest
	9,   // 124: akuity.kargo.v1.KargoService.GetPromotionEvents:input_type -> akuity.kargo.v1.GetPromotionEventsRequest
	4,   // 125: akuity.kargo.v1.KargoService.GetStageSpecificStats:input_type -> akuity.kargo.v1.GetStageSpecificStatsRequest
	74,  // 126: akuity.kargo.v1.KargoService.ApplyKargoInstance:input_type -> akuity.kargo.v1.ApplyKargoInstanceRequest
	76,  // 127: akuity.kargo.v1.KargoService.ExportKargoInstance:input_type -> akuity.kargo.v1.ExportKargoInstanceRequest
	26,  // 128: akuity.kargo.v1.KargoService.ListKargoInstances:output_type -> akuity.kargo.v1.ListKargoInstancesResponse
	50,  // 129: akuity.kargo.v1.KargoService.WatchKargoInstances:output_type -> akuity.kargo.v1.WatchKargoInstancesResponse
	28,  // 130: akuity.kargo.v1.KargoService.CreateKargoInstance:output_type -> akuity.kargo.v1.CreateKargoInstanceResponse
	52,  // 131: akuity.kargo.v1.KargoService.PatchKargoInstance:output_type -> akuity.kargo.v1.PatchKargoInstanceResponse
	54,  // 132: akuity.kargo.v1.KargoService.UpdateKargoInstanceWorkspace:output_type -> akuity.kargo.v1.UpdateKargoInstanceWorkspaceResponse
	49,  // 133: akuity.kargo.v1.KargoService.GetKargoInstance:output_type -> akuity.kargo.v1.GetKargoInstanceResponse
	64,  // 134: akuity.kargo.v1.KargoService.ListKargoInstanceAgents:output_type -> akuity.kargo.v1.ListKargoInstanceAgentsResponse
	65,  // 135: akuity.kargo.v1.KargoService.WatchKargoInstanceAgents:output_type -> akuity.kargo.v1.WatchKargoInstanceAgentsResponse
	66,  // 136: akuity.kargo.v1.KargoService.CreateKargoInstanceAgent:output_type -> akuity.kargo.v1.CreateKargoInstanceAgentResponse
	70,  // 137: akuity.kargo.v1.KargoService.UpdateKargoInstanceAgent:output_type -> akuity.kargo.v1.UpdateKargoInstanceAgentResponse
	73,  // 138: akuity.kargo.v1.KargoService.UpdateKargoInstanceAgents:output_type -> akuity.kargo.v1.UpdateKargoInstanceAgentsResponse
	68,  // 139: akuity.kargo.v1.KargoService.GetKargoInstanceAgent:output_type -> akuity.kargo.v1.GetKargoInstanceAgentResponse
	96,  // 140: akuity.kargo.v1.KargoService.GetKargoInstanceAgentManifests:output_type -> google.api.HttpBody
	63,  // 141: akuity.kargo.v1.KargoService.GetInstanceAgentCommand:output_type -> akuity.kargo.v1.GetInstanceAgentCommandResponse
	24,  // 142: akuity.kargo.v1.KargoService.DeleteInstance:output_type -> akuity.kargo.v1.DeleteInstanceResponse
	22,  // 143: akuity.kargo.v1.KargoService.DeleteInstanceAgent:output_type -> akuity.kargo.v1.DeleteInstanceAgentResponse
	20,  // 144: akuity.kargo.v1.KargoService.RotateInstanceAgentCredentials:output_type -> akuity.kargo.v1.RotateInstanceAgentCredentialsResponse
	18,  // 145: akuity.kargo.v1.KargoService.UpdateInstanceAgentVersion:output_type -> akuity.kargo.v1.UpdateInstanceAgentVersionResponse
	15,  // 146: akuity.kargo.v1.KargoService.GetPromotionStats:output_type -> akuity.kargo.v1.GetPromotionStatsResponse
	16,  // 147: akuity.kargo.v1.KargoService.GetPromotionEvents:output_type -> akuity.kargo.v1.GetPromotionEventsResponse
	5,   // 148: akuity.kargo.v1.KargoService.GetStageSpecificStats:output_type -> akuity.kargo.v1.GetStageSpecificStatsResponse
	75,  // 149: akuity.kargo.v1.KargoService.ApplyKargoInstance:output_type -> akuity.kargo.v1.ApplyKargoInstanceResponse
	77,  // 150: akuity.kargo.v1.KargoService.ExportKargoInstance:output_type -> akuity.kargo.v1.ExportKargoInstanceResponse
	128, // [128:151] is the sub-list for method output_type
	105, // [105:128] is the sub-list for method input_type
	105, // [105:105] is the sub-list for extension type_name
	105, // [105:105] is the sub-list for extension extendee
	0,   // [0:105] is the sub-list for field type_name
}

func init() { file_kargo_v1_kargo_proto_init() }
func file_kargo_v1_kargo_proto_init() {
	if File_kargo_v1_kargo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kargo_v1_kargo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStageSpecificStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStageSpecificStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeadTimeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoveryTimeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionEventDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationInitiator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromotionEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstanceAgentVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstanceAgentVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RotateInstanceAgentCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RotateInstanceAgentCredentialsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceAgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKargoInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKargoInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKargoInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKargoInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKargoInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoIPAllowListEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoAgentCustomization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoInstanceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AkuityIntelligence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoControllerCM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoWebhookCM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoApiCM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoApiSecret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoPredefinedAccountClaimValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoPredefinedAccountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoMiscellaneousSecrets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataDogRolloutsSecret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRelicRolloutsSecret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfluxDbRolloutsSecret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoOidcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GarbageCollectorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchKargoInstancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKargoInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchKargoInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchKargoInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchKargoInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKargoInstanceWorkspaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKargoInstanceWorkspaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoAgentState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKargoInstanceAgentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchKargoInstanceAgentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoAgentFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKargoInstanceAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoAgentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceAgentCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceAgentCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKargoInstanceAgentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchKargoInstanceAgentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKargoInstanceAgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKargoInstanceAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKargoInstanceAgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKargoInstanceAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKargoInstanceAgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKargoInstanceAgentManifestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKargoInstanceAgentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKargoInstanceAgentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyKargoInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyKargoInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportKargoInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportKargoInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kargo_v1_kargo_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KargoOidcConfig_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kargo_v1_kargo_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[51].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[52].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[53].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[54].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[55].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[57].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[58].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[67].OneofWrappers = []interface{}{}
	file_kargo_v1_kargo_proto_msgTypes[78].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kargo_v1_kargo_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   82,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kargo_v1_kargo_proto_goTypes,
		DependencyIndexes: file_kargo_v1_kargo_proto_depIdxs,
		EnumInfos:         file_kargo_v1_kargo_proto_enumTypes,
		MessageInfos:      file_kargo_v1_kargo_proto_msgTypes,
	}.Build()
	File_kargo_v1_kargo_proto = out.File
	file_kargo_v1_kargo_proto_rawDesc = nil
	file_kargo_v1_kargo_proto_goTypes = nil
	file_kargo_v1_kargo_proto_depIdxs = nil
}
