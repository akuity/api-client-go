// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: extension/v1/extension.proto

package extensionv1

import (
	v11 "github.com/akuity/api-client-go/pkg/api/gen/argocd/v1"
	v1 "github.com/akuity/api-client-go/pkg/api/gen/organization/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Namespace  string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ResourceID) Reset() {
	*x = ResourceID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_v1_extension_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceID) ProtoMessage() {}

func (x *ResourceID) ProtoReflect() protoreflect.Message {
	mi := &file_extension_v1_extension_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceID.ProtoReflect.Descriptor instead.
func (*ResourceID) Descriptor() ([]byte, []int) {
	return file_extension_v1_extension_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceID) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *ResourceID) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ResourceID) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResourceID) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AssistantMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role         string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content      string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Name         string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	FunctionCall *AssistantFunctionCall `protobuf:"bytes,4,opt,name=function_call,json=functionCall,proto3,oneof" json:"function_call,omitempty"`
}

func (x *AssistantMessage) Reset() {
	*x = AssistantMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_v1_extension_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantMessage) ProtoMessage() {}

func (x *AssistantMessage) ProtoReflect() protoreflect.Message {
	mi := &file_extension_v1_extension_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantMessage.ProtoReflect.Descriptor instead.
func (*AssistantMessage) Descriptor() ([]byte, []int) {
	return file_extension_v1_extension_proto_rawDescGZIP(), []int{1}
}

func (x *AssistantMessage) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AssistantMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AssistantMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssistantMessage) GetFunctionCall() *AssistantFunctionCall {
	if x != nil {
		return x.FunctionCall
	}
	return nil
}

type AssistantFunctionCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Arguments string `protobuf:"bytes,2,opt,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *AssistantFunctionCall) Reset() {
	*x = AssistantFunctionCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_v1_extension_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssistantFunctionCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssistantFunctionCall) ProtoMessage() {}

func (x *AssistantFunctionCall) ProtoReflect() protoreflect.Message {
	mi := &file_extension_v1_extension_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssistantFunctionCall.ProtoReflect.Descriptor instead.
func (*AssistantFunctionCall) Descriptor() ([]byte, []int) {
	return file_extension_v1_extension_proto_rawDescGZIP(), []int{2}
}

func (x *AssistantFunctionCall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssistantFunctionCall) GetArguments() string {
	if x != nil {
		return x.Arguments
	}
	return ""
}

type GetAssistantSuggestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName string              `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	State           string              `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Messages        []*AssistantMessage `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	Resource        *ResourceID         `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	Question        string              `protobuf:"bytes,5,opt,name=question,proto3" json:"question,omitempty"`
}

func (x *GetAssistantSuggestionRequest) Reset() {
	*x = GetAssistantSuggestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_v1_extension_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantSuggestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantSuggestionRequest) ProtoMessage() {}

func (x *GetAssistantSuggestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extension_v1_extension_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantSuggestionRequest.ProtoReflect.Descriptor instead.
func (*GetAssistantSuggestionRequest) Descriptor() ([]byte, []int) {
	return file_extension_v1_extension_proto_rawDescGZIP(), []int{3}
}

func (x *GetAssistantSuggestionRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *GetAssistantSuggestionRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetAssistantSuggestionRequest) GetMessages() []*AssistantMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetAssistantSuggestionRequest) GetResource() *ResourceID {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *GetAssistantSuggestionRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type GetAssistantSuggestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State              string              `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Messages           []*AssistantMessage `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	SuggestedQuestions []string            `protobuf:"bytes,3,rep,name=suggested_questions,json=suggestedQuestions,proto3" json:"suggested_questions,omitempty"`
}

func (x *GetAssistantSuggestionResponse) Reset() {
	*x = GetAssistantSuggestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_v1_extension_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssistantSuggestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssistantSuggestionResponse) ProtoMessage() {}

func (x *GetAssistantSuggestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extension_v1_extension_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssistantSuggestionResponse.ProtoReflect.Descriptor instead.
func (*GetAssistantSuggestionResponse) Descriptor() ([]byte, []int) {
	return file_extension_v1_extension_proto_rawDescGZIP(), []int{4}
}

func (x *GetAssistantSuggestionResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetAssistantSuggestionResponse) GetMessages() []*AssistantMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetAssistantSuggestionResponse) GetSuggestedQuestions() []string {
	if x != nil {
		return x.SuggestedQuestions
	}
	return nil
}

type ListAuditRecordForApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters *v1.AuditFilters `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListAuditRecordForApplicationRequest) Reset() {
	*x = ListAuditRecordForApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_v1_extension_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditRecordForApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditRecordForApplicationRequest) ProtoMessage() {}

func (x *ListAuditRecordForApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extension_v1_extension_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditRecordForApplicationRequest.ProtoReflect.Descriptor instead.
func (*ListAuditRecordForApplicationRequest) Descriptor() ([]byte, []int) {
	return file_extension_v1_extension_proto_rawDescGZIP(), []int{5}
}

func (x *ListAuditRecordForApplicationRequest) GetFilters() *v1.AuditFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListAuditRecordForApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*v1.AuditLog `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount uint32         `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListAuditRecordForApplicationResponse) Reset() {
	*x = ListAuditRecordForApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_v1_extension_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditRecordForApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditRecordForApplicationResponse) ProtoMessage() {}

func (x *ListAuditRecordForApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extension_v1_extension_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditRecordForApplicationResponse.ProtoReflect.Descriptor instead.
func (*ListAuditRecordForApplicationResponse) Descriptor() ([]byte, []int) {
	return file_extension_v1_extension_proto_rawDescGZIP(), []int{6}
}

func (x *ListAuditRecordForApplicationResponse) GetItems() []*v1.AuditLog {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListAuditRecordForApplicationResponse) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetSyncOperationsStatsForApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter       *v11.SyncOperationFilter    `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Interval     v11.GroupByInterval         `protobuf:"varint,2,opt,name=interval,proto3,enum=akuity.argocd.v1.GroupByInterval" json:"interval,omitempty"`
	GroupByField v11.SyncOperationGroupField `protobuf:"varint,3,opt,name=group_by_field,json=groupByField,proto3,enum=akuity.argocd.v1.SyncOperationGroupField" json:"group_by_field,omitempty"`
}

func (x *GetSyncOperationsStatsForApplicationRequest) Reset() {
	*x = GetSyncOperationsStatsForApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_v1_extension_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncOperationsStatsForApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncOperationsStatsForApplicationRequest) ProtoMessage() {}

func (x *GetSyncOperationsStatsForApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extension_v1_extension_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncOperationsStatsForApplicationRequest.ProtoReflect.Descriptor instead.
func (*GetSyncOperationsStatsForApplicationRequest) Descriptor() ([]byte, []int) {
	return file_extension_v1_extension_proto_rawDescGZIP(), []int{7}
}

func (x *GetSyncOperationsStatsForApplicationRequest) GetFilter() *v11.SyncOperationFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetSyncOperationsStatsForApplicationRequest) GetInterval() v11.GroupByInterval {
	if x != nil {
		return x.Interval
	}
	return v11.GroupByInterval(0)
}

func (x *GetSyncOperationsStatsForApplicationRequest) GetGroupByField() v11.SyncOperationGroupField {
	if x != nil {
		return x.GroupByField
	}
	return v11.SyncOperationGroupField(0)
}

type GetSyncOperationsStatsForApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncOperationStats []*v11.SyncOperationStat `protobuf:"bytes,1,rep,name=sync_operation_stats,json=syncOperationStats,proto3" json:"sync_operation_stats,omitempty"`
}

func (x *GetSyncOperationsStatsForApplicationResponse) Reset() {
	*x = GetSyncOperationsStatsForApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_v1_extension_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncOperationsStatsForApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncOperationsStatsForApplicationResponse) ProtoMessage() {}

func (x *GetSyncOperationsStatsForApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extension_v1_extension_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncOperationsStatsForApplicationResponse.ProtoReflect.Descriptor instead.
func (*GetSyncOperationsStatsForApplicationResponse) Descriptor() ([]byte, []int) {
	return file_extension_v1_extension_proto_rawDescGZIP(), []int{8}
}

func (x *GetSyncOperationsStatsForApplicationResponse) GetSyncOperationStats() []*v11.SyncOperationStat {
	if x != nil {
		return x.SyncOperationStats
	}
	return nil
}

type GetSyncOperationsEventsForApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *v11.SyncOperationFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit     *int64                   `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset    *int64                   `protobuf:"varint,3,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	Field     v11.SyncOperationField   `protobuf:"varint,4,opt,name=field,proto3,enum=akuity.argocd.v1.SyncOperationField" json:"field,omitempty"`
	FieldLike string                   `protobuf:"bytes,6,opt,name=field_like,json=fieldLike,proto3" json:"field_like,omitempty"`
}

func (x *GetSyncOperationsEventsForApplicationRequest) Reset() {
	*x = GetSyncOperationsEventsForApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_v1_extension_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncOperationsEventsForApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncOperationsEventsForApplicationRequest) ProtoMessage() {}

func (x *GetSyncOperationsEventsForApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extension_v1_extension_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncOperationsEventsForApplicationRequest.ProtoReflect.Descriptor instead.
func (*GetSyncOperationsEventsForApplicationRequest) Descriptor() ([]byte, []int) {
	return file_extension_v1_extension_proto_rawDescGZIP(), []int{9}
}

func (x *GetSyncOperationsEventsForApplicationRequest) GetFilter() *v11.SyncOperationFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetSyncOperationsEventsForApplicationRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetSyncOperationsEventsForApplicationRequest) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *GetSyncOperationsEventsForApplicationRequest) GetField() v11.SyncOperationField {
	if x != nil {
		return x.Field
	}
	return v11.SyncOperationField(0)
}

func (x *GetSyncOperationsEventsForApplicationRequest) GetFieldLike() string {
	if x != nil {
		return x.FieldLike
	}
	return ""
}

type GetSyncOperationsEventsForApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncOperationEvents []*v11.SyncOperationEvent `protobuf:"bytes,1,rep,name=sync_operation_events,json=syncOperationEvents,proto3" json:"sync_operation_events,omitempty"`
	Count               int64                     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	FieldResult         []string                  `protobuf:"bytes,3,rep,name=field_result,json=fieldResult,proto3" json:"field_result,omitempty"`
}

func (x *GetSyncOperationsEventsForApplicationResponse) Reset() {
	*x = GetSyncOperationsEventsForApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extension_v1_extension_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncOperationsEventsForApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncOperationsEventsForApplicationResponse) ProtoMessage() {}

func (x *GetSyncOperationsEventsForApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extension_v1_extension_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncOperationsEventsForApplicationResponse.ProtoReflect.Descriptor instead.
func (*GetSyncOperationsEventsForApplicationResponse) Descriptor() ([]byte, []int) {
	return file_extension_v1_extension_proto_rawDescGZIP(), []int{10}
}

func (x *GetSyncOperationsEventsForApplicationResponse) GetSyncOperationEvents() []*v11.SyncOperationEvent {
	if x != nil {
		return x.SyncOperationEvents
	}
	return nil
}

func (x *GetSyncOperationsEventsForApplicationResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetSyncOperationsEventsForApplicationResponse) GetFieldResult() []string {
	if x != nil {
		return x.FieldResult
	}
	return nil
}

var File_extension_v1_extension_proto protoreflect.FileDescriptor

var file_extension_v1_extension_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13,
	0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x1a, 0x16, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x72, 0x67, 0x6f, 0x63, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x0a, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xbc, 0x01, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x49,
	0x0a, 0x15, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x3b, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaa, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x41, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x12, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x66, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x80, 0x01,
	0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xfc, 0x01, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x3d, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x63,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x4f,
	0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22,
	0x85, 0x01, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x55, 0x0a, 0x14, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x12, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x95, 0x02, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x3a, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0xc2, 0x01, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x58, 0x0a, 0x15, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x13, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x32, 0x95, 0x07, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xcb, 0x01, 0x0a, 0x1d, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x6f, 0x72,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x6f, 0x72, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x65, 0x78, 0x74,
	0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x2f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2d,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0xeb, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x40, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x46, 0x6f, 0x72,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x41, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x46,
	0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x3a, 0x01, 0x2a,
	0x22, 0x33, 0x2f, 0x65, 0x78, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72,
	0x67, 0x6f, 0x63, 0x64, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x73, 0x79, 0x6e, 0x63, 0x2d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0xef, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e,
	0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x41, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x42, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x3a, 0x01,
	0x2a, 0x22, 0x34, 0x2f, 0x65, 0x78, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x72, 0x67, 0x6f, 0x63, 0x64, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x73, 0x79, 0x6e, 0x63, 0x2d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xc0, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x37, 0x3a, 0x01, 0x2a, 0x22, 0x32, 0x2f, 0x65, 0x78, 0x74, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2d,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x10, 0xfa, 0xd2, 0xe4, 0x93,
	0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x42, 0xe1, 0x01, 0x0a,
	0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x69, 0x6f, 0x2f,
	0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x45, 0x58, 0xaa, 0x02, 0x13, 0x41, 0x6b, 0x75,
	0x69, 0x74, 0x79, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x13, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x5c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x5c,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x41, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x3a, 0x3a, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_extension_v1_extension_proto_rawDescOnce sync.Once
	file_extension_v1_extension_proto_rawDescData = file_extension_v1_extension_proto_rawDesc
)

func file_extension_v1_extension_proto_rawDescGZIP() []byte {
	file_extension_v1_extension_proto_rawDescOnce.Do(func() {
		file_extension_v1_extension_proto_rawDescData = protoimpl.X.CompressGZIP(file_extension_v1_extension_proto_rawDescData)
	})
	return file_extension_v1_extension_proto_rawDescData
}

var file_extension_v1_extension_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_extension_v1_extension_proto_goTypes = []interface{}{
	(*ResourceID)(nil),                                    // 0: akuity.extension.v1.ResourceID
	(*AssistantMessage)(nil),                              // 1: akuity.extension.v1.AssistantMessage
	(*AssistantFunctionCall)(nil),                         // 2: akuity.extension.v1.AssistantFunctionCall
	(*GetAssistantSuggestionRequest)(nil),                 // 3: akuity.extension.v1.GetAssistantSuggestionRequest
	(*GetAssistantSuggestionResponse)(nil),                // 4: akuity.extension.v1.GetAssistantSuggestionResponse
	(*ListAuditRecordForApplicationRequest)(nil),          // 5: akuity.extension.v1.ListAuditRecordForApplicationRequest
	(*ListAuditRecordForApplicationResponse)(nil),         // 6: akuity.extension.v1.ListAuditRecordForApplicationResponse
	(*GetSyncOperationsStatsForApplicationRequest)(nil),   // 7: akuity.extension.v1.GetSyncOperationsStatsForApplicationRequest
	(*GetSyncOperationsStatsForApplicationResponse)(nil),  // 8: akuity.extension.v1.GetSyncOperationsStatsForApplicationResponse
	(*GetSyncOperationsEventsForApplicationRequest)(nil),  // 9: akuity.extension.v1.GetSyncOperationsEventsForApplicationRequest
	(*GetSyncOperationsEventsForApplicationResponse)(nil), // 10: akuity.extension.v1.GetSyncOperationsEventsForApplicationResponse
	(*v1.AuditFilters)(nil),                               // 11: akuity.organization.v1.AuditFilters
	(*v1.AuditLog)(nil),                                   // 12: akuity.organization.v1.AuditLog
	(*v11.SyncOperationFilter)(nil),                       // 13: akuity.argocd.v1.SyncOperationFilter
	(v11.GroupByInterval)(0),                              // 14: akuity.argocd.v1.GroupByInterval
	(v11.SyncOperationGroupField)(0),                      // 15: akuity.argocd.v1.SyncOperationGroupField
	(*v11.SyncOperationStat)(nil),                         // 16: akuity.argocd.v1.SyncOperationStat
	(v11.SyncOperationField)(0),                           // 17: akuity.argocd.v1.SyncOperationField
	(*v11.SyncOperationEvent)(nil),                        // 18: akuity.argocd.v1.SyncOperationEvent
}
var file_extension_v1_extension_proto_depIdxs = []int32{
	2,  // 0: akuity.extension.v1.AssistantMessage.function_call:type_name -> akuity.extension.v1.AssistantFunctionCall
	1,  // 1: akuity.extension.v1.GetAssistantSuggestionRequest.messages:type_name -> akuity.extension.v1.AssistantMessage
	0,  // 2: akuity.extension.v1.GetAssistantSuggestionRequest.resource:type_name -> akuity.extension.v1.ResourceID
	1,  // 3: akuity.extension.v1.GetAssistantSuggestionResponse.messages:type_name -> akuity.extension.v1.AssistantMessage
	11, // 4: akuity.extension.v1.ListAuditRecordForApplicationRequest.filters:type_name -> akuity.organization.v1.AuditFilters
	12, // 5: akuity.extension.v1.ListAuditRecordForApplicationResponse.items:type_name -> akuity.organization.v1.AuditLog
	13, // 6: akuity.extension.v1.GetSyncOperationsStatsForApplicationRequest.filter:type_name -> akuity.argocd.v1.SyncOperationFilter
	14, // 7: akuity.extension.v1.GetSyncOperationsStatsForApplicationRequest.interval:type_name -> akuity.argocd.v1.GroupByInterval
	15, // 8: akuity.extension.v1.GetSyncOperationsStatsForApplicationRequest.group_by_field:type_name -> akuity.argocd.v1.SyncOperationGroupField
	16, // 9: akuity.extension.v1.GetSyncOperationsStatsForApplicationResponse.sync_operation_stats:type_name -> akuity.argocd.v1.SyncOperationStat
	13, // 10: akuity.extension.v1.GetSyncOperationsEventsForApplicationRequest.filter:type_name -> akuity.argocd.v1.SyncOperationFilter
	17, // 11: akuity.extension.v1.GetSyncOperationsEventsForApplicationRequest.field:type_name -> akuity.argocd.v1.SyncOperationField
	18, // 12: akuity.extension.v1.GetSyncOperationsEventsForApplicationResponse.sync_operation_events:type_name -> akuity.argocd.v1.SyncOperationEvent
	5,  // 13: akuity.extension.v1.ExtensionService.ListAuditRecordForApplication:input_type -> akuity.extension.v1.ListAuditRecordForApplicationRequest
	7,  // 14: akuity.extension.v1.ExtensionService.GetSyncOperationsStatsForApplication:input_type -> akuity.extension.v1.GetSyncOperationsStatsForApplicationRequest
	9,  // 15: akuity.extension.v1.ExtensionService.GetSyncOperationsEventsForApplication:input_type -> akuity.extension.v1.GetSyncOperationsEventsForApplicationRequest
	3,  // 16: akuity.extension.v1.ExtensionService.GetAssistantSuggestion:input_type -> akuity.extension.v1.GetAssistantSuggestionRequest
	6,  // 17: akuity.extension.v1.ExtensionService.ListAuditRecordForApplication:output_type -> akuity.extension.v1.ListAuditRecordForApplicationResponse
	8,  // 18: akuity.extension.v1.ExtensionService.GetSyncOperationsStatsForApplication:output_type -> akuity.extension.v1.GetSyncOperationsStatsForApplicationResponse
	10, // 19: akuity.extension.v1.ExtensionService.GetSyncOperationsEventsForApplication:output_type -> akuity.extension.v1.GetSyncOperationsEventsForApplicationResponse
	4,  // 20: akuity.extension.v1.ExtensionService.GetAssistantSuggestion:output_type -> akuity.extension.v1.GetAssistantSuggestionResponse
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_extension_v1_extension_proto_init() }
func file_extension_v1_extension_proto_init() {
	if File_extension_v1_extension_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_extension_v1_extension_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_v1_extension_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_v1_extension_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssistantFunctionCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_v1_extension_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssistantSuggestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_v1_extension_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssistantSuggestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_v1_extension_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuditRecordForApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_v1_extension_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuditRecordForApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_v1_extension_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncOperationsStatsForApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_v1_extension_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncOperationsStatsForApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_v1_extension_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncOperationsEventsForApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extension_v1_extension_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncOperationsEventsForApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_extension_v1_extension_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_extension_v1_extension_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_extension_v1_extension_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_extension_v1_extension_proto_goTypes,
		DependencyIndexes: file_extension_v1_extension_proto_depIdxs,
		MessageInfos:      file_extension_v1_extension_proto_msgTypes,
	}.Build()
	File_extension_v1_extension_proto = out.File
	file_extension_v1_extension_proto_rawDesc = nil
	file_extension_v1_extension_proto_goTypes = nil
	file_extension_v1_extension_proto_depIdxs = nil
}
