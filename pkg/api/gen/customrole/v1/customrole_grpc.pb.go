// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: customrole/v1/customrole.proto

package customrolev1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CustomRoleService_CreateCustomRole_FullMethodName = "/akuity.customrole.v1.CustomRoleService/CreateCustomRole"
	CustomRoleService_UpdateCustomRole_FullMethodName = "/akuity.customrole.v1.CustomRoleService/UpdateCustomRole"
	CustomRoleService_GetCustomRole_FullMethodName    = "/akuity.customrole.v1.CustomRoleService/GetCustomRole"
	CustomRoleService_ListCustomRoles_FullMethodName  = "/akuity.customrole.v1.CustomRoleService/ListCustomRoles"
	CustomRoleService_DeleteCustomRole_FullMethodName = "/akuity.customrole.v1.CustomRoleService/DeleteCustomRole"
)

// CustomRoleServiceClient is the client API for CustomRoleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CustomRoleServiceClient interface {
	CreateCustomRole(ctx context.Context, in *CreateCustomRoleRequest, opts ...grpc.CallOption) (*CreateCustomRoleResponse, error)
	UpdateCustomRole(ctx context.Context, in *UpdateCustomRoleRequest, opts ...grpc.CallOption) (*UpdateCustomRoleResponse, error)
	GetCustomRole(ctx context.Context, in *GetCustomRoleRequest, opts ...grpc.CallOption) (*GetCustomRoleResponse, error)
	ListCustomRoles(ctx context.Context, in *ListCustomRolesRequest, opts ...grpc.CallOption) (*ListCustomRolesResponse, error)
	DeleteCustomRole(ctx context.Context, in *DeleteCustomRoleRequest, opts ...grpc.CallOption) (*DeleteCustomRoleResponse, error)
}

type customRoleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCustomRoleServiceClient(cc grpc.ClientConnInterface) CustomRoleServiceClient {
	return &customRoleServiceClient{cc}
}

func (c *customRoleServiceClient) CreateCustomRole(ctx context.Context, in *CreateCustomRoleRequest, opts ...grpc.CallOption) (*CreateCustomRoleResponse, error) {
	out := new(CreateCustomRoleResponse)
	err := c.cc.Invoke(ctx, CustomRoleService_CreateCustomRole_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customRoleServiceClient) UpdateCustomRole(ctx context.Context, in *UpdateCustomRoleRequest, opts ...grpc.CallOption) (*UpdateCustomRoleResponse, error) {
	out := new(UpdateCustomRoleResponse)
	err := c.cc.Invoke(ctx, CustomRoleService_UpdateCustomRole_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customRoleServiceClient) GetCustomRole(ctx context.Context, in *GetCustomRoleRequest, opts ...grpc.CallOption) (*GetCustomRoleResponse, error) {
	out := new(GetCustomRoleResponse)
	err := c.cc.Invoke(ctx, CustomRoleService_GetCustomRole_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customRoleServiceClient) ListCustomRoles(ctx context.Context, in *ListCustomRolesRequest, opts ...grpc.CallOption) (*ListCustomRolesResponse, error) {
	out := new(ListCustomRolesResponse)
	err := c.cc.Invoke(ctx, CustomRoleService_ListCustomRoles_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customRoleServiceClient) DeleteCustomRole(ctx context.Context, in *DeleteCustomRoleRequest, opts ...grpc.CallOption) (*DeleteCustomRoleResponse, error) {
	out := new(DeleteCustomRoleResponse)
	err := c.cc.Invoke(ctx, CustomRoleService_DeleteCustomRole_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomRoleServiceServer is the server API for CustomRoleService service.
// All implementations must embed UnimplementedCustomRoleServiceServer
// for forward compatibility
type CustomRoleServiceServer interface {
	CreateCustomRole(context.Context, *CreateCustomRoleRequest) (*CreateCustomRoleResponse, error)
	UpdateCustomRole(context.Context, *UpdateCustomRoleRequest) (*UpdateCustomRoleResponse, error)
	GetCustomRole(context.Context, *GetCustomRoleRequest) (*GetCustomRoleResponse, error)
	ListCustomRoles(context.Context, *ListCustomRolesRequest) (*ListCustomRolesResponse, error)
	DeleteCustomRole(context.Context, *DeleteCustomRoleRequest) (*DeleteCustomRoleResponse, error)
	mustEmbedUnimplementedCustomRoleServiceServer()
}

// UnimplementedCustomRoleServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCustomRoleServiceServer struct {
}

func (UnimplementedCustomRoleServiceServer) CreateCustomRole(context.Context, *CreateCustomRoleRequest) (*CreateCustomRoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomRole not implemented")
}
func (UnimplementedCustomRoleServiceServer) UpdateCustomRole(context.Context, *UpdateCustomRoleRequest) (*UpdateCustomRoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomRole not implemented")
}
func (UnimplementedCustomRoleServiceServer) GetCustomRole(context.Context, *GetCustomRoleRequest) (*GetCustomRoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomRole not implemented")
}
func (UnimplementedCustomRoleServiceServer) ListCustomRoles(context.Context, *ListCustomRolesRequest) (*ListCustomRolesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCustomRoles not implemented")
}
func (UnimplementedCustomRoleServiceServer) DeleteCustomRole(context.Context, *DeleteCustomRoleRequest) (*DeleteCustomRoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCustomRole not implemented")
}
func (UnimplementedCustomRoleServiceServer) mustEmbedUnimplementedCustomRoleServiceServer() {}

// UnsafeCustomRoleServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CustomRoleServiceServer will
// result in compilation errors.
type UnsafeCustomRoleServiceServer interface {
	mustEmbedUnimplementedCustomRoleServiceServer()
}

func RegisterCustomRoleServiceServer(s grpc.ServiceRegistrar, srv CustomRoleServiceServer) {
	s.RegisterService(&CustomRoleService_ServiceDesc, srv)
}

func _CustomRoleService_CreateCustomRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCustomRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomRoleServiceServer).CreateCustomRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomRoleService_CreateCustomRole_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomRoleServiceServer).CreateCustomRole(ctx, req.(*CreateCustomRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomRoleService_UpdateCustomRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCustomRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomRoleServiceServer).UpdateCustomRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomRoleService_UpdateCustomRole_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomRoleServiceServer).UpdateCustomRole(ctx, req.(*UpdateCustomRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomRoleService_GetCustomRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomRoleServiceServer).GetCustomRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomRoleService_GetCustomRole_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomRoleServiceServer).GetCustomRole(ctx, req.(*GetCustomRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomRoleService_ListCustomRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCustomRolesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomRoleServiceServer).ListCustomRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomRoleService_ListCustomRoles_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomRoleServiceServer).ListCustomRoles(ctx, req.(*ListCustomRolesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomRoleService_DeleteCustomRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCustomRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomRoleServiceServer).DeleteCustomRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomRoleService_DeleteCustomRole_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomRoleServiceServer).DeleteCustomRole(ctx, req.(*DeleteCustomRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CustomRoleService_ServiceDesc is the grpc.ServiceDesc for CustomRoleService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CustomRoleService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "akuity.customrole.v1.CustomRoleService",
	HandlerType: (*CustomRoleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCustomRole",
			Handler:    _CustomRoleService_CreateCustomRole_Handler,
		},
		{
			MethodName: "UpdateCustomRole",
			Handler:    _CustomRoleService_UpdateCustomRole_Handler,
		},
		{
			MethodName: "GetCustomRole",
			Handler:    _CustomRoleService_GetCustomRole_Handler,
		},
		{
			MethodName: "ListCustomRoles",
			Handler:    _CustomRoleService_ListCustomRoles_Handler,
		},
		{
			MethodName: "DeleteCustomRole",
			Handler:    _CustomRoleService_DeleteCustomRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customrole/v1/customrole.proto",
}
