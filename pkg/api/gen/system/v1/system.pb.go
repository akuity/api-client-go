// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: system/v1/system.proto

package systemv1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{0}
}

type GetVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{1}
}

func (x *GetVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetAgentVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAgentVersionRequest) Reset() {
	*x = GetAgentVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentVersionRequest) ProtoMessage() {}

func (x *GetAgentVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentVersionRequest.ProtoReflect.Descriptor instead.
func (*GetAgentVersionRequest) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{2}
}

type GetAgentVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetAgentVersionResponse) Reset() {
	*x = GetAgentVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentVersionResponse) ProtoMessage() {}

func (x *GetAgentVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentVersionResponse.ProtoReflect.Descriptor instead.
func (*GetAgentVersionResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{3}
}

func (x *GetAgentVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSettingsRequest) Reset() {
	*x = GetSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsRequest) ProtoMessage() {}

func (x *GetSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetSettingsRequest) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{4}
}

type GetSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Env                     string      `protobuf:"bytes,1,opt,name=env,proto3" json:"env,omitempty"`
	DomainSuffix            string      `protobuf:"bytes,2,opt,name=domain_suffix,json=domainSuffix,proto3" json:"domain_suffix,omitempty"`
	SentryDsn               string      `protobuf:"bytes,3,opt,name=sentry_dsn,json=sentryDsn,proto3" json:"sentry_dsn,omitempty"`
	GoogleTagId             string      `protobuf:"bytes,4,opt,name=google_tag_id,json=googleTagId,proto3" json:"google_tag_id,omitempty"`
	NameConfig              *NameConfig `protobuf:"bytes,5,opt,name=name_config,json=nameConfig,proto3" json:"name_config,omitempty"`
	SelfHosted              bool        `protobuf:"varint,6,opt,name=self_hosted,json=selfHosted,proto3" json:"self_hosted,omitempty"`
	BillingEnabled          bool        `protobuf:"varint,7,opt,name=billing_enabled,json=billingEnabled,proto3" json:"billing_enabled,omitempty"`
	StripeCustomerPortalUrl string      `protobuf:"bytes,8,opt,name=stripe_customer_portal_url,json=stripeCustomerPortalUrl,proto3" json:"stripe_customer_portal_url,omitempty"`
	// list of features that can be enabled/disabled at a global level
	Capabilities                    []string `protobuf:"bytes,9,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	MaxInvitationEmailPerBatchCount int64    `protobuf:"varint,10,opt,name=max_invitation_email_per_batch_count,json=maxInvitationEmailPerBatchCount,proto3" json:"max_invitation_email_per_batch_count,omitempty"`
	InstanceSubDomainsEnabled       bool     `protobuf:"varint,11,opt,name=instance_sub_domains_enabled,json=instanceSubDomainsEnabled,proto3" json:"instance_sub_domains_enabled,omitempty"`
}

func (x *GetSettingsResponse) Reset() {
	*x = GetSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsResponse) ProtoMessage() {}

func (x *GetSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetSettingsResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{5}
}

func (x *GetSettingsResponse) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *GetSettingsResponse) GetDomainSuffix() string {
	if x != nil {
		return x.DomainSuffix
	}
	return ""
}

func (x *GetSettingsResponse) GetSentryDsn() string {
	if x != nil {
		return x.SentryDsn
	}
	return ""
}

func (x *GetSettingsResponse) GetGoogleTagId() string {
	if x != nil {
		return x.GoogleTagId
	}
	return ""
}

func (x *GetSettingsResponse) GetNameConfig() *NameConfig {
	if x != nil {
		return x.NameConfig
	}
	return nil
}

func (x *GetSettingsResponse) GetSelfHosted() bool {
	if x != nil {
		return x.SelfHosted
	}
	return false
}

func (x *GetSettingsResponse) GetBillingEnabled() bool {
	if x != nil {
		return x.BillingEnabled
	}
	return false
}

func (x *GetSettingsResponse) GetStripeCustomerPortalUrl() string {
	if x != nil {
		return x.StripeCustomerPortalUrl
	}
	return ""
}

func (x *GetSettingsResponse) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *GetSettingsResponse) GetMaxInvitationEmailPerBatchCount() int64 {
	if x != nil {
		return x.MaxInvitationEmailPerBatchCount
	}
	return 0
}

func (x *GetSettingsResponse) GetInstanceSubDomainsEnabled() bool {
	if x != nil {
		return x.InstanceSubDomainsEnabled
	}
	return false
}

type NameConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinOrganizationNameLength int64 `protobuf:"varint,1,opt,name=min_organization_name_length,json=minOrganizationNameLength,proto3" json:"min_organization_name_length,omitempty"`
	MinInstanceNameLength     int64 `protobuf:"varint,2,opt,name=min_instance_name_length,json=minInstanceNameLength,proto3" json:"min_instance_name_length,omitempty"`
	MinClusterNameLength      int64 `protobuf:"varint,3,opt,name=min_cluster_name_length,json=minClusterNameLength,proto3" json:"min_cluster_name_length,omitempty"`
	MinSubdomainNameLength    int64 `protobuf:"varint,4,opt,name=min_subdomain_name_length,json=minSubdomainNameLength,proto3" json:"min_subdomain_name_length,omitempty"`
}

func (x *NameConfig) Reset() {
	*x = NameConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameConfig) ProtoMessage() {}

func (x *NameConfig) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameConfig.ProtoReflect.Descriptor instead.
func (*NameConfig) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{6}
}

func (x *NameConfig) GetMinOrganizationNameLength() int64 {
	if x != nil {
		return x.MinOrganizationNameLength
	}
	return 0
}

func (x *NameConfig) GetMinInstanceNameLength() int64 {
	if x != nil {
		return x.MinInstanceNameLength
	}
	return 0
}

func (x *NameConfig) GetMinClusterNameLength() int64 {
	if x != nil {
		return x.MinClusterNameLength
	}
	return 0
}

func (x *NameConfig) GetMinSubdomainNameLength() int64 {
	if x != nil {
		return x.MinSubdomainNameLength
	}
	return 0
}

type GetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{7}
}

func (x *GetStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SecurityAdvisory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CveId string `protobuf:"bytes,1,opt,name=cve_id,json=cveId,proto3" json:"cve_id,omitempty"`
}

func (x *SecurityAdvisory) Reset() {
	*x = SecurityAdvisory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityAdvisory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityAdvisory) ProtoMessage() {}

func (x *SecurityAdvisory) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityAdvisory.ProtoReflect.Descriptor instead.
func (*SecurityAdvisory) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{8}
}

func (x *SecurityAdvisory) GetCveId() string {
	if x != nil {
		return x.CveId
	}
	return ""
}

type AKVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Features []string `protobuf:"bytes,2,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *AKVersion) Reset() {
	*x = AKVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AKVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AKVersion) ProtoMessage() {}

func (x *AKVersion) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AKVersion.ProtoReflect.Descriptor instead.
func (*AKVersion) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{9}
}

func (x *AKVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AKVersion) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

type ComponentVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version            string              `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Label              string              `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	SecurityAdvisories []*SecurityAdvisory `protobuf:"bytes,3,rep,name=security_advisories,json=securityAdvisories,proto3" json:"security_advisories,omitempty"`
	AkVersions         []*AKVersion        `protobuf:"bytes,4,rep,name=ak_versions,json=akVersions,proto3" json:"ak_versions,omitempty"`
}

func (x *ComponentVersion) Reset() {
	*x = ComponentVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentVersion) ProtoMessage() {}

func (x *ComponentVersion) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentVersion.ProtoReflect.Descriptor instead.
func (*ComponentVersion) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{10}
}

func (x *ComponentVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ComponentVersion) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ComponentVersion) GetSecurityAdvisories() []*SecurityAdvisory {
	if x != nil {
		return x.SecurityAdvisories
	}
	return nil
}

func (x *ComponentVersion) GetAkVersions() []*AKVersion {
	if x != nil {
		return x.AkVersions
	}
	return nil
}

type GetArgoCDAgentSizeSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Small  *GetArgoCDAgentSizeSpecResponse_Spec `protobuf:"bytes,1,opt,name=small,proto3" json:"small,omitempty"`
	Medium *GetArgoCDAgentSizeSpecResponse_Spec `protobuf:"bytes,2,opt,name=medium,proto3" json:"medium,omitempty"`
	Large  *GetArgoCDAgentSizeSpecResponse_Spec `protobuf:"bytes,3,opt,name=large,proto3" json:"large,omitempty"`
}

func (x *GetArgoCDAgentSizeSpecResponse) Reset() {
	*x = GetArgoCDAgentSizeSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArgoCDAgentSizeSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArgoCDAgentSizeSpecResponse) ProtoMessage() {}

func (x *GetArgoCDAgentSizeSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArgoCDAgentSizeSpecResponse.ProtoReflect.Descriptor instead.
func (*GetArgoCDAgentSizeSpecResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{11}
}

func (x *GetArgoCDAgentSizeSpecResponse) GetSmall() *GetArgoCDAgentSizeSpecResponse_Spec {
	if x != nil {
		return x.Small
	}
	return nil
}

func (x *GetArgoCDAgentSizeSpecResponse) GetMedium() *GetArgoCDAgentSizeSpecResponse_Spec {
	if x != nil {
		return x.Medium
	}
	return nil
}

func (x *GetArgoCDAgentSizeSpecResponse) GetLarge() *GetArgoCDAgentSizeSpecResponse_Spec {
	if x != nil {
		return x.Large
	}
	return nil
}

type GetKargoAgentSizeSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Small  *GetKargoAgentSizeSpecResponse_Spec `protobuf:"bytes,1,opt,name=small,proto3" json:"small,omitempty"`
	Medium *GetKargoAgentSizeSpecResponse_Spec `protobuf:"bytes,2,opt,name=medium,proto3" json:"medium,omitempty"`
	Large  *GetKargoAgentSizeSpecResponse_Spec `protobuf:"bytes,3,opt,name=large,proto3" json:"large,omitempty"`
}

func (x *GetKargoAgentSizeSpecResponse) Reset() {
	*x = GetKargoAgentSizeSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKargoAgentSizeSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKargoAgentSizeSpecResponse) ProtoMessage() {}

func (x *GetKargoAgentSizeSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKargoAgentSizeSpecResponse.ProtoReflect.Descriptor instead.
func (*GetKargoAgentSizeSpecResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{12}
}

func (x *GetKargoAgentSizeSpecResponse) GetSmall() *GetKargoAgentSizeSpecResponse_Spec {
	if x != nil {
		return x.Small
	}
	return nil
}

func (x *GetKargoAgentSizeSpecResponse) GetMedium() *GetKargoAgentSizeSpecResponse_Spec {
	if x != nil {
		return x.Medium
	}
	return nil
}

func (x *GetKargoAgentSizeSpecResponse) GetLarge() *GetKargoAgentSizeSpecResponse_Spec {
	if x != nil {
		return x.Large
	}
	return nil
}

type ListArgoCDVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArgocdVersions []*ComponentVersion `protobuf:"bytes,1,rep,name=argocd_versions,json=argocdVersions,proto3" json:"argocd_versions,omitempty"`
}

func (x *ListArgoCDVersionsResponse) Reset() {
	*x = ListArgoCDVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArgoCDVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArgoCDVersionsResponse) ProtoMessage() {}

func (x *ListArgoCDVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArgoCDVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListArgoCDVersionsResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{13}
}

func (x *ListArgoCDVersionsResponse) GetArgocdVersions() []*ComponentVersion {
	if x != nil {
		return x.ArgocdVersions
	}
	return nil
}

type ListKargoVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KargoVersions []*ComponentVersion `protobuf:"bytes,1,rep,name=kargo_versions,json=kargoVersions,proto3" json:"kargo_versions,omitempty"`
}

func (x *ListKargoVersionsResponse) Reset() {
	*x = ListKargoVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKargoVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKargoVersionsResponse) ProtoMessage() {}

func (x *ListKargoVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKargoVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListKargoVersionsResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{14}
}

func (x *ListKargoVersionsResponse) GetKargoVersions() []*ComponentVersion {
	if x != nil {
		return x.KargoVersions
	}
	return nil
}

type ExtensionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Home        string                            `protobuf:"bytes,4,opt,name=home,proto3" json:"home,omitempty"`
	Icon        string                            `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Versions    []*ExtensionInfo_ExtensionVersion `protobuf:"bytes,6,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ExtensionInfo) Reset() {
	*x = ExtensionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionInfo) ProtoMessage() {}

func (x *ExtensionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionInfo.ProtoReflect.Descriptor instead.
func (*ExtensionInfo) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{15}
}

func (x *ExtensionInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExtensionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExtensionInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExtensionInfo) GetHome() string {
	if x != nil {
		return x.Home
	}
	return ""
}

func (x *ExtensionInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ExtensionInfo) GetVersions() []*ExtensionInfo_ExtensionVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

type ListArgoCDExtensionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extensions []*ExtensionInfo `protobuf:"bytes,1,rep,name=extensions,proto3" json:"extensions,omitempty"`
}

func (x *ListArgoCDExtensionsResponse) Reset() {
	*x = ListArgoCDExtensionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArgoCDExtensionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArgoCDExtensionsResponse) ProtoMessage() {}

func (x *ListArgoCDExtensionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArgoCDExtensionsResponse.ProtoReflect.Descriptor instead.
func (*ListArgoCDExtensionsResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{16}
}

func (x *ListArgoCDExtensionsResponse) GetExtensions() []*ExtensionInfo {
	if x != nil {
		return x.Extensions
	}
	return nil
}

type ListAgentVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentVersions []string `protobuf:"bytes,1,rep,name=agent_versions,json=agentVersions,proto3" json:"agent_versions,omitempty"`
}

func (x *ListAgentVersionsResponse) Reset() {
	*x = ListAgentVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentVersionsResponse) ProtoMessage() {}

func (x *ListAgentVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListAgentVersionsResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{17}
}

func (x *ListAgentVersionsResponse) GetAgentVersions() []string {
	if x != nil {
		return x.AgentVersions
	}
	return nil
}

type Banner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             *string              `protobuf:"bytes,1,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Message           string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Closable          *string              `protobuf:"bytes,3,opt,name=closable,proto3,oneof" json:"closable,omitempty"`
	Type              *string              `protobuf:"bytes,4,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Links             []*Banner_BannerLink `protobuf:"bytes,5,rep,name=links,proto3" json:"links,omitempty"`
	PaidCustomersOnly *bool                `protobuf:"varint,6,opt,name=paid_customers_only,json=paidCustomersOnly,proto3,oneof" json:"paid_customers_only,omitempty"`
}

func (x *Banner) Reset() {
	*x = Banner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Banner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Banner) ProtoMessage() {}

func (x *Banner) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Banner.ProtoReflect.Descriptor instead.
func (*Banner) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{18}
}

func (x *Banner) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Banner) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Banner) GetClosable() string {
	if x != nil && x.Closable != nil {
		return *x.Closable
	}
	return ""
}

func (x *Banner) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *Banner) GetLinks() []*Banner_BannerLink {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *Banner) GetPaidCustomersOnly() bool {
	if x != nil && x.PaidCustomersOnly != nil {
		return *x.PaidCustomersOnly
	}
	return false
}

type GetAnnouncementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Banner *Banner `protobuf:"bytes,1,opt,name=banner,proto3" json:"banner,omitempty"`
}

func (x *GetAnnouncementResponse) Reset() {
	*x = GetAnnouncementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnnouncementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnnouncementResponse) ProtoMessage() {}

func (x *GetAnnouncementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnnouncementResponse.ProtoReflect.Descriptor instead.
func (*GetAnnouncementResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{19}
}

func (x *GetAnnouncementResponse) GetBanner() *Banner {
	if x != nil {
		return x.Banner
	}
	return nil
}

type ListValidWebhookEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListValidWebhookEventsRequest) Reset() {
	*x = ListValidWebhookEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListValidWebhookEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListValidWebhookEventsRequest) ProtoMessage() {}

func (x *ListValidWebhookEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListValidWebhookEventsRequest.ProtoReflect.Descriptor instead.
func (*ListValidWebhookEventsRequest) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{20}
}

type ListValidWebhookEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []string `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *ListValidWebhookEventsResponse) Reset() {
	*x = ListValidWebhookEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListValidWebhookEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListValidWebhookEventsResponse) ProtoMessage() {}

func (x *ListValidWebhookEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListValidWebhookEventsResponse.ProtoReflect.Descriptor instead.
func (*ListValidWebhookEventsResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{21}
}

func (x *ListValidWebhookEventsResponse) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

type ListArgoCDImageUpadterVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []string `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ListArgoCDImageUpadterVersionsResponse) Reset() {
	*x = ListArgoCDImageUpadterVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListArgoCDImageUpadterVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArgoCDImageUpadterVersionsResponse) ProtoMessage() {}

func (x *ListArgoCDImageUpadterVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArgoCDImageUpadterVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListArgoCDImageUpadterVersionsResponse) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{22}
}

func (x *ListArgoCDImageUpadterVersionsResponse) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

type GetArgoCDAgentSizeSpecResponse_Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerCpu      string `protobuf:"bytes,1,opt,name=controller_cpu,json=controllerCpu,proto3" json:"controller_cpu,omitempty"`
	ControllerMemory   string `protobuf:"bytes,2,opt,name=controller_memory,json=controllerMemory,proto3" json:"controller_memory,omitempty"`
	RepoServerReplicas int32  `protobuf:"varint,3,opt,name=repo_server_replicas,json=repoServerReplicas,proto3" json:"repo_server_replicas,omitempty"`
	RepoServerCpu      string `protobuf:"bytes,4,opt,name=repo_server_cpu,json=repoServerCpu,proto3" json:"repo_server_cpu,omitempty"`
	RepoServerMemory   string `protobuf:"bytes,5,opt,name=repo_server_memory,json=repoServerMemory,proto3" json:"repo_server_memory,omitempty"`
}

func (x *GetArgoCDAgentSizeSpecResponse_Spec) Reset() {
	*x = GetArgoCDAgentSizeSpecResponse_Spec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArgoCDAgentSizeSpecResponse_Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArgoCDAgentSizeSpecResponse_Spec) ProtoMessage() {}

func (x *GetArgoCDAgentSizeSpecResponse_Spec) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArgoCDAgentSizeSpecResponse_Spec.ProtoReflect.Descriptor instead.
func (*GetArgoCDAgentSizeSpecResponse_Spec) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetArgoCDAgentSizeSpecResponse_Spec) GetControllerCpu() string {
	if x != nil {
		return x.ControllerCpu
	}
	return ""
}

func (x *GetArgoCDAgentSizeSpecResponse_Spec) GetControllerMemory() string {
	if x != nil {
		return x.ControllerMemory
	}
	return ""
}

func (x *GetArgoCDAgentSizeSpecResponse_Spec) GetRepoServerReplicas() int32 {
	if x != nil {
		return x.RepoServerReplicas
	}
	return 0
}

func (x *GetArgoCDAgentSizeSpecResponse_Spec) GetRepoServerCpu() string {
	if x != nil {
		return x.RepoServerCpu
	}
	return ""
}

func (x *GetArgoCDAgentSizeSpecResponse_Spec) GetRepoServerMemory() string {
	if x != nil {
		return x.RepoServerMemory
	}
	return ""
}

type GetKargoAgentSizeSpecResponse_Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerCpu    string `protobuf:"bytes,1,opt,name=controller_cpu,json=controllerCpu,proto3" json:"controller_cpu,omitempty"`
	ControllerMemory string `protobuf:"bytes,2,opt,name=controller_memory,json=controllerMemory,proto3" json:"controller_memory,omitempty"`
}

func (x *GetKargoAgentSizeSpecResponse_Spec) Reset() {
	*x = GetKargoAgentSizeSpecResponse_Spec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKargoAgentSizeSpecResponse_Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKargoAgentSizeSpecResponse_Spec) ProtoMessage() {}

func (x *GetKargoAgentSizeSpecResponse_Spec) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKargoAgentSizeSpecResponse_Spec.ProtoReflect.Descriptor instead.
func (*GetKargoAgentSizeSpecResponse_Spec) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GetKargoAgentSizeSpecResponse_Spec) GetControllerCpu() string {
	if x != nil {
		return x.ControllerCpu
	}
	return ""
}

func (x *GetKargoAgentSizeSpecResponse_Spec) GetControllerMemory() string {
	if x != nil {
		return x.ControllerMemory
	}
	return ""
}

type ExtensionInfo_ExtensionVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Url       string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Sha256Sum string `protobuf:"bytes,3,opt,name=sha256_sum,json=sha256Sum,proto3" json:"sha256_sum,omitempty"`
}

func (x *ExtensionInfo_ExtensionVersion) Reset() {
	*x = ExtensionInfo_ExtensionVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensionInfo_ExtensionVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionInfo_ExtensionVersion) ProtoMessage() {}

func (x *ExtensionInfo_ExtensionVersion) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionInfo_ExtensionVersion.ProtoReflect.Descriptor instead.
func (*ExtensionInfo_ExtensionVersion) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ExtensionInfo_ExtensionVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ExtensionInfo_ExtensionVersion) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ExtensionInfo_ExtensionVersion) GetSha256Sum() string {
	if x != nil {
		return x.Sha256Sum
	}
	return ""
}

type Banner_BannerLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Banner_BannerLink) Reset() {
	*x = Banner_BannerLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_system_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Banner_BannerLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Banner_BannerLink) ProtoMessage() {}

func (x *Banner_BannerLink) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_system_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Banner_BannerLink.ProtoReflect.Descriptor instead.
func (*Banner_BannerLink) Descriptor() ([]byte, []int) {
	return file_system_v1_system_proto_rawDescGZIP(), []int{18, 0}
}

func (x *Banner_BannerLink) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Banner_BannerLink) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_system_v1_system_proto protoreflect.FileDescriptor

var file_system_v1_system_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x89, 0x04, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x64, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x73, 0x6e, 0x12, 0x22, 0x0a,
	0x0d, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x49,
	0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x66, 0x48, 0x6f, 0x73, 0x74, 0x65,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x74,
	0x72, 0x69, 0x70, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x24, 0x6d,
	0x61, 0x78, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1f, 0x6d, 0x61, 0x78, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x65, 0x72,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x19, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x62, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xf8, 0x01, 0x0a, 0x0a,
	0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3f, 0x0a, 0x1c, 0x6d, 0x69,
	0x6e, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x19, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x18, 0x6d,
	0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6d,
	0x69, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x17, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6d, 0x69, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x19, 0x6d,
	0x69, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16,
	0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x29, 0x0a, 0x10, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41,
	0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x76, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x76, 0x65, 0x49, 0x64, 0x22, 0x41,
	0x0a, 0x09, 0x41, 0x4b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x22, 0xd5, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x53, 0x0a, 0x13, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x61, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41,
	0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x79, 0x52, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x61,
	0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x4b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61,
	0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xee, 0x03, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x67, 0x6f, 0x43, 0x44, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x67, 0x6f, 0x43, 0x44, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x05, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x4d, 0x0a, 0x06, 0x6d, 0x65, 0x64,
	0x69, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6b, 0x75, 0x69,
	0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x67, 0x6f, 0x43, 0x44, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x4b, 0x0a, 0x05, 0x6c, 0x61, 0x72, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x67, 0x6f, 0x43, 0x44, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05,
	0x6c, 0x61, 0x72, 0x67, 0x65, 0x1a, 0xe2, 0x01, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x63, 0x70, 0x75,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x43, 0x70, 0x75, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x63, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x70, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x70, 0x75, 0x12, 0x2c, 0x0a, 0x12,
	0x72, 0x65, 0x70, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0xe1, 0x02, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x05, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x4c, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74,
	0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b,
	0x61, 0x72, 0x67, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x06,
	0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x4a, 0x0a, 0x05, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x72, 0x67,
	0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x6c, 0x61, 0x72,
	0x67, 0x65, 0x1a, 0x5a, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x70,
	0x75, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x69,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x67, 0x6f, 0x43, 0x44, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0f,
	0x61, 0x72, 0x67, 0x6f, 0x63, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x72, 0x67, 0x6f, 0x63,
	0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x66, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xaa, 0x02, 0x0a, 0x0d, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x4c, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x5d, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x53, 0x75, 0x6d, 0x22, 0x5f,
	0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x67, 0x6f, 0x43, 0x44, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x42, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xd3, 0x02, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a,
	0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61,
	0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x33, 0x0a, 0x13, 0x70, 0x61, 0x69, 0x64,
	0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x11, 0x70, 0x61, 0x69, 0x64, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x1a, 0x32, 0x0a,
	0x0a, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x63, 0x6c, 0x6f, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x06,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x1f, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x44, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x67, 0x6f, 0x43, 0x44, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x61, 0x64, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xf2, 0x0f, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61,
	0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x8c, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x7b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x24, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x7f,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x88, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x92, 0x41, 0x1e, 0x12,
	0x1c, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x20,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0xa2, 0x01, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x72, 0x67, 0x6f, 0x43, 0x44, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x61, 0x6b, 0x75, 0x69,
	0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x72, 0x67, 0x6f, 0x43, 0x44, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x92, 0x41, 0x21, 0x12, 0x1f, 0x4c, 0x69,
	0x73, 0x74, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x41, 0x72, 0x67,
	0x6f, 0x20, 0x43, 0x44, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x63, 0x64, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0xa1, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e,
	0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x92, 0x41, 0x1f, 0x12,
	0x1d, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20,
	0x4b, 0x61, 0x72, 0x67, 0x6f, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0xaa, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x67, 0x6f,
	0x43, 0x44, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2e, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x67, 0x6f,
	0x43, 0x44, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x92, 0x41, 0x23, 0x12, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x20,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x41, 0x72, 0x67, 0x6f, 0x20, 0x43,
	0x44, 0x20, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2f, 0x63, 0x64, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x72, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e, 0x61, 0x6b,
	0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0xa8, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x2f, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0xb1, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x72, 0x67, 0x6f, 0x43, 0x44, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x30, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x67, 0x6f, 0x43, 0x44, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x92, 0x41, 0x21, 0x12, 0x1f, 0x47, 0x65, 0x74, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x41, 0x72, 0x67, 0x6f, 0x20, 0x43, 0x44, 0x20, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x63, 0x64, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x69, 0x7a, 0x65, 0x2d, 0x73,
	0x70, 0x65, 0x63, 0x12, 0xb0, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x72, 0x67, 0x6f,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2f, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x72, 0x67,
	0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x92, 0x41, 0x1f, 0x12, 0x1d, 0x47, 0x65, 0x74,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x4b, 0x61, 0x72, 0x67, 0x6f, 0x20, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26,
	0x12, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x6b, 0x61, 0x72, 0x67, 0x6f, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x69, 0x7a,
	0x65, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x12, 0xd3, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x72, 0x67, 0x6f, 0x43, 0x44, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x61, 0x64, 0x74, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x38, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x67, 0x6f, 0x43, 0x44, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x61, 0x64, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x92, 0x41, 0x2f,
	0x12, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x20, 0x41, 0x72, 0x67, 0x6f, 0x20, 0x43, 0x44, 0x20, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x20, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2d, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x72, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0xc9, 0x01, 0x0a,
	0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x69, 0x6f, 0x2f, 0x61, 0x6b, 0x75, 0x69, 0x74, 0x79,
	0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x3b,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x53, 0x58, 0xaa, 0x02,
	0x10, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x10, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x5c, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x5c, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x41, 0x6b, 0x75, 0x69, 0x74, 0x79, 0x3a, 0x3a, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_system_v1_system_proto_rawDescOnce sync.Once
	file_system_v1_system_proto_rawDescData = file_system_v1_system_proto_rawDesc
)

func file_system_v1_system_proto_rawDescGZIP() []byte {
	file_system_v1_system_proto_rawDescOnce.Do(func() {
		file_system_v1_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_system_v1_system_proto_rawDescData)
	})
	return file_system_v1_system_proto_rawDescData
}

var file_system_v1_system_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_system_v1_system_proto_goTypes = []interface{}{
	(*GetVersionRequest)(nil),                      // 0: akuity.system.v1.GetVersionRequest
	(*GetVersionResponse)(nil),                     // 1: akuity.system.v1.GetVersionResponse
	(*GetAgentVersionRequest)(nil),                 // 2: akuity.system.v1.GetAgentVersionRequest
	(*GetAgentVersionResponse)(nil),                // 3: akuity.system.v1.GetAgentVersionResponse
	(*GetSettingsRequest)(nil),                     // 4: akuity.system.v1.GetSettingsRequest
	(*GetSettingsResponse)(nil),                    // 5: akuity.system.v1.GetSettingsResponse
	(*NameConfig)(nil),                             // 6: akuity.system.v1.NameConfig
	(*GetStatusResponse)(nil),                      // 7: akuity.system.v1.GetStatusResponse
	(*SecurityAdvisory)(nil),                       // 8: akuity.system.v1.SecurityAdvisory
	(*AKVersion)(nil),                              // 9: akuity.system.v1.AKVersion
	(*ComponentVersion)(nil),                       // 10: akuity.system.v1.ComponentVersion
	(*GetArgoCDAgentSizeSpecResponse)(nil),         // 11: akuity.system.v1.GetArgoCDAgentSizeSpecResponse
	(*GetKargoAgentSizeSpecResponse)(nil),          // 12: akuity.system.v1.GetKargoAgentSizeSpecResponse
	(*ListArgoCDVersionsResponse)(nil),             // 13: akuity.system.v1.ListArgoCDVersionsResponse
	(*ListKargoVersionsResponse)(nil),              // 14: akuity.system.v1.ListKargoVersionsResponse
	(*ExtensionInfo)(nil),                          // 15: akuity.system.v1.ExtensionInfo
	(*ListArgoCDExtensionsResponse)(nil),           // 16: akuity.system.v1.ListArgoCDExtensionsResponse
	(*ListAgentVersionsResponse)(nil),              // 17: akuity.system.v1.ListAgentVersionsResponse
	(*Banner)(nil),                                 // 18: akuity.system.v1.Banner
	(*GetAnnouncementResponse)(nil),                // 19: akuity.system.v1.GetAnnouncementResponse
	(*ListValidWebhookEventsRequest)(nil),          // 20: akuity.system.v1.ListValidWebhookEventsRequest
	(*ListValidWebhookEventsResponse)(nil),         // 21: akuity.system.v1.ListValidWebhookEventsResponse
	(*ListArgoCDImageUpadterVersionsResponse)(nil), // 22: akuity.system.v1.ListArgoCDImageUpadterVersionsResponse
	(*GetArgoCDAgentSizeSpecResponse_Spec)(nil),    // 23: akuity.system.v1.GetArgoCDAgentSizeSpecResponse.Spec
	(*GetKargoAgentSizeSpecResponse_Spec)(nil),     // 24: akuity.system.v1.GetKargoAgentSizeSpecResponse.Spec
	(*ExtensionInfo_ExtensionVersion)(nil),         // 25: akuity.system.v1.ExtensionInfo.ExtensionVersion
	(*Banner_BannerLink)(nil),                      // 26: akuity.system.v1.Banner.BannerLink
	(*emptypb.Empty)(nil),                          // 27: google.protobuf.Empty
}
var file_system_v1_system_proto_depIdxs = []int32{
	6,  // 0: akuity.system.v1.GetSettingsResponse.name_config:type_name -> akuity.system.v1.NameConfig
	8,  // 1: akuity.system.v1.ComponentVersion.security_advisories:type_name -> akuity.system.v1.SecurityAdvisory
	9,  // 2: akuity.system.v1.ComponentVersion.ak_versions:type_name -> akuity.system.v1.AKVersion
	23, // 3: akuity.system.v1.GetArgoCDAgentSizeSpecResponse.small:type_name -> akuity.system.v1.GetArgoCDAgentSizeSpecResponse.Spec
	23, // 4: akuity.system.v1.GetArgoCDAgentSizeSpecResponse.medium:type_name -> akuity.system.v1.GetArgoCDAgentSizeSpecResponse.Spec
	23, // 5: akuity.system.v1.GetArgoCDAgentSizeSpecResponse.large:type_name -> akuity.system.v1.GetArgoCDAgentSizeSpecResponse.Spec
	24, // 6: akuity.system.v1.GetKargoAgentSizeSpecResponse.small:type_name -> akuity.system.v1.GetKargoAgentSizeSpecResponse.Spec
	24, // 7: akuity.system.v1.GetKargoAgentSizeSpecResponse.medium:type_name -> akuity.system.v1.GetKargoAgentSizeSpecResponse.Spec
	24, // 8: akuity.system.v1.GetKargoAgentSizeSpecResponse.large:type_name -> akuity.system.v1.GetKargoAgentSizeSpecResponse.Spec
	10, // 9: akuity.system.v1.ListArgoCDVersionsResponse.argocd_versions:type_name -> akuity.system.v1.ComponentVersion
	10, // 10: akuity.system.v1.ListKargoVersionsResponse.kargo_versions:type_name -> akuity.system.v1.ComponentVersion
	25, // 11: akuity.system.v1.ExtensionInfo.versions:type_name -> akuity.system.v1.ExtensionInfo.ExtensionVersion
	15, // 12: akuity.system.v1.ListArgoCDExtensionsResponse.extensions:type_name -> akuity.system.v1.ExtensionInfo
	26, // 13: akuity.system.v1.Banner.links:type_name -> akuity.system.v1.Banner.BannerLink
	18, // 14: akuity.system.v1.GetAnnouncementResponse.banner:type_name -> akuity.system.v1.Banner
	0,  // 15: akuity.system.v1.SystemService.GetVersion:input_type -> akuity.system.v1.GetVersionRequest
	2,  // 16: akuity.system.v1.SystemService.GetAgentVersion:input_type -> akuity.system.v1.GetAgentVersionRequest
	4,  // 17: akuity.system.v1.SystemService.GetSettings:input_type -> akuity.system.v1.GetSettingsRequest
	27, // 18: akuity.system.v1.SystemService.ListAgentVersions:input_type -> google.protobuf.Empty
	27, // 19: akuity.system.v1.SystemService.GetStatus:input_type -> google.protobuf.Empty
	27, // 20: akuity.system.v1.SystemService.ListArgoCDVersions:input_type -> google.protobuf.Empty
	27, // 21: akuity.system.v1.SystemService.ListKargoVersions:input_type -> google.protobuf.Empty
	27, // 22: akuity.system.v1.SystemService.ListArgoCDExtensions:input_type -> google.protobuf.Empty
	27, // 23: akuity.system.v1.SystemService.GetAnnouncement:input_type -> google.protobuf.Empty
	20, // 24: akuity.system.v1.SystemService.ListValidWebhookEvents:input_type -> akuity.system.v1.ListValidWebhookEventsRequest
	27, // 25: akuity.system.v1.SystemService.GetArgoCDAgentSizeSpec:input_type -> google.protobuf.Empty
	27, // 26: akuity.system.v1.SystemService.GetKargoAgentSizeSpec:input_type -> google.protobuf.Empty
	27, // 27: akuity.system.v1.SystemService.ListArgoCDImageUpadterVersions:input_type -> google.protobuf.Empty
	1,  // 28: akuity.system.v1.SystemService.GetVersion:output_type -> akuity.system.v1.GetVersionResponse
	3,  // 29: akuity.system.v1.SystemService.GetAgentVersion:output_type -> akuity.system.v1.GetAgentVersionResponse
	5,  // 30: akuity.system.v1.SystemService.GetSettings:output_type -> akuity.system.v1.GetSettingsResponse
	17, // 31: akuity.system.v1.SystemService.ListAgentVersions:output_type -> akuity.system.v1.ListAgentVersionsResponse
	7,  // 32: akuity.system.v1.SystemService.GetStatus:output_type -> akuity.system.v1.GetStatusResponse
	13, // 33: akuity.system.v1.SystemService.ListArgoCDVersions:output_type -> akuity.system.v1.ListArgoCDVersionsResponse
	14, // 34: akuity.system.v1.SystemService.ListKargoVersions:output_type -> akuity.system.v1.ListKargoVersionsResponse
	16, // 35: akuity.system.v1.SystemService.ListArgoCDExtensions:output_type -> akuity.system.v1.ListArgoCDExtensionsResponse
	19, // 36: akuity.system.v1.SystemService.GetAnnouncement:output_type -> akuity.system.v1.GetAnnouncementResponse
	21, // 37: akuity.system.v1.SystemService.ListValidWebhookEvents:output_type -> akuity.system.v1.ListValidWebhookEventsResponse
	11, // 38: akuity.system.v1.SystemService.GetArgoCDAgentSizeSpec:output_type -> akuity.system.v1.GetArgoCDAgentSizeSpecResponse
	12, // 39: akuity.system.v1.SystemService.GetKargoAgentSizeSpec:output_type -> akuity.system.v1.GetKargoAgentSizeSpecResponse
	22, // 40: akuity.system.v1.SystemService.ListArgoCDImageUpadterVersions:output_type -> akuity.system.v1.ListArgoCDImageUpadterVersionsResponse
	28, // [28:41] is the sub-list for method output_type
	15, // [15:28] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_system_v1_system_proto_init() }
func file_system_v1_system_proto_init() {
	if File_system_v1_system_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_system_v1_system_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityAdvisory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AKVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArgoCDAgentSizeSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKargoAgentSizeSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArgoCDVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKargoVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArgoCDExtensionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgentVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Banner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnnouncementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListValidWebhookEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListValidWebhookEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListArgoCDImageUpadterVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArgoCDAgentSizeSpecResponse_Spec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKargoAgentSizeSpecResponse_Spec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensionInfo_ExtensionVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_system_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Banner_BannerLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_system_v1_system_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_system_v1_system_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_system_v1_system_proto_goTypes,
		DependencyIndexes: file_system_v1_system_proto_depIdxs,
		MessageInfos:      file_system_v1_system_proto_msgTypes,
	}.Build()
	File_system_v1_system_proto = out.File
	file_system_v1_system_proto_rawDesc = nil
	file_system_v1_system_proto_goTypes = nil
	file_system_v1_system_proto_depIdxs = nil
}
